CompileCommand: compileonly MinimizedStdLibTest20Args.printf bool compileonly = true
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     607    1     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)
 total in heap  [0x0000028bc1180010,0x0000028bc11802b0] = 672
 relocation     [0x0000028bc1180170,0x0000028bc11801b8] = 72
 main code      [0x0000028bc11801c0,0x0000028bc11802aa] = 234
 stub code      [0x0000028bc11802aa,0x0000028bc11802b0] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80029d0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc11801c0:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc11801c5:   	testq	%rbx, %rbx
  0x0000028bc11801c8:   	je	0x40
  0x0000028bc11801ce:   	pushq	%rdi
  0x0000028bc11801cf:   	pushq	%r10
  0x0000028bc11801d1:   	movl	0x8(%rbx), %edi
  0x0000028bc11801d4:   	movabsq	$0x800000000, %r10
  0x0000028bc11801de:   	addq	%r10, %rdi
  0x0000028bc11801e1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11801eb:   	cmpq	(%r10), %rdi
  0x0000028bc11801ee:   	je	0x36
  0x0000028bc11801f4:   	movq	0x40(%rdi), %rdi
  0x0000028bc11801f8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180202:   	cmpq	(%r10), %rdi
  0x0000028bc1180205:   	je	0x1f
  0x0000028bc118020b:   	popq	%r10
  0x0000028bc118020d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118020e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180218:   	andq	$-0x10, %rsp
  0x0000028bc118021c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180226:   	callq	*%r10
  0x0000028bc1180229:   	hlt
 ;; L_ok:
  0x0000028bc118022a:   	popq	%r10
  0x0000028bc118022c:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118022d:   	movl	0xc(%rbx), %eax
  0x0000028bc1180230:   	shrl	$0x18, %eax
  0x0000028bc1180233:   	andl	$0xf, %eax
  0x0000028bc1180236:   	cmpl	$0x6, %eax
  0x0000028bc1180239:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118023f:   	movabsq	$0x28bb7e961a0, %rcx;   {external_word}
  0x0000028bc1180249:   	andq	$-0x10, %rsp
  0x0000028bc118024d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180257:   	callq	*%r10
  0x0000028bc118025a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118025b:   	movl	0x24(%rbx), %ebx
  0x0000028bc118025e:   	pushq	%r10
  0x0000028bc1180260:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118026a:   	cmpq	(%r10), %r12
  0x0000028bc118026d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180273:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118027d:   	andq	$-0x10, %rsp
  0x0000028bc1180281:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118028b:   	callq	*%r10
  0x0000028bc118028e:   	hlt
  0x0000028bc118028f:   	popq	%r10
  0x0000028bc1180291:   	shlq	$0x3, %rbx
  0x0000028bc1180295:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180299:   	testq	%rbx, %rbx
  0x0000028bc118029c:   	je	0x3
  0x0000028bc11802a2:   	jmpq	*0x58(%rbx)
  0x0000028bc11802a5:   	jmp	-0x518d8a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11802aa:   	hlt
  0x0000028bc11802ab:   	hlt
  0x0000028bc11802ac:   	hlt
  0x0000028bc11802ad:   	hlt
  0x0000028bc11802ae:   	hlt
  0x0000028bc11802af:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     790    1     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)
 total in heap  [0x0000028bc1180010,0x0000028bc11802b0] = 672
 relocation     [0x0000028bc1180170,0x0000028bc11801b8] = 72
 main code      [0x0000028bc11801c0,0x0000028bc11802aa] = 234
 stub code      [0x0000028bc11802aa,0x0000028bc11802b0] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80029d0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc11801c0:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc11801c5:   	testq	%rbx, %rbx
  0x0000028bc11801c8:   	je	0x40
  0x0000028bc11801ce:   	pushq	%rdi
  0x0000028bc11801cf:   	pushq	%r10
  0x0000028bc11801d1:   	movl	0x8(%rbx), %edi
  0x0000028bc11801d4:   	movabsq	$0x800000000, %r10
  0x0000028bc11801de:   	addq	%r10, %rdi
  0x0000028bc11801e1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11801eb:   	cmpq	(%r10), %rdi
  0x0000028bc11801ee:   	je	0x36
  0x0000028bc11801f4:   	movq	0x40(%rdi), %rdi
  0x0000028bc11801f8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180202:   	cmpq	(%r10), %rdi
  0x0000028bc1180205:   	je	0x1f
  0x0000028bc118020b:   	popq	%r10
  0x0000028bc118020d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118020e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180218:   	andq	$-0x10, %rsp
  0x0000028bc118021c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180226:   	callq	*%r10
  0x0000028bc1180229:   	hlt
 ;; L_ok:
  0x0000028bc118022a:   	popq	%r10
  0x0000028bc118022c:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118022d:   	movl	0xc(%rbx), %eax
  0x0000028bc1180230:   	shrl	$0x18, %eax
  0x0000028bc1180233:   	andl	$0xf, %eax
  0x0000028bc1180236:   	cmpl	$0x6, %eax
  0x0000028bc1180239:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118023f:   	movabsq	$0x28bb7e961a0, %rcx;   {external_word}
  0x0000028bc1180249:   	andq	$-0x10, %rsp
  0x0000028bc118024d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180257:   	callq	*%r10
  0x0000028bc118025a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118025b:   	movl	0x24(%rbx), %ebx
  0x0000028bc118025e:   	pushq	%r10
  0x0000028bc1180260:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118026a:   	cmpq	(%r10), %r12
  0x0000028bc118026d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180273:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118027d:   	andq	$-0x10, %rsp
  0x0000028bc1180281:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118028b:   	callq	*%r10
  0x0000028bc118028e:   	hlt
  0x0000028bc118028f:   	popq	%r10
  0x0000028bc1180291:   	shlq	$0x3, %rbx
  0x0000028bc1180295:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180299:   	testq	%rbx, %rbx
  0x0000028bc118029c:   	je	0x3
  0x0000028bc11802a2:   	jmpq	*0x58(%rbx)
  0x0000028bc11802a5:   	jmp	-0x518d8a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11802aa:   	hlt
  0x0000028bc11802ab:   	hlt
  0x0000028bc11802ac:   	hlt
  0x0000028bc11802ad:   	hlt
  0x0000028bc11802ae:   	hlt
  0x0000028bc11802af:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     857    2     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)
 total in heap  [0x0000028bc1180310,0x0000028bc11805a8] = 664
 relocation     [0x0000028bc1180470,0x0000028bc11804b8] = 72
 main code      [0x0000028bc11804c0,0x0000028bc11805a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8056f70} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc11804c0:   	testq	%r9, %r9
  0x0000028bc11804c3:   	je	0x41
  0x0000028bc11804c9:   	pushq	%rdi
  0x0000028bc11804ca:   	pushq	%r10
  0x0000028bc11804cc:   	movl	0x8(%r9), %edi
  0x0000028bc11804d0:   	movabsq	$0x800000000, %r10
  0x0000028bc11804da:   	addq	%r10, %rdi
  0x0000028bc11804dd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11804e7:   	cmpq	(%r10), %rdi
  0x0000028bc11804ea:   	je	0x36
  0x0000028bc11804f0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11804f4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11804fe:   	cmpq	(%r10), %rdi
  0x0000028bc1180501:   	je	0x1f
  0x0000028bc1180507:   	popq	%r10
  0x0000028bc1180509:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118050a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180514:   	andq	$-0x10, %rsp
  0x0000028bc1180518:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180522:   	callq	*%r10
  0x0000028bc1180525:   	hlt
 ;; L_ok:
  0x0000028bc1180526:   	popq	%r10
  0x0000028bc1180528:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1180529:   	movl	0xc(%r9), %eax
  0x0000028bc118052d:   	shrl	$0x18, %eax
  0x0000028bc1180530:   	andl	$0xf, %eax
  0x0000028bc1180533:   	cmpl	$0x6, %eax
  0x0000028bc1180536:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118053c:   	movabsq	$0x28bdbd315c0, %rcx;   {external_word}
  0x0000028bc1180546:   	andq	$-0x10, %rsp
  0x0000028bc118054a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180554:   	callq	*%r10
  0x0000028bc1180557:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1180558:   	movl	0x24(%r9), %ebx
  0x0000028bc118055c:   	pushq	%r10
  0x0000028bc118055e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180568:   	cmpq	(%r10), %r12
  0x0000028bc118056b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180571:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118057b:   	andq	$-0x10, %rsp
  0x0000028bc118057f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180589:   	callq	*%r10
  0x0000028bc118058c:   	hlt
  0x0000028bc118058d:   	popq	%r10
  0x0000028bc118058f:   	shlq	$0x3, %rbx
  0x0000028bc1180593:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180597:   	testq	%rbx, %rbx
  0x0000028bc118059a:   	je	0x3
  0x0000028bc11805a0:   	jmpq	*0x58(%rbx)
  0x0000028bc11805a3:   	jmp	-0x519088           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     860    2     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)
 total in heap  [0x0000028bc1180310,0x0000028bc11805a8] = 664
 relocation     [0x0000028bc1180470,0x0000028bc11804b8] = 72
 main code      [0x0000028bc11804c0,0x0000028bc11805a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8056f70} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc11804c0:   	testq	%r9, %r9
  0x0000028bc11804c3:   	je	0x41
  0x0000028bc11804c9:   	pushq	%rdi
  0x0000028bc11804ca:   	pushq	%r10
  0x0000028bc11804cc:   	movl	0x8(%r9), %edi
  0x0000028bc11804d0:   	movabsq	$0x800000000, %r10
  0x0000028bc11804da:   	addq	%r10, %rdi
  0x0000028bc11804dd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11804e7:   	cmpq	(%r10), %rdi
  0x0000028bc11804ea:   	je	0x36
  0x0000028bc11804f0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11804f4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11804fe:   	cmpq	(%r10), %rdi
  0x0000028bc1180501:   	je	0x1f
  0x0000028bc1180507:   	popq	%r10
  0x0000028bc1180509:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118050a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180514:   	andq	$-0x10, %rsp
  0x0000028bc1180518:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180522:   	callq	*%r10
  0x0000028bc1180525:   	hlt
 ;; L_ok:
  0x0000028bc1180526:   	popq	%r10
  0x0000028bc1180528:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1180529:   	movl	0xc(%r9), %eax
  0x0000028bc118052d:   	shrl	$0x18, %eax
  0x0000028bc1180530:   	andl	$0xf, %eax
  0x0000028bc1180533:   	cmpl	$0x6, %eax
  0x0000028bc1180536:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118053c:   	movabsq	$0x28bdbd315c0, %rcx;   {external_word}
  0x0000028bc1180546:   	andq	$-0x10, %rsp
  0x0000028bc118054a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180554:   	callq	*%r10
  0x0000028bc1180557:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1180558:   	movl	0x24(%r9), %ebx
  0x0000028bc118055c:   	pushq	%r10
  0x0000028bc118055e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180568:   	cmpq	(%r10), %r12
  0x0000028bc118056b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180571:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118057b:   	andq	$-0x10, %rsp
  0x0000028bc118057f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180589:   	callq	*%r10
  0x0000028bc118058c:   	hlt
  0x0000028bc118058d:   	popq	%r10
  0x0000028bc118058f:   	shlq	$0x3, %rbx
  0x0000028bc1180593:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180597:   	testq	%rbx, %rbx
  0x0000028bc118059a:   	je	0x3
  0x0000028bc11805a0:   	jmpq	*0x58(%rbx)
  0x0000028bc11805a3:   	jmp	-0x519088           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     874    3     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)
 total in heap  [0x0000028bc1180610,0x0000028bc1180888] = 632
 relocation     [0x0000028bc1180770,0x0000028bc11807b8] = 72
 main code      [0x0000028bc11807c0,0x0000028bc1180883] = 195
 stub code      [0x0000028bc1180883,0x0000028bc1180888] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd805ffc0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11807c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11807c3:   	pushq	%r10
  0x0000028bc11807c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11807cf:   	cmpq	(%r10), %r12
  0x0000028bc11807d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11807d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11807e2:   	andq	$-0x10, %rsp
  0x0000028bc11807e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11807f0:   	callq	*%r10
  0x0000028bc11807f3:   	hlt
  0x0000028bc11807f4:   	popq	%r10
  0x0000028bc11807f6:   	shlq	$0x3, %rbx
  0x0000028bc11807fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11807fd:   	pushq	%r10
  0x0000028bc11807ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180809:   	cmpq	(%r10), %r12
  0x0000028bc118080c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180812:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118081c:   	andq	$-0x10, %rsp
  0x0000028bc1180820:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118082a:   	callq	*%r10
  0x0000028bc118082d:   	hlt
  0x0000028bc118082e:   	popq	%r10
  0x0000028bc1180830:   	shlq	$0x3, %rbx
  0x0000028bc1180834:   	movl	0x24(%rbx), %ebx
  0x0000028bc1180837:   	pushq	%r10
  0x0000028bc1180839:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180843:   	cmpq	(%r10), %r12
  0x0000028bc1180846:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118084c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1180856:   	andq	$-0x10, %rsp
  0x0000028bc118085a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180864:   	callq	*%r10
  0x0000028bc1180867:   	hlt
  0x0000028bc1180868:   	popq	%r10
  0x0000028bc118086a:   	shlq	$0x3, %rbx
  0x0000028bc118086e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180872:   	testq	%rbx, %rbx
  0x0000028bc1180875:   	je	0x3
  0x0000028bc118087b:   	jmpq	*0x58(%rbx)
  0x0000028bc118087e:   	jmp	-0x519363           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1180883:   	hlt
  0x0000028bc1180884:   	hlt
  0x0000028bc1180885:   	hlt
  0x0000028bc1180886:   	hlt
  0x0000028bc1180887:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     878    3     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)
 total in heap  [0x0000028bc1180610,0x0000028bc1180888] = 632
 relocation     [0x0000028bc1180770,0x0000028bc11807b8] = 72
 main code      [0x0000028bc11807c0,0x0000028bc1180883] = 195
 stub code      [0x0000028bc1180883,0x0000028bc1180888] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd805ffc0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11807c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11807c3:   	pushq	%r10
  0x0000028bc11807c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11807cf:   	cmpq	(%r10), %r12
  0x0000028bc11807d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11807d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11807e2:   	andq	$-0x10, %rsp
  0x0000028bc11807e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11807f0:   	callq	*%r10
  0x0000028bc11807f3:   	hlt
  0x0000028bc11807f4:   	popq	%r10
  0x0000028bc11807f6:   	shlq	$0x3, %rbx
  0x0000028bc11807fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11807fd:   	pushq	%r10
  0x0000028bc11807ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180809:   	cmpq	(%r10), %r12
  0x0000028bc118080c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180812:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118081c:   	andq	$-0x10, %rsp
  0x0000028bc1180820:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118082a:   	callq	*%r10
  0x0000028bc118082d:   	hlt
  0x0000028bc118082e:   	popq	%r10
  0x0000028bc1180830:   	shlq	$0x3, %rbx
  0x0000028bc1180834:   	movl	0x24(%rbx), %ebx
  0x0000028bc1180837:   	pushq	%r10
  0x0000028bc1180839:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180843:   	cmpq	(%r10), %r12
  0x0000028bc1180846:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118084c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1180856:   	andq	$-0x10, %rsp
  0x0000028bc118085a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180864:   	callq	*%r10
  0x0000028bc1180867:   	hlt
  0x0000028bc1180868:   	popq	%r10
  0x0000028bc118086a:   	shlq	$0x3, %rbx
  0x0000028bc118086e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180872:   	testq	%rbx, %rbx
  0x0000028bc1180875:   	je	0x3
  0x0000028bc118087b:   	jmpq	*0x58(%rbx)
  0x0000028bc118087e:   	jmp	-0x519363           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1180883:   	hlt
  0x0000028bc1180884:   	hlt
  0x0000028bc1180885:   	hlt
  0x0000028bc1180886:   	hlt
  0x0000028bc1180887:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     883    4     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)
 total in heap  [0x0000028bc1180910,0x0000028bc1180d10] = 1024
 relocation     [0x0000028bc1180a70,0x0000028bc1180b00] = 144
 main code      [0x0000028bc1180b00,0x0000028bc1180d10] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8060178} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x0000028bc1180b00:   	movq	0x10(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1180b05:   	testq	%rbx, %rbx
  0x0000028bc1180b08:   	je	0x40
  0x0000028bc1180b0e:   	pushq	%rdi
  0x0000028bc1180b0f:   	pushq	%r10
  0x0000028bc1180b11:   	movl	0x8(%rbx), %edi
  0x0000028bc1180b14:   	movabsq	$0x800000000, %r10
  0x0000028bc1180b1e:   	addq	%r10, %rdi
  0x0000028bc1180b21:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180b2b:   	cmpq	(%r10), %rdi
  0x0000028bc1180b2e:   	je	0x36
  0x0000028bc1180b34:   	movq	0x40(%rdi), %rdi
  0x0000028bc1180b38:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180b42:   	cmpq	(%r10), %rdi
  0x0000028bc1180b45:   	je	0x1f
  0x0000028bc1180b4b:   	popq	%r10
  0x0000028bc1180b4d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1180b4e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180b58:   	andq	$-0x10, %rsp
  0x0000028bc1180b5c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180b66:   	callq	*%r10
  0x0000028bc1180b69:   	hlt
 ;; L_ok:
  0x0000028bc1180b6a:   	popq	%r10
  0x0000028bc1180b6c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1180b6d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1180b70:   	movl	0x8(%rdx), %r10d
  0x0000028bc1180b74:   	movabsq	$0x800000000, %r11
  0x0000028bc1180b7e:   	addq	%r11, %r10
  0x0000028bc1180b81:   	movl	0x18(%rbx), %r11d
  0x0000028bc1180b85:   	pushq	%r10
  0x0000028bc1180b87:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180b91:   	cmpq	(%r10), %r12
  0x0000028bc1180b94:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180b9a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1180ba4:   	andq	$-0x10, %rsp
  0x0000028bc1180ba8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180bb2:   	callq	*%r10
  0x0000028bc1180bb5:   	hlt
  0x0000028bc1180bb6:   	popq	%r10
  0x0000028bc1180bb8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1180bbc:   	testq	%r11, %r11
  0x0000028bc1180bbf:   	je	0x41
  0x0000028bc1180bc5:   	pushq	%rdi
  0x0000028bc1180bc6:   	pushq	%r10
  0x0000028bc1180bc8:   	movl	0x8(%r11), %edi
  0x0000028bc1180bcc:   	movabsq	$0x800000000, %r10
  0x0000028bc1180bd6:   	addq	%r10, %rdi
  0x0000028bc1180bd9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1180be3:   	cmpq	(%r10), %rdi
  0x0000028bc1180be6:   	je	0x36
  0x0000028bc1180bec:   	movq	0x40(%rdi), %rdi
  0x0000028bc1180bf0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1180bfa:   	cmpq	(%r10), %rdi
  0x0000028bc1180bfd:   	je	0x1f
  0x0000028bc1180c03:   	popq	%r10
  0x0000028bc1180c05:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1180c06:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1180c10:   	andq	$-0x10, %rsp
  0x0000028bc1180c14:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180c1e:   	callq	*%r10
  0x0000028bc1180c21:   	hlt
 ;; L_ok:
  0x0000028bc1180c22:   	popq	%r10
  0x0000028bc1180c24:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1180c25:   	movq	0x10(%r11), %r11
  0x0000028bc1180c29:   	cmpq	%r11, %r10
  0x0000028bc1180c2c:   	je	0x61
  0x0000028bc1180c32:   	movl	0x1c(%r11), %eax
  0x0000028bc1180c36:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1180c3a:   	je	0x53
  0x0000028bc1180c40:   	cmpl	$0x28, %eax
  0x0000028bc1180c43:   	jne	0x2e
  0x0000028bc1180c49:   	movq	%r11, %rax
  0x0000028bc1180c4c:   	pushq	%rcx
  0x0000028bc1180c4d:   	pushq	%rdi
  0x0000028bc1180c4e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1180c58:   	incl	(%rcx)
  0x0000028bc1180c5a:   	movq	0x30(%r10), %rdi
  0x0000028bc1180c5e:   	movl	(%rdi), %ecx
  0x0000028bc1180c60:   	addq	$0x8, %rdi
  0x0000028bc1180c64:   	testq	%rax, %rax
  0x0000028bc1180c67:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1180c6a:   	popq	%rdi
  0x0000028bc1180c6b:   	popq	%rcx
  0x0000028bc1180c6c:   	jne	0x9
  0x0000028bc1180c6e:   	movq	%r11, 0x28(%r10)
  0x0000028bc1180c72:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1180c77:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1180c81:   	andq	$-0x10, %rsp
  0x0000028bc1180c85:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180c8f:   	callq	*%r10
  0x0000028bc1180c92:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1180c93:   	movl	0xc(%rbx), %eax
  0x0000028bc1180c96:   	shrl	$0x18, %eax
  0x0000028bc1180c99:   	andl	$0xf, %eax
  0x0000028bc1180c9c:   	cmpl	$0x7, %eax
  0x0000028bc1180c9f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1180ca5:   	movabsq	$0x28bdbd325c0, %rcx;   {external_word}
  0x0000028bc1180caf:   	andq	$-0x10, %rsp
  0x0000028bc1180cb3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180cbd:   	callq	*%r10
  0x0000028bc1180cc0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1180cc1:   	movl	0x24(%rbx), %ebx
  0x0000028bc1180cc4:   	pushq	%r10
  0x0000028bc1180cc6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180cd0:   	cmpq	(%r10), %r12
  0x0000028bc1180cd3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180cd9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1180ce3:   	andq	$-0x10, %rsp
  0x0000028bc1180ce7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180cf1:   	callq	*%r10
  0x0000028bc1180cf4:   	hlt
  0x0000028bc1180cf5:   	popq	%r10
  0x0000028bc1180cf7:   	shlq	$0x3, %rbx
  0x0000028bc1180cfb:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180cff:   	testq	%rbx, %rbx
  0x0000028bc1180d02:   	je	0x3
  0x0000028bc1180d08:   	jmpq	*0x58(%rbx)
  0x0000028bc1180d0b:   	jmp	-0x5197f0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     889    4     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)
 total in heap  [0x0000028bc1180910,0x0000028bc1180d10] = 1024
 relocation     [0x0000028bc1180a70,0x0000028bc1180b00] = 144
 main code      [0x0000028bc1180b00,0x0000028bc1180d10] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8060178} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x0000028bc1180b00:   	movq	0x10(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1180b05:   	testq	%rbx, %rbx
  0x0000028bc1180b08:   	je	0x40
  0x0000028bc1180b0e:   	pushq	%rdi
  0x0000028bc1180b0f:   	pushq	%r10
  0x0000028bc1180b11:   	movl	0x8(%rbx), %edi
  0x0000028bc1180b14:   	movabsq	$0x800000000, %r10
  0x0000028bc1180b1e:   	addq	%r10, %rdi
  0x0000028bc1180b21:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180b2b:   	cmpq	(%r10), %rdi
  0x0000028bc1180b2e:   	je	0x36
  0x0000028bc1180b34:   	movq	0x40(%rdi), %rdi
  0x0000028bc1180b38:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180b42:   	cmpq	(%r10), %rdi
  0x0000028bc1180b45:   	je	0x1f
  0x0000028bc1180b4b:   	popq	%r10
  0x0000028bc1180b4d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1180b4e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180b58:   	andq	$-0x10, %rsp
  0x0000028bc1180b5c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180b66:   	callq	*%r10
  0x0000028bc1180b69:   	hlt
 ;; L_ok:
  0x0000028bc1180b6a:   	popq	%r10
  0x0000028bc1180b6c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1180b6d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1180b70:   	movl	0x8(%rdx), %r10d
  0x0000028bc1180b74:   	movabsq	$0x800000000, %r11
  0x0000028bc1180b7e:   	addq	%r11, %r10
  0x0000028bc1180b81:   	movl	0x18(%rbx), %r11d
  0x0000028bc1180b85:   	pushq	%r10
  0x0000028bc1180b87:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180b91:   	cmpq	(%r10), %r12
  0x0000028bc1180b94:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180b9a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1180ba4:   	andq	$-0x10, %rsp
  0x0000028bc1180ba8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180bb2:   	callq	*%r10
  0x0000028bc1180bb5:   	hlt
  0x0000028bc1180bb6:   	popq	%r10
  0x0000028bc1180bb8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1180bbc:   	testq	%r11, %r11
  0x0000028bc1180bbf:   	je	0x41
  0x0000028bc1180bc5:   	pushq	%rdi
  0x0000028bc1180bc6:   	pushq	%r10
  0x0000028bc1180bc8:   	movl	0x8(%r11), %edi
  0x0000028bc1180bcc:   	movabsq	$0x800000000, %r10
  0x0000028bc1180bd6:   	addq	%r10, %rdi
  0x0000028bc1180bd9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1180be3:   	cmpq	(%r10), %rdi
  0x0000028bc1180be6:   	je	0x36
  0x0000028bc1180bec:   	movq	0x40(%rdi), %rdi
  0x0000028bc1180bf0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1180bfa:   	cmpq	(%r10), %rdi
  0x0000028bc1180bfd:   	je	0x1f
  0x0000028bc1180c03:   	popq	%r10
  0x0000028bc1180c05:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1180c06:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1180c10:   	andq	$-0x10, %rsp
  0x0000028bc1180c14:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180c1e:   	callq	*%r10
  0x0000028bc1180c21:   	hlt
 ;; L_ok:
  0x0000028bc1180c22:   	popq	%r10
  0x0000028bc1180c24:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1180c25:   	movq	0x10(%r11), %r11
  0x0000028bc1180c29:   	cmpq	%r11, %r10
  0x0000028bc1180c2c:   	je	0x61
  0x0000028bc1180c32:   	movl	0x1c(%r11), %eax
  0x0000028bc1180c36:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1180c3a:   	je	0x53
  0x0000028bc1180c40:   	cmpl	$0x28, %eax
  0x0000028bc1180c43:   	jne	0x2e
  0x0000028bc1180c49:   	movq	%r11, %rax
  0x0000028bc1180c4c:   	pushq	%rcx
  0x0000028bc1180c4d:   	pushq	%rdi
  0x0000028bc1180c4e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1180c58:   	incl	(%rcx)
  0x0000028bc1180c5a:   	movq	0x30(%r10), %rdi
  0x0000028bc1180c5e:   	movl	(%rdi), %ecx
  0x0000028bc1180c60:   	addq	$0x8, %rdi
  0x0000028bc1180c64:   	testq	%rax, %rax
  0x0000028bc1180c67:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1180c6a:   	popq	%rdi
  0x0000028bc1180c6b:   	popq	%rcx
  0x0000028bc1180c6c:   	jne	0x9
  0x0000028bc1180c6e:   	movq	%r11, 0x28(%r10)
  0x0000028bc1180c72:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1180c77:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1180c81:   	andq	$-0x10, %rsp
  0x0000028bc1180c85:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180c8f:   	callq	*%r10
  0x0000028bc1180c92:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1180c93:   	movl	0xc(%rbx), %eax
  0x0000028bc1180c96:   	shrl	$0x18, %eax
  0x0000028bc1180c99:   	andl	$0xf, %eax
  0x0000028bc1180c9c:   	cmpl	$0x7, %eax
  0x0000028bc1180c9f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1180ca5:   	movabsq	$0x28bdbd325c0, %rcx;   {external_word}
  0x0000028bc1180caf:   	andq	$-0x10, %rsp
  0x0000028bc1180cb3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180cbd:   	callq	*%r10
  0x0000028bc1180cc0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1180cc1:   	movl	0x24(%rbx), %ebx
  0x0000028bc1180cc4:   	pushq	%r10
  0x0000028bc1180cc6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1180cd0:   	cmpq	(%r10), %r12
  0x0000028bc1180cd3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1180cd9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1180ce3:   	andq	$-0x10, %rsp
  0x0000028bc1180ce7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180cf1:   	callq	*%r10
  0x0000028bc1180cf4:   	hlt
  0x0000028bc1180cf5:   	popq	%r10
  0x0000028bc1180cf7:   	shlq	$0x3, %rbx
  0x0000028bc1180cfb:   	movq	0x10(%rbx), %rbx
  0x0000028bc1180cff:   	testq	%rbx, %rbx
  0x0000028bc1180d02:   	je	0x3
  0x0000028bc1180d08:   	jmpq	*0x58(%rbx)
  0x0000028bc1180d0b:   	jmp	-0x5197f0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     919    5     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)V (native)
 total in heap  [0x0000028bc1180d90,0x0000028bc1181190] = 1024
 relocation     [0x0000028bc1180ef0,0x0000028bc1180f80] = 144
 main code      [0x0000028bc1180f80,0x0000028bc118118b] = 523
 stub code      [0x0000028bc118118b,0x0000028bc1181190] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80851c0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1180f80:   	testq	%rdi, %rdi
  0x0000028bc1180f83:   	je	0x40
  0x0000028bc1180f89:   	pushq	%rdi
  0x0000028bc1180f8a:   	pushq	%r10
  0x0000028bc1180f8c:   	movl	0x8(%rdi), %edi
  0x0000028bc1180f8f:   	movabsq	$0x800000000, %r10
  0x0000028bc1180f99:   	addq	%r10, %rdi
  0x0000028bc1180f9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180fa6:   	cmpq	(%r10), %rdi
  0x0000028bc1180fa9:   	je	0x36
  0x0000028bc1180faf:   	movq	0x40(%rdi), %rdi
  0x0000028bc1180fb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180fbd:   	cmpq	(%r10), %rdi
  0x0000028bc1180fc0:   	je	0x1f
  0x0000028bc1180fc6:   	popq	%r10
  0x0000028bc1180fc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1180fc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180fd3:   	andq	$-0x10, %rsp
  0x0000028bc1180fd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180fe1:   	callq	*%r10
  0x0000028bc1180fe4:   	hlt
 ;; L_ok:
  0x0000028bc1180fe5:   	popq	%r10
  0x0000028bc1180fe7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1180fe8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1180feb:   	movl	0x8(%rdx), %r10d
  0x0000028bc1180fef:   	movabsq	$0x800000000, %r11
  0x0000028bc1180ff9:   	addq	%r11, %r10
  0x0000028bc1180ffc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1181000:   	pushq	%r10
  0x0000028bc1181002:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118100c:   	cmpq	(%r10), %r12
  0x0000028bc118100f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181015:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118101f:   	andq	$-0x10, %rsp
  0x0000028bc1181023:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118102d:   	callq	*%r10
  0x0000028bc1181030:   	hlt
  0x0000028bc1181031:   	popq	%r10
  0x0000028bc1181033:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1181037:   	testq	%r11, %r11
  0x0000028bc118103a:   	je	0x41
  0x0000028bc1181040:   	pushq	%rdi
  0x0000028bc1181041:   	pushq	%r10
  0x0000028bc1181043:   	movl	0x8(%r11), %edi
  0x0000028bc1181047:   	movabsq	$0x800000000, %r10
  0x0000028bc1181051:   	addq	%r10, %rdi
  0x0000028bc1181054:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118105e:   	cmpq	(%r10), %rdi
  0x0000028bc1181061:   	je	0x36
  0x0000028bc1181067:   	movq	0x40(%rdi), %rdi
  0x0000028bc118106b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1181075:   	cmpq	(%r10), %rdi
  0x0000028bc1181078:   	je	0x1f
  0x0000028bc118107e:   	popq	%r10
  0x0000028bc1181080:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1181081:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118108b:   	andq	$-0x10, %rsp
  0x0000028bc118108f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181099:   	callq	*%r10
  0x0000028bc118109c:   	hlt
 ;; L_ok:
  0x0000028bc118109d:   	popq	%r10
  0x0000028bc118109f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11810a0:   	movq	0x10(%r11), %r11
  0x0000028bc11810a4:   	cmpq	%r11, %r10
  0x0000028bc11810a7:   	je	0x61
  0x0000028bc11810ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11810b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11810b5:   	je	0x53
  0x0000028bc11810bb:   	cmpl	$0x28, %eax
  0x0000028bc11810be:   	jne	0x2e
  0x0000028bc11810c4:   	movq	%r11, %rax
  0x0000028bc11810c7:   	pushq	%rcx
  0x0000028bc11810c8:   	pushq	%rdi
  0x0000028bc11810c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11810d3:   	incl	(%rcx)
  0x0000028bc11810d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11810d9:   	movl	(%rdi), %ecx
  0x0000028bc11810db:   	addq	$0x8, %rdi
  0x0000028bc11810df:   	testq	%rax, %rax
  0x0000028bc11810e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11810e5:   	popq	%rdi
  0x0000028bc11810e6:   	popq	%rcx
  0x0000028bc11810e7:   	jne	0x9
  0x0000028bc11810e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11810ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11810f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11810fc:   	andq	$-0x10, %rsp
  0x0000028bc1181100:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118110a:   	callq	*%r10
  0x0000028bc118110d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118110e:   	movl	0xc(%rdi), %eax
  0x0000028bc1181111:   	shrl	$0x18, %eax
  0x0000028bc1181114:   	andl	$0xf, %eax
  0x0000028bc1181117:   	cmpl	$0x7, %eax
  0x0000028bc118111a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1181120:   	movabsq	$0x28bdbd32c40, %rcx;   {external_word}
  0x0000028bc118112a:   	andq	$-0x10, %rsp
  0x0000028bc118112e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181138:   	callq	*%r10
  0x0000028bc118113b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118113c:   	movl	0x24(%rdi), %ebx
  0x0000028bc118113f:   	pushq	%r10
  0x0000028bc1181141:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118114b:   	cmpq	(%r10), %r12
  0x0000028bc118114e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181154:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118115e:   	andq	$-0x10, %rsp
  0x0000028bc1181162:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118116c:   	callq	*%r10
  0x0000028bc118116f:   	hlt
  0x0000028bc1181170:   	popq	%r10
  0x0000028bc1181172:   	shlq	$0x3, %rbx
  0x0000028bc1181176:   	movq	0x10(%rbx), %rbx
  0x0000028bc118117a:   	testq	%rbx, %rbx
  0x0000028bc118117d:   	je	0x3
  0x0000028bc1181183:   	jmpq	*0x58(%rbx)
  0x0000028bc1181186:   	jmp	-0x519c6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118118b:   	hlt
  0x0000028bc118118c:   	hlt
  0x0000028bc118118d:   	hlt
  0x0000028bc118118e:   	hlt
  0x0000028bc118118f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     925    5     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)V (native)
 total in heap  [0x0000028bc1180d90,0x0000028bc1181190] = 1024
 relocation     [0x0000028bc1180ef0,0x0000028bc1180f80] = 144
 main code      [0x0000028bc1180f80,0x0000028bc118118b] = 523
 stub code      [0x0000028bc118118b,0x0000028bc1181190] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80851c0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1180f80:   	testq	%rdi, %rdi
  0x0000028bc1180f83:   	je	0x40
  0x0000028bc1180f89:   	pushq	%rdi
  0x0000028bc1180f8a:   	pushq	%r10
  0x0000028bc1180f8c:   	movl	0x8(%rdi), %edi
  0x0000028bc1180f8f:   	movabsq	$0x800000000, %r10
  0x0000028bc1180f99:   	addq	%r10, %rdi
  0x0000028bc1180f9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180fa6:   	cmpq	(%r10), %rdi
  0x0000028bc1180fa9:   	je	0x36
  0x0000028bc1180faf:   	movq	0x40(%rdi), %rdi
  0x0000028bc1180fb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1180fbd:   	cmpq	(%r10), %rdi
  0x0000028bc1180fc0:   	je	0x1f
  0x0000028bc1180fc6:   	popq	%r10
  0x0000028bc1180fc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1180fc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1180fd3:   	andq	$-0x10, %rsp
  0x0000028bc1180fd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1180fe1:   	callq	*%r10
  0x0000028bc1180fe4:   	hlt
 ;; L_ok:
  0x0000028bc1180fe5:   	popq	%r10
  0x0000028bc1180fe7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1180fe8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1180feb:   	movl	0x8(%rdx), %r10d
  0x0000028bc1180fef:   	movabsq	$0x800000000, %r11
  0x0000028bc1180ff9:   	addq	%r11, %r10
  0x0000028bc1180ffc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1181000:   	pushq	%r10
  0x0000028bc1181002:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118100c:   	cmpq	(%r10), %r12
  0x0000028bc118100f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181015:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118101f:   	andq	$-0x10, %rsp
  0x0000028bc1181023:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118102d:   	callq	*%r10
  0x0000028bc1181030:   	hlt
  0x0000028bc1181031:   	popq	%r10
  0x0000028bc1181033:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1181037:   	testq	%r11, %r11
  0x0000028bc118103a:   	je	0x41
  0x0000028bc1181040:   	pushq	%rdi
  0x0000028bc1181041:   	pushq	%r10
  0x0000028bc1181043:   	movl	0x8(%r11), %edi
  0x0000028bc1181047:   	movabsq	$0x800000000, %r10
  0x0000028bc1181051:   	addq	%r10, %rdi
  0x0000028bc1181054:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118105e:   	cmpq	(%r10), %rdi
  0x0000028bc1181061:   	je	0x36
  0x0000028bc1181067:   	movq	0x40(%rdi), %rdi
  0x0000028bc118106b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1181075:   	cmpq	(%r10), %rdi
  0x0000028bc1181078:   	je	0x1f
  0x0000028bc118107e:   	popq	%r10
  0x0000028bc1181080:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1181081:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118108b:   	andq	$-0x10, %rsp
  0x0000028bc118108f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181099:   	callq	*%r10
  0x0000028bc118109c:   	hlt
 ;; L_ok:
  0x0000028bc118109d:   	popq	%r10
  0x0000028bc118109f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11810a0:   	movq	0x10(%r11), %r11
  0x0000028bc11810a4:   	cmpq	%r11, %r10
  0x0000028bc11810a7:   	je	0x61
  0x0000028bc11810ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11810b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11810b5:   	je	0x53
  0x0000028bc11810bb:   	cmpl	$0x28, %eax
  0x0000028bc11810be:   	jne	0x2e
  0x0000028bc11810c4:   	movq	%r11, %rax
  0x0000028bc11810c7:   	pushq	%rcx
  0x0000028bc11810c8:   	pushq	%rdi
  0x0000028bc11810c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11810d3:   	incl	(%rcx)
  0x0000028bc11810d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11810d9:   	movl	(%rdi), %ecx
  0x0000028bc11810db:   	addq	$0x8, %rdi
  0x0000028bc11810df:   	testq	%rax, %rax
  0x0000028bc11810e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11810e5:   	popq	%rdi
  0x0000028bc11810e6:   	popq	%rcx
  0x0000028bc11810e7:   	jne	0x9
  0x0000028bc11810e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11810ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11810f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11810fc:   	andq	$-0x10, %rsp
  0x0000028bc1181100:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118110a:   	callq	*%r10
  0x0000028bc118110d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118110e:   	movl	0xc(%rdi), %eax
  0x0000028bc1181111:   	shrl	$0x18, %eax
  0x0000028bc1181114:   	andl	$0xf, %eax
  0x0000028bc1181117:   	cmpl	$0x7, %eax
  0x0000028bc118111a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1181120:   	movabsq	$0x28bdbd32c40, %rcx;   {external_word}
  0x0000028bc118112a:   	andq	$-0x10, %rsp
  0x0000028bc118112e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181138:   	callq	*%r10
  0x0000028bc118113b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118113c:   	movl	0x24(%rdi), %ebx
  0x0000028bc118113f:   	pushq	%r10
  0x0000028bc1181141:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118114b:   	cmpq	(%r10), %r12
  0x0000028bc118114e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181154:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118115e:   	andq	$-0x10, %rsp
  0x0000028bc1181162:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118116c:   	callq	*%r10
  0x0000028bc118116f:   	hlt
  0x0000028bc1181170:   	popq	%r10
  0x0000028bc1181172:   	shlq	$0x3, %rbx
  0x0000028bc1181176:   	movq	0x10(%rbx), %rbx
  0x0000028bc118117a:   	testq	%rbx, %rbx
  0x0000028bc118117d:   	je	0x3
  0x0000028bc1181183:   	jmpq	*0x58(%rbx)
  0x0000028bc1181186:   	jmp	-0x519c6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118118b:   	hlt
  0x0000028bc118118c:   	hlt
  0x0000028bc118118d:   	hlt
  0x0000028bc118118e:   	hlt
  0x0000028bc118118f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     949    6     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)L (native)
 total in heap  [0x0000028bc1181210,0x0000028bc1181488] = 632
 relocation     [0x0000028bc1181370,0x0000028bc11813b8] = 72
 main code      [0x0000028bc11813c0,0x0000028bc1181483] = 195
 stub code      [0x0000028bc1181483,0x0000028bc1181488] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8086860} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11813c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11813c3:   	pushq	%r10
  0x0000028bc11813c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11813cf:   	cmpq	(%r10), %r12
  0x0000028bc11813d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11813d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11813e2:   	andq	$-0x10, %rsp
  0x0000028bc11813e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11813f0:   	callq	*%r10
  0x0000028bc11813f3:   	hlt
  0x0000028bc11813f4:   	popq	%r10
  0x0000028bc11813f6:   	shlq	$0x3, %rbx
  0x0000028bc11813fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11813fd:   	pushq	%r10
  0x0000028bc11813ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181409:   	cmpq	(%r10), %r12
  0x0000028bc118140c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181412:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118141c:   	andq	$-0x10, %rsp
  0x0000028bc1181420:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118142a:   	callq	*%r10
  0x0000028bc118142d:   	hlt
  0x0000028bc118142e:   	popq	%r10
  0x0000028bc1181430:   	shlq	$0x3, %rbx
  0x0000028bc1181434:   	movl	0x24(%rbx), %ebx
  0x0000028bc1181437:   	pushq	%r10
  0x0000028bc1181439:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181443:   	cmpq	(%r10), %r12
  0x0000028bc1181446:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118144c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1181456:   	andq	$-0x10, %rsp
  0x0000028bc118145a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181464:   	callq	*%r10
  0x0000028bc1181467:   	hlt
  0x0000028bc1181468:   	popq	%r10
  0x0000028bc118146a:   	shlq	$0x3, %rbx
  0x0000028bc118146e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1181472:   	testq	%rbx, %rbx
  0x0000028bc1181475:   	je	0x3
  0x0000028bc118147b:   	jmpq	*0x58(%rbx)
  0x0000028bc118147e:   	jmp	-0x519f63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1181483:   	hlt
  0x0000028bc1181484:   	hlt
  0x0000028bc1181485:   	hlt
  0x0000028bc1181486:   	hlt
  0x0000028bc1181487:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     953    6     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)L (native)
 total in heap  [0x0000028bc1181210,0x0000028bc1181488] = 632
 relocation     [0x0000028bc1181370,0x0000028bc11813b8] = 72
 main code      [0x0000028bc11813c0,0x0000028bc1181483] = 195
 stub code      [0x0000028bc1181483,0x0000028bc1181488] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8086860} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11813c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11813c3:   	pushq	%r10
  0x0000028bc11813c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11813cf:   	cmpq	(%r10), %r12
  0x0000028bc11813d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11813d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11813e2:   	andq	$-0x10, %rsp
  0x0000028bc11813e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11813f0:   	callq	*%r10
  0x0000028bc11813f3:   	hlt
  0x0000028bc11813f4:   	popq	%r10
  0x0000028bc11813f6:   	shlq	$0x3, %rbx
  0x0000028bc11813fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11813fd:   	pushq	%r10
  0x0000028bc11813ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181409:   	cmpq	(%r10), %r12
  0x0000028bc118140c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181412:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118141c:   	andq	$-0x10, %rsp
  0x0000028bc1181420:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118142a:   	callq	*%r10
  0x0000028bc118142d:   	hlt
  0x0000028bc118142e:   	popq	%r10
  0x0000028bc1181430:   	shlq	$0x3, %rbx
  0x0000028bc1181434:   	movl	0x24(%rbx), %ebx
  0x0000028bc1181437:   	pushq	%r10
  0x0000028bc1181439:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181443:   	cmpq	(%r10), %r12
  0x0000028bc1181446:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118144c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1181456:   	andq	$-0x10, %rsp
  0x0000028bc118145a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181464:   	callq	*%r10
  0x0000028bc1181467:   	hlt
  0x0000028bc1181468:   	popq	%r10
  0x0000028bc118146a:   	shlq	$0x3, %rbx
  0x0000028bc118146e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1181472:   	testq	%rbx, %rbx
  0x0000028bc1181475:   	je	0x3
  0x0000028bc118147b:   	jmpq	*0x58(%rbx)
  0x0000028bc118147e:   	jmp	-0x519f63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1181483:   	hlt
  0x0000028bc1181484:   	hlt
  0x0000028bc1181485:   	hlt
  0x0000028bc1181486:   	hlt
  0x0000028bc1181487:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)     956    7     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)L (native)
 total in heap  [0x0000028bc1181510,0x0000028bc1181910] = 1024
 relocation     [0x0000028bc1181670,0x0000028bc1181700] = 144
 main code      [0x0000028bc1181700,0x0000028bc118190b] = 523
 stub code      [0x0000028bc118190b,0x0000028bc1181910] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8086998} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1181700:   	testq	%rdi, %rdi
  0x0000028bc1181703:   	je	0x40
  0x0000028bc1181709:   	pushq	%rdi
  0x0000028bc118170a:   	pushq	%r10
  0x0000028bc118170c:   	movl	0x8(%rdi), %edi
  0x0000028bc118170f:   	movabsq	$0x800000000, %r10
  0x0000028bc1181719:   	addq	%r10, %rdi
  0x0000028bc118171c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1181726:   	cmpq	(%r10), %rdi
  0x0000028bc1181729:   	je	0x36
  0x0000028bc118172f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1181733:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118173d:   	cmpq	(%r10), %rdi
  0x0000028bc1181740:   	je	0x1f
  0x0000028bc1181746:   	popq	%r10
  0x0000028bc1181748:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1181749:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1181753:   	andq	$-0x10, %rsp
  0x0000028bc1181757:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181761:   	callq	*%r10
  0x0000028bc1181764:   	hlt
 ;; L_ok:
  0x0000028bc1181765:   	popq	%r10
  0x0000028bc1181767:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181768:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118176b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118176f:   	movabsq	$0x800000000, %r11
  0x0000028bc1181779:   	addq	%r11, %r10
  0x0000028bc118177c:   	movl	0x18(%rdi), %r11d
  0x0000028bc1181780:   	pushq	%r10
  0x0000028bc1181782:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118178c:   	cmpq	(%r10), %r12
  0x0000028bc118178f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181795:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118179f:   	andq	$-0x10, %rsp
  0x0000028bc11817a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11817ad:   	callq	*%r10
  0x0000028bc11817b0:   	hlt
  0x0000028bc11817b1:   	popq	%r10
  0x0000028bc11817b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11817b7:   	testq	%r11, %r11
  0x0000028bc11817ba:   	je	0x41
  0x0000028bc11817c0:   	pushq	%rdi
  0x0000028bc11817c1:   	pushq	%r10
  0x0000028bc11817c3:   	movl	0x8(%r11), %edi
  0x0000028bc11817c7:   	movabsq	$0x800000000, %r10
  0x0000028bc11817d1:   	addq	%r10, %rdi
  0x0000028bc11817d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11817de:   	cmpq	(%r10), %rdi
  0x0000028bc11817e1:   	je	0x36
  0x0000028bc11817e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc11817eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11817f5:   	cmpq	(%r10), %rdi
  0x0000028bc11817f8:   	je	0x1f
  0x0000028bc11817fe:   	popq	%r10
  0x0000028bc1181800:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1181801:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118180b:   	andq	$-0x10, %rsp
  0x0000028bc118180f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181819:   	callq	*%r10
  0x0000028bc118181c:   	hlt
 ;; L_ok:
  0x0000028bc118181d:   	popq	%r10
  0x0000028bc118181f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181820:   	movq	0x10(%r11), %r11
  0x0000028bc1181824:   	cmpq	%r11, %r10
  0x0000028bc1181827:   	je	0x61
  0x0000028bc118182d:   	movl	0x1c(%r11), %eax
  0x0000028bc1181831:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1181835:   	je	0x53
  0x0000028bc118183b:   	cmpl	$0x28, %eax
  0x0000028bc118183e:   	jne	0x2e
  0x0000028bc1181844:   	movq	%r11, %rax
  0x0000028bc1181847:   	pushq	%rcx
  0x0000028bc1181848:   	pushq	%rdi
  0x0000028bc1181849:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1181853:   	incl	(%rcx)
  0x0000028bc1181855:   	movq	0x30(%r10), %rdi
  0x0000028bc1181859:   	movl	(%rdi), %ecx
  0x0000028bc118185b:   	addq	$0x8, %rdi
  0x0000028bc118185f:   	testq	%rax, %rax
  0x0000028bc1181862:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1181865:   	popq	%rdi
  0x0000028bc1181866:   	popq	%rcx
  0x0000028bc1181867:   	jne	0x9
  0x0000028bc1181869:   	movq	%r11, 0x28(%r10)
  0x0000028bc118186d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1181872:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118187c:   	andq	$-0x10, %rsp
  0x0000028bc1181880:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118188a:   	callq	*%r10
  0x0000028bc118188d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118188e:   	movl	0xc(%rdi), %eax
  0x0000028bc1181891:   	shrl	$0x18, %eax
  0x0000028bc1181894:   	andl	$0xf, %eax
  0x0000028bc1181897:   	cmpl	$0x7, %eax
  0x0000028bc118189a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11818a0:   	movabsq	$0x28bdbd31a40, %rcx;   {external_word}
  0x0000028bc11818aa:   	andq	$-0x10, %rsp
  0x0000028bc11818ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11818b8:   	callq	*%r10
  0x0000028bc11818bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11818bc:   	movl	0x24(%rdi), %ebx
  0x0000028bc11818bf:   	pushq	%r10
  0x0000028bc11818c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11818cb:   	cmpq	(%r10), %r12
  0x0000028bc11818ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11818d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11818de:   	andq	$-0x10, %rsp
  0x0000028bc11818e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11818ec:   	callq	*%r10
  0x0000028bc11818ef:   	hlt
  0x0000028bc11818f0:   	popq	%r10
  0x0000028bc11818f2:   	shlq	$0x3, %rbx
  0x0000028bc11818f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc11818fa:   	testq	%rbx, %rbx
  0x0000028bc11818fd:   	je	0x3
  0x0000028bc1181903:   	jmpq	*0x58(%rbx)
  0x0000028bc1181906:   	jmp	-0x51a3eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118190b:   	hlt
  0x0000028bc118190c:   	hlt
  0x0000028bc118190d:   	hlt
  0x0000028bc118190e:   	hlt
  0x0000028bc118190f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)     961    7     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)L (native)
 total in heap  [0x0000028bc1181510,0x0000028bc1181910] = 1024
 relocation     [0x0000028bc1181670,0x0000028bc1181700] = 144
 main code      [0x0000028bc1181700,0x0000028bc118190b] = 523
 stub code      [0x0000028bc118190b,0x0000028bc1181910] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8086998} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1181700:   	testq	%rdi, %rdi
  0x0000028bc1181703:   	je	0x40
  0x0000028bc1181709:   	pushq	%rdi
  0x0000028bc118170a:   	pushq	%r10
  0x0000028bc118170c:   	movl	0x8(%rdi), %edi
  0x0000028bc118170f:   	movabsq	$0x800000000, %r10
  0x0000028bc1181719:   	addq	%r10, %rdi
  0x0000028bc118171c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1181726:   	cmpq	(%r10), %rdi
  0x0000028bc1181729:   	je	0x36
  0x0000028bc118172f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1181733:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118173d:   	cmpq	(%r10), %rdi
  0x0000028bc1181740:   	je	0x1f
  0x0000028bc1181746:   	popq	%r10
  0x0000028bc1181748:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1181749:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1181753:   	andq	$-0x10, %rsp
  0x0000028bc1181757:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181761:   	callq	*%r10
  0x0000028bc1181764:   	hlt
 ;; L_ok:
  0x0000028bc1181765:   	popq	%r10
  0x0000028bc1181767:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181768:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118176b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118176f:   	movabsq	$0x800000000, %r11
  0x0000028bc1181779:   	addq	%r11, %r10
  0x0000028bc118177c:   	movl	0x18(%rdi), %r11d
  0x0000028bc1181780:   	pushq	%r10
  0x0000028bc1181782:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118178c:   	cmpq	(%r10), %r12
  0x0000028bc118178f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181795:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118179f:   	andq	$-0x10, %rsp
  0x0000028bc11817a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11817ad:   	callq	*%r10
  0x0000028bc11817b0:   	hlt
  0x0000028bc11817b1:   	popq	%r10
  0x0000028bc11817b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11817b7:   	testq	%r11, %r11
  0x0000028bc11817ba:   	je	0x41
  0x0000028bc11817c0:   	pushq	%rdi
  0x0000028bc11817c1:   	pushq	%r10
  0x0000028bc11817c3:   	movl	0x8(%r11), %edi
  0x0000028bc11817c7:   	movabsq	$0x800000000, %r10
  0x0000028bc11817d1:   	addq	%r10, %rdi
  0x0000028bc11817d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11817de:   	cmpq	(%r10), %rdi
  0x0000028bc11817e1:   	je	0x36
  0x0000028bc11817e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc11817eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11817f5:   	cmpq	(%r10), %rdi
  0x0000028bc11817f8:   	je	0x1f
  0x0000028bc11817fe:   	popq	%r10
  0x0000028bc1181800:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1181801:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118180b:   	andq	$-0x10, %rsp
  0x0000028bc118180f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181819:   	callq	*%r10
  0x0000028bc118181c:   	hlt
 ;; L_ok:
  0x0000028bc118181d:   	popq	%r10
  0x0000028bc118181f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181820:   	movq	0x10(%r11), %r11
  0x0000028bc1181824:   	cmpq	%r11, %r10
  0x0000028bc1181827:   	je	0x61
  0x0000028bc118182d:   	movl	0x1c(%r11), %eax
  0x0000028bc1181831:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1181835:   	je	0x53
  0x0000028bc118183b:   	cmpl	$0x28, %eax
  0x0000028bc118183e:   	jne	0x2e
  0x0000028bc1181844:   	movq	%r11, %rax
  0x0000028bc1181847:   	pushq	%rcx
  0x0000028bc1181848:   	pushq	%rdi
  0x0000028bc1181849:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1181853:   	incl	(%rcx)
  0x0000028bc1181855:   	movq	0x30(%r10), %rdi
  0x0000028bc1181859:   	movl	(%rdi), %ecx
  0x0000028bc118185b:   	addq	$0x8, %rdi
  0x0000028bc118185f:   	testq	%rax, %rax
  0x0000028bc1181862:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1181865:   	popq	%rdi
  0x0000028bc1181866:   	popq	%rcx
  0x0000028bc1181867:   	jne	0x9
  0x0000028bc1181869:   	movq	%r11, 0x28(%r10)
  0x0000028bc118186d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1181872:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118187c:   	andq	$-0x10, %rsp
  0x0000028bc1181880:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118188a:   	callq	*%r10
  0x0000028bc118188d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118188e:   	movl	0xc(%rdi), %eax
  0x0000028bc1181891:   	shrl	$0x18, %eax
  0x0000028bc1181894:   	andl	$0xf, %eax
  0x0000028bc1181897:   	cmpl	$0x7, %eax
  0x0000028bc118189a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11818a0:   	movabsq	$0x28bdbd31a40, %rcx;   {external_word}
  0x0000028bc11818aa:   	andq	$-0x10, %rsp
  0x0000028bc11818ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11818b8:   	callq	*%r10
  0x0000028bc11818bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11818bc:   	movl	0x24(%rdi), %ebx
  0x0000028bc11818bf:   	pushq	%r10
  0x0000028bc11818c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11818cb:   	cmpq	(%r10), %r12
  0x0000028bc11818ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11818d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11818de:   	andq	$-0x10, %rsp
  0x0000028bc11818e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11818ec:   	callq	*%r10
  0x0000028bc11818ef:   	hlt
  0x0000028bc11818f0:   	popq	%r10
  0x0000028bc11818f2:   	shlq	$0x3, %rbx
  0x0000028bc11818f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc11818fa:   	testq	%rbx, %rbx
  0x0000028bc11818fd:   	je	0x3
  0x0000028bc1181903:   	jmpq	*0x58(%rbx)
  0x0000028bc1181906:   	jmp	-0x51a3eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118190b:   	hlt
  0x0000028bc118190c:   	hlt
  0x0000028bc118190d:   	hlt
  0x0000028bc118190e:   	hlt
  0x0000028bc118190f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1018    8     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)L (native)
 total in heap  [0x0000028bc1181990,0x0000028bc1181d90] = 1024
 relocation     [0x0000028bc1181af0,0x0000028bc1181b80] = 144
 main code      [0x0000028bc1181b80,0x0000028bc1181d8e] = 526
 stub code      [0x0000028bc1181d8e,0x0000028bc1181d90] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80bdcf8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1181b80:   	testq	%r9, %r9
  0x0000028bc1181b83:   	je	0x41
  0x0000028bc1181b89:   	pushq	%rdi
  0x0000028bc1181b8a:   	pushq	%r10
  0x0000028bc1181b8c:   	movl	0x8(%r9), %edi
  0x0000028bc1181b90:   	movabsq	$0x800000000, %r10
  0x0000028bc1181b9a:   	addq	%r10, %rdi
  0x0000028bc1181b9d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1181ba7:   	cmpq	(%r10), %rdi
  0x0000028bc1181baa:   	je	0x36
  0x0000028bc1181bb0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1181bb4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1181bbe:   	cmpq	(%r10), %rdi
  0x0000028bc1181bc1:   	je	0x1f
  0x0000028bc1181bc7:   	popq	%r10
  0x0000028bc1181bc9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1181bca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1181bd4:   	andq	$-0x10, %rsp
  0x0000028bc1181bd8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181be2:   	callq	*%r10
  0x0000028bc1181be5:   	hlt
 ;; L_ok:
  0x0000028bc1181be6:   	popq	%r10
  0x0000028bc1181be8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181be9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1181bec:   	movl	0x8(%rdx), %r10d
  0x0000028bc1181bf0:   	movabsq	$0x800000000, %r11
  0x0000028bc1181bfa:   	addq	%r11, %r10
  0x0000028bc1181bfd:   	movl	0x18(%r9), %r11d
  0x0000028bc1181c01:   	pushq	%r10
  0x0000028bc1181c03:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181c0d:   	cmpq	(%r10), %r12
  0x0000028bc1181c10:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181c16:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1181c20:   	andq	$-0x10, %rsp
  0x0000028bc1181c24:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181c2e:   	callq	*%r10
  0x0000028bc1181c31:   	hlt
  0x0000028bc1181c32:   	popq	%r10
  0x0000028bc1181c34:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1181c38:   	testq	%r11, %r11
  0x0000028bc1181c3b:   	je	0x41
  0x0000028bc1181c41:   	pushq	%rdi
  0x0000028bc1181c42:   	pushq	%r10
  0x0000028bc1181c44:   	movl	0x8(%r11), %edi
  0x0000028bc1181c48:   	movabsq	$0x800000000, %r10
  0x0000028bc1181c52:   	addq	%r10, %rdi
  0x0000028bc1181c55:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1181c5f:   	cmpq	(%r10), %rdi
  0x0000028bc1181c62:   	je	0x36
  0x0000028bc1181c68:   	movq	0x40(%rdi), %rdi
  0x0000028bc1181c6c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1181c76:   	cmpq	(%r10), %rdi
  0x0000028bc1181c79:   	je	0x1f
  0x0000028bc1181c7f:   	popq	%r10
  0x0000028bc1181c81:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1181c82:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1181c8c:   	andq	$-0x10, %rsp
  0x0000028bc1181c90:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181c9a:   	callq	*%r10
  0x0000028bc1181c9d:   	hlt
 ;; L_ok:
  0x0000028bc1181c9e:   	popq	%r10
  0x0000028bc1181ca0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181ca1:   	movq	0x10(%r11), %r11
  0x0000028bc1181ca5:   	cmpq	%r11, %r10
  0x0000028bc1181ca8:   	je	0x61
  0x0000028bc1181cae:   	movl	0x1c(%r11), %eax
  0x0000028bc1181cb2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1181cb6:   	je	0x53
  0x0000028bc1181cbc:   	cmpl	$0x28, %eax
  0x0000028bc1181cbf:   	jne	0x2e
  0x0000028bc1181cc5:   	movq	%r11, %rax
  0x0000028bc1181cc8:   	pushq	%rcx
  0x0000028bc1181cc9:   	pushq	%rdi
  0x0000028bc1181cca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1181cd4:   	incl	(%rcx)
  0x0000028bc1181cd6:   	movq	0x30(%r10), %rdi
  0x0000028bc1181cda:   	movl	(%rdi), %ecx
  0x0000028bc1181cdc:   	addq	$0x8, %rdi
  0x0000028bc1181ce0:   	testq	%rax, %rax
  0x0000028bc1181ce3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1181ce6:   	popq	%rdi
  0x0000028bc1181ce7:   	popq	%rcx
  0x0000028bc1181ce8:   	jne	0x9
  0x0000028bc1181cea:   	movq	%r11, 0x28(%r10)
  0x0000028bc1181cee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1181cf3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1181cfd:   	andq	$-0x10, %rsp
  0x0000028bc1181d01:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181d0b:   	callq	*%r10
  0x0000028bc1181d0e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1181d0f:   	movl	0xc(%r9), %eax
  0x0000028bc1181d13:   	shrl	$0x18, %eax
  0x0000028bc1181d16:   	andl	$0xf, %eax
  0x0000028bc1181d19:   	cmpl	$0x7, %eax
  0x0000028bc1181d1c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1181d22:   	movabsq	$0x28bdbd332c0, %rcx;   {external_word}
  0x0000028bc1181d2c:   	andq	$-0x10, %rsp
  0x0000028bc1181d30:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181d3a:   	callq	*%r10
  0x0000028bc1181d3d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1181d3e:   	movl	0x24(%r9), %ebx
  0x0000028bc1181d42:   	pushq	%r10
  0x0000028bc1181d44:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181d4e:   	cmpq	(%r10), %r12
  0x0000028bc1181d51:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181d57:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1181d61:   	andq	$-0x10, %rsp
  0x0000028bc1181d65:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181d6f:   	callq	*%r10
  0x0000028bc1181d72:   	hlt
  0x0000028bc1181d73:   	popq	%r10
  0x0000028bc1181d75:   	shlq	$0x3, %rbx
  0x0000028bc1181d79:   	movq	0x10(%rbx), %rbx
  0x0000028bc1181d7d:   	testq	%rbx, %rbx
  0x0000028bc1181d80:   	je	0x3
  0x0000028bc1181d86:   	jmpq	*0x58(%rbx)
  0x0000028bc1181d89:   	jmp	-0x51a86e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1181d8e:   	hlt
  0x0000028bc1181d8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1023    8     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)L (native)
 total in heap  [0x0000028bc1181990,0x0000028bc1181d90] = 1024
 relocation     [0x0000028bc1181af0,0x0000028bc1181b80] = 144
 main code      [0x0000028bc1181b80,0x0000028bc1181d8e] = 526
 stub code      [0x0000028bc1181d8e,0x0000028bc1181d90] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80bdcf8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1181b80:   	testq	%r9, %r9
  0x0000028bc1181b83:   	je	0x41
  0x0000028bc1181b89:   	pushq	%rdi
  0x0000028bc1181b8a:   	pushq	%r10
  0x0000028bc1181b8c:   	movl	0x8(%r9), %edi
  0x0000028bc1181b90:   	movabsq	$0x800000000, %r10
  0x0000028bc1181b9a:   	addq	%r10, %rdi
  0x0000028bc1181b9d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1181ba7:   	cmpq	(%r10), %rdi
  0x0000028bc1181baa:   	je	0x36
  0x0000028bc1181bb0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1181bb4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1181bbe:   	cmpq	(%r10), %rdi
  0x0000028bc1181bc1:   	je	0x1f
  0x0000028bc1181bc7:   	popq	%r10
  0x0000028bc1181bc9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1181bca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1181bd4:   	andq	$-0x10, %rsp
  0x0000028bc1181bd8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181be2:   	callq	*%r10
  0x0000028bc1181be5:   	hlt
 ;; L_ok:
  0x0000028bc1181be6:   	popq	%r10
  0x0000028bc1181be8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181be9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1181bec:   	movl	0x8(%rdx), %r10d
  0x0000028bc1181bf0:   	movabsq	$0x800000000, %r11
  0x0000028bc1181bfa:   	addq	%r11, %r10
  0x0000028bc1181bfd:   	movl	0x18(%r9), %r11d
  0x0000028bc1181c01:   	pushq	%r10
  0x0000028bc1181c03:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181c0d:   	cmpq	(%r10), %r12
  0x0000028bc1181c10:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181c16:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1181c20:   	andq	$-0x10, %rsp
  0x0000028bc1181c24:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181c2e:   	callq	*%r10
  0x0000028bc1181c31:   	hlt
  0x0000028bc1181c32:   	popq	%r10
  0x0000028bc1181c34:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1181c38:   	testq	%r11, %r11
  0x0000028bc1181c3b:   	je	0x41
  0x0000028bc1181c41:   	pushq	%rdi
  0x0000028bc1181c42:   	pushq	%r10
  0x0000028bc1181c44:   	movl	0x8(%r11), %edi
  0x0000028bc1181c48:   	movabsq	$0x800000000, %r10
  0x0000028bc1181c52:   	addq	%r10, %rdi
  0x0000028bc1181c55:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1181c5f:   	cmpq	(%r10), %rdi
  0x0000028bc1181c62:   	je	0x36
  0x0000028bc1181c68:   	movq	0x40(%rdi), %rdi
  0x0000028bc1181c6c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1181c76:   	cmpq	(%r10), %rdi
  0x0000028bc1181c79:   	je	0x1f
  0x0000028bc1181c7f:   	popq	%r10
  0x0000028bc1181c81:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1181c82:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1181c8c:   	andq	$-0x10, %rsp
  0x0000028bc1181c90:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181c9a:   	callq	*%r10
  0x0000028bc1181c9d:   	hlt
 ;; L_ok:
  0x0000028bc1181c9e:   	popq	%r10
  0x0000028bc1181ca0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1181ca1:   	movq	0x10(%r11), %r11
  0x0000028bc1181ca5:   	cmpq	%r11, %r10
  0x0000028bc1181ca8:   	je	0x61
  0x0000028bc1181cae:   	movl	0x1c(%r11), %eax
  0x0000028bc1181cb2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1181cb6:   	je	0x53
  0x0000028bc1181cbc:   	cmpl	$0x28, %eax
  0x0000028bc1181cbf:   	jne	0x2e
  0x0000028bc1181cc5:   	movq	%r11, %rax
  0x0000028bc1181cc8:   	pushq	%rcx
  0x0000028bc1181cc9:   	pushq	%rdi
  0x0000028bc1181cca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1181cd4:   	incl	(%rcx)
  0x0000028bc1181cd6:   	movq	0x30(%r10), %rdi
  0x0000028bc1181cda:   	movl	(%rdi), %ecx
  0x0000028bc1181cdc:   	addq	$0x8, %rdi
  0x0000028bc1181ce0:   	testq	%rax, %rax
  0x0000028bc1181ce3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1181ce6:   	popq	%rdi
  0x0000028bc1181ce7:   	popq	%rcx
  0x0000028bc1181ce8:   	jne	0x9
  0x0000028bc1181cea:   	movq	%r11, 0x28(%r10)
  0x0000028bc1181cee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1181cf3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1181cfd:   	andq	$-0x10, %rsp
  0x0000028bc1181d01:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181d0b:   	callq	*%r10
  0x0000028bc1181d0e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1181d0f:   	movl	0xc(%r9), %eax
  0x0000028bc1181d13:   	shrl	$0x18, %eax
  0x0000028bc1181d16:   	andl	$0xf, %eax
  0x0000028bc1181d19:   	cmpl	$0x7, %eax
  0x0000028bc1181d1c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1181d22:   	movabsq	$0x28bdbd332c0, %rcx;   {external_word}
  0x0000028bc1181d2c:   	andq	$-0x10, %rsp
  0x0000028bc1181d30:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181d3a:   	callq	*%r10
  0x0000028bc1181d3d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1181d3e:   	movl	0x24(%r9), %ebx
  0x0000028bc1181d42:   	pushq	%r10
  0x0000028bc1181d44:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1181d4e:   	cmpq	(%r10), %r12
  0x0000028bc1181d51:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1181d57:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1181d61:   	andq	$-0x10, %rsp
  0x0000028bc1181d65:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1181d6f:   	callq	*%r10
  0x0000028bc1181d72:   	hlt
  0x0000028bc1181d73:   	popq	%r10
  0x0000028bc1181d75:   	shlq	$0x3, %rbx
  0x0000028bc1181d79:   	movq	0x10(%rbx), %rbx
  0x0000028bc1181d7d:   	testq	%rbx, %rbx
  0x0000028bc1181d80:   	je	0x3
  0x0000028bc1181d86:   	jmpq	*0x58(%rbx)
  0x0000028bc1181d89:   	jmp	-0x51a86e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1181d8e:   	hlt
  0x0000028bc1181d8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1091    9     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)V (native)
 total in heap  [0x0000028bc1181e10,0x0000028bc1182210] = 1024
 relocation     [0x0000028bc1181f70,0x0000028bc1182000] = 144
 main code      [0x0000028bc1182000,0x0000028bc118220e] = 526
 stub code      [0x0000028bc118220e,0x0000028bc1182210] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80e5c60} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182000:   	testq	%r9, %r9
  0x0000028bc1182003:   	je	0x41
  0x0000028bc1182009:   	pushq	%rdi
  0x0000028bc118200a:   	pushq	%r10
  0x0000028bc118200c:   	movl	0x8(%r9), %edi
  0x0000028bc1182010:   	movabsq	$0x800000000, %r10
  0x0000028bc118201a:   	addq	%r10, %rdi
  0x0000028bc118201d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182027:   	cmpq	(%r10), %rdi
  0x0000028bc118202a:   	je	0x36
  0x0000028bc1182030:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182034:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118203e:   	cmpq	(%r10), %rdi
  0x0000028bc1182041:   	je	0x1f
  0x0000028bc1182047:   	popq	%r10
  0x0000028bc1182049:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118204a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182054:   	andq	$-0x10, %rsp
  0x0000028bc1182058:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182062:   	callq	*%r10
  0x0000028bc1182065:   	hlt
 ;; L_ok:
  0x0000028bc1182066:   	popq	%r10
  0x0000028bc1182068:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182069:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118206c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1182070:   	movabsq	$0x800000000, %r11
  0x0000028bc118207a:   	addq	%r11, %r10
  0x0000028bc118207d:   	movl	0x18(%r9), %r11d
  0x0000028bc1182081:   	pushq	%r10
  0x0000028bc1182083:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118208d:   	cmpq	(%r10), %r12
  0x0000028bc1182090:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182096:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11820a0:   	andq	$-0x10, %rsp
  0x0000028bc11820a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11820ae:   	callq	*%r10
  0x0000028bc11820b1:   	hlt
  0x0000028bc11820b2:   	popq	%r10
  0x0000028bc11820b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11820b8:   	testq	%r11, %r11
  0x0000028bc11820bb:   	je	0x41
  0x0000028bc11820c1:   	pushq	%rdi
  0x0000028bc11820c2:   	pushq	%r10
  0x0000028bc11820c4:   	movl	0x8(%r11), %edi
  0x0000028bc11820c8:   	movabsq	$0x800000000, %r10
  0x0000028bc11820d2:   	addq	%r10, %rdi
  0x0000028bc11820d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11820df:   	cmpq	(%r10), %rdi
  0x0000028bc11820e2:   	je	0x36
  0x0000028bc11820e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc11820ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11820f6:   	cmpq	(%r10), %rdi
  0x0000028bc11820f9:   	je	0x1f
  0x0000028bc11820ff:   	popq	%r10
  0x0000028bc1182101:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1182102:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118210c:   	andq	$-0x10, %rsp
  0x0000028bc1182110:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118211a:   	callq	*%r10
  0x0000028bc118211d:   	hlt
 ;; L_ok:
  0x0000028bc118211e:   	popq	%r10
  0x0000028bc1182120:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182121:   	movq	0x10(%r11), %r11
  0x0000028bc1182125:   	cmpq	%r11, %r10
  0x0000028bc1182128:   	je	0x61
  0x0000028bc118212e:   	movl	0x1c(%r11), %eax
  0x0000028bc1182132:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1182136:   	je	0x53
  0x0000028bc118213c:   	cmpl	$0x28, %eax
  0x0000028bc118213f:   	jne	0x2e
  0x0000028bc1182145:   	movq	%r11, %rax
  0x0000028bc1182148:   	pushq	%rcx
  0x0000028bc1182149:   	pushq	%rdi
  0x0000028bc118214a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1182154:   	incl	(%rcx)
  0x0000028bc1182156:   	movq	0x30(%r10), %rdi
  0x0000028bc118215a:   	movl	(%rdi), %ecx
  0x0000028bc118215c:   	addq	$0x8, %rdi
  0x0000028bc1182160:   	testq	%rax, %rax
  0x0000028bc1182163:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1182166:   	popq	%rdi
  0x0000028bc1182167:   	popq	%rcx
  0x0000028bc1182168:   	jne	0x9
  0x0000028bc118216a:   	movq	%r11, 0x28(%r10)
  0x0000028bc118216e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1182173:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118217d:   	andq	$-0x10, %rsp
  0x0000028bc1182181:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118218b:   	callq	*%r10
  0x0000028bc118218e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118218f:   	movl	0xc(%r9), %eax
  0x0000028bc1182193:   	shrl	$0x18, %eax
  0x0000028bc1182196:   	andl	$0xf, %eax
  0x0000028bc1182199:   	cmpl	$0x7, %eax
  0x0000028bc118219c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11821a2:   	movabsq	$0x28bdbd321c0, %rcx;   {external_word}
  0x0000028bc11821ac:   	andq	$-0x10, %rsp
  0x0000028bc11821b0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11821ba:   	callq	*%r10
  0x0000028bc11821bd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11821be:   	movl	0x24(%r9), %ebx
  0x0000028bc11821c2:   	pushq	%r10
  0x0000028bc11821c4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11821ce:   	cmpq	(%r10), %r12
  0x0000028bc11821d1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11821d7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11821e1:   	andq	$-0x10, %rsp
  0x0000028bc11821e5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11821ef:   	callq	*%r10
  0x0000028bc11821f2:   	hlt
  0x0000028bc11821f3:   	popq	%r10
  0x0000028bc11821f5:   	shlq	$0x3, %rbx
  0x0000028bc11821f9:   	movq	0x10(%rbx), %rbx
  0x0000028bc11821fd:   	testq	%rbx, %rbx
  0x0000028bc1182200:   	je	0x3
  0x0000028bc1182206:   	jmpq	*0x58(%rbx)
  0x0000028bc1182209:   	jmp	-0x51acee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118220e:   	hlt
  0x0000028bc118220f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1096    9     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)V (native)
 total in heap  [0x0000028bc1181e10,0x0000028bc1182210] = 1024
 relocation     [0x0000028bc1181f70,0x0000028bc1182000] = 144
 main code      [0x0000028bc1182000,0x0000028bc118220e] = 526
 stub code      [0x0000028bc118220e,0x0000028bc1182210] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80e5c60} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182000:   	testq	%r9, %r9
  0x0000028bc1182003:   	je	0x41
  0x0000028bc1182009:   	pushq	%rdi
  0x0000028bc118200a:   	pushq	%r10
  0x0000028bc118200c:   	movl	0x8(%r9), %edi
  0x0000028bc1182010:   	movabsq	$0x800000000, %r10
  0x0000028bc118201a:   	addq	%r10, %rdi
  0x0000028bc118201d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182027:   	cmpq	(%r10), %rdi
  0x0000028bc118202a:   	je	0x36
  0x0000028bc1182030:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182034:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118203e:   	cmpq	(%r10), %rdi
  0x0000028bc1182041:   	je	0x1f
  0x0000028bc1182047:   	popq	%r10
  0x0000028bc1182049:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118204a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182054:   	andq	$-0x10, %rsp
  0x0000028bc1182058:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182062:   	callq	*%r10
  0x0000028bc1182065:   	hlt
 ;; L_ok:
  0x0000028bc1182066:   	popq	%r10
  0x0000028bc1182068:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182069:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118206c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1182070:   	movabsq	$0x800000000, %r11
  0x0000028bc118207a:   	addq	%r11, %r10
  0x0000028bc118207d:   	movl	0x18(%r9), %r11d
  0x0000028bc1182081:   	pushq	%r10
  0x0000028bc1182083:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118208d:   	cmpq	(%r10), %r12
  0x0000028bc1182090:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182096:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11820a0:   	andq	$-0x10, %rsp
  0x0000028bc11820a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11820ae:   	callq	*%r10
  0x0000028bc11820b1:   	hlt
  0x0000028bc11820b2:   	popq	%r10
  0x0000028bc11820b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11820b8:   	testq	%r11, %r11
  0x0000028bc11820bb:   	je	0x41
  0x0000028bc11820c1:   	pushq	%rdi
  0x0000028bc11820c2:   	pushq	%r10
  0x0000028bc11820c4:   	movl	0x8(%r11), %edi
  0x0000028bc11820c8:   	movabsq	$0x800000000, %r10
  0x0000028bc11820d2:   	addq	%r10, %rdi
  0x0000028bc11820d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11820df:   	cmpq	(%r10), %rdi
  0x0000028bc11820e2:   	je	0x36
  0x0000028bc11820e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc11820ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11820f6:   	cmpq	(%r10), %rdi
  0x0000028bc11820f9:   	je	0x1f
  0x0000028bc11820ff:   	popq	%r10
  0x0000028bc1182101:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1182102:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118210c:   	andq	$-0x10, %rsp
  0x0000028bc1182110:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118211a:   	callq	*%r10
  0x0000028bc118211d:   	hlt
 ;; L_ok:
  0x0000028bc118211e:   	popq	%r10
  0x0000028bc1182120:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182121:   	movq	0x10(%r11), %r11
  0x0000028bc1182125:   	cmpq	%r11, %r10
  0x0000028bc1182128:   	je	0x61
  0x0000028bc118212e:   	movl	0x1c(%r11), %eax
  0x0000028bc1182132:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1182136:   	je	0x53
  0x0000028bc118213c:   	cmpl	$0x28, %eax
  0x0000028bc118213f:   	jne	0x2e
  0x0000028bc1182145:   	movq	%r11, %rax
  0x0000028bc1182148:   	pushq	%rcx
  0x0000028bc1182149:   	pushq	%rdi
  0x0000028bc118214a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1182154:   	incl	(%rcx)
  0x0000028bc1182156:   	movq	0x30(%r10), %rdi
  0x0000028bc118215a:   	movl	(%rdi), %ecx
  0x0000028bc118215c:   	addq	$0x8, %rdi
  0x0000028bc1182160:   	testq	%rax, %rax
  0x0000028bc1182163:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1182166:   	popq	%rdi
  0x0000028bc1182167:   	popq	%rcx
  0x0000028bc1182168:   	jne	0x9
  0x0000028bc118216a:   	movq	%r11, 0x28(%r10)
  0x0000028bc118216e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1182173:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118217d:   	andq	$-0x10, %rsp
  0x0000028bc1182181:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118218b:   	callq	*%r10
  0x0000028bc118218e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118218f:   	movl	0xc(%r9), %eax
  0x0000028bc1182193:   	shrl	$0x18, %eax
  0x0000028bc1182196:   	andl	$0xf, %eax
  0x0000028bc1182199:   	cmpl	$0x7, %eax
  0x0000028bc118219c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11821a2:   	movabsq	$0x28bdbd321c0, %rcx;   {external_word}
  0x0000028bc11821ac:   	andq	$-0x10, %rsp
  0x0000028bc11821b0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11821ba:   	callq	*%r10
  0x0000028bc11821bd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11821be:   	movl	0x24(%r9), %ebx
  0x0000028bc11821c2:   	pushq	%r10
  0x0000028bc11821c4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11821ce:   	cmpq	(%r10), %r12
  0x0000028bc11821d1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11821d7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11821e1:   	andq	$-0x10, %rsp
  0x0000028bc11821e5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11821ef:   	callq	*%r10
  0x0000028bc11821f2:   	hlt
  0x0000028bc11821f3:   	popq	%r10
  0x0000028bc11821f5:   	shlq	$0x3, %rbx
  0x0000028bc11821f9:   	movq	0x10(%rbx), %rbx
  0x0000028bc11821fd:   	testq	%rbx, %rbx
  0x0000028bc1182200:   	je	0x3
  0x0000028bc1182206:   	jmpq	*0x58(%rbx)
  0x0000028bc1182209:   	jmp	-0x51acee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118220e:   	hlt
  0x0000028bc118220f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1104   10     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)L (native)
 total in heap  [0x0000028bc1182290,0x0000028bc1182508] = 632
 relocation     [0x0000028bc11823f0,0x0000028bc1182438] = 72
 main code      [0x0000028bc1182440,0x0000028bc1182503] = 195
 stub code      [0x0000028bc1182503,0x0000028bc1182508] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80e6f60} 'invokeBasic' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1182440:   	movl	0x14(%rdx), %ebx
  0x0000028bc1182443:   	pushq	%r10
  0x0000028bc1182445:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118244f:   	cmpq	(%r10), %r12
  0x0000028bc1182452:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182458:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182462:   	andq	$-0x10, %rsp
  0x0000028bc1182466:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182470:   	callq	*%r10
  0x0000028bc1182473:   	hlt
  0x0000028bc1182474:   	popq	%r10
  0x0000028bc1182476:   	shlq	$0x3, %rbx
  0x0000028bc118247a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118247d:   	pushq	%r10
  0x0000028bc118247f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182489:   	cmpq	(%r10), %r12
  0x0000028bc118248c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182492:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118249c:   	andq	$-0x10, %rsp
  0x0000028bc11824a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11824aa:   	callq	*%r10
  0x0000028bc11824ad:   	hlt
  0x0000028bc11824ae:   	popq	%r10
  0x0000028bc11824b0:   	shlq	$0x3, %rbx
  0x0000028bc11824b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11824b7:   	pushq	%r10
  0x0000028bc11824b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11824c3:   	cmpq	(%r10), %r12
  0x0000028bc11824c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11824cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11824d6:   	andq	$-0x10, %rsp
  0x0000028bc11824da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11824e4:   	callq	*%r10
  0x0000028bc11824e7:   	hlt
  0x0000028bc11824e8:   	popq	%r10
  0x0000028bc11824ea:   	shlq	$0x3, %rbx
  0x0000028bc11824ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11824f2:   	testq	%rbx, %rbx
  0x0000028bc11824f5:   	je	0x3
  0x0000028bc11824fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11824fe:   	jmp	-0x51afe3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1182503:   	hlt
  0x0000028bc1182504:   	hlt
  0x0000028bc1182505:   	hlt
  0x0000028bc1182506:   	hlt
  0x0000028bc1182507:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1106   10     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)L (native)
 total in heap  [0x0000028bc1182290,0x0000028bc1182508] = 632
 relocation     [0x0000028bc11823f0,0x0000028bc1182438] = 72
 main code      [0x0000028bc1182440,0x0000028bc1182503] = 195
 stub code      [0x0000028bc1182503,0x0000028bc1182508] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80e6f60} 'invokeBasic' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1182440:   	movl	0x14(%rdx), %ebx
  0x0000028bc1182443:   	pushq	%r10
  0x0000028bc1182445:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118244f:   	cmpq	(%r10), %r12
  0x0000028bc1182452:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182458:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182462:   	andq	$-0x10, %rsp
  0x0000028bc1182466:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182470:   	callq	*%r10
  0x0000028bc1182473:   	hlt
  0x0000028bc1182474:   	popq	%r10
  0x0000028bc1182476:   	shlq	$0x3, %rbx
  0x0000028bc118247a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118247d:   	pushq	%r10
  0x0000028bc118247f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182489:   	cmpq	(%r10), %r12
  0x0000028bc118248c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182492:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118249c:   	andq	$-0x10, %rsp
  0x0000028bc11824a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11824aa:   	callq	*%r10
  0x0000028bc11824ad:   	hlt
  0x0000028bc11824ae:   	popq	%r10
  0x0000028bc11824b0:   	shlq	$0x3, %rbx
  0x0000028bc11824b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11824b7:   	pushq	%r10
  0x0000028bc11824b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11824c3:   	cmpq	(%r10), %r12
  0x0000028bc11824c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11824cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11824d6:   	andq	$-0x10, %rsp
  0x0000028bc11824da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11824e4:   	callq	*%r10
  0x0000028bc11824e7:   	hlt
  0x0000028bc11824e8:   	popq	%r10
  0x0000028bc11824ea:   	shlq	$0x3, %rbx
  0x0000028bc11824ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11824f2:   	testq	%rbx, %rbx
  0x0000028bc11824f5:   	je	0x3
  0x0000028bc11824fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11824fe:   	jmp	-0x51afe3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1182503:   	hlt
  0x0000028bc1182504:   	hlt
  0x0000028bc1182505:   	hlt
  0x0000028bc1182506:   	hlt
  0x0000028bc1182507:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1125   11     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)L (native)
 total in heap  [0x0000028bc1182590,0x0000028bc1182828] = 664
 relocation     [0x0000028bc11826f0,0x0000028bc1182738] = 72
 main code      [0x0000028bc1182740,0x0000028bc1182828] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80eedb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182740:   	testq	%r8, %r8
  0x0000028bc1182743:   	je	0x41
  0x0000028bc1182749:   	pushq	%rdi
  0x0000028bc118274a:   	pushq	%r10
  0x0000028bc118274c:   	movl	0x8(%r8), %edi
  0x0000028bc1182750:   	movabsq	$0x800000000, %r10
  0x0000028bc118275a:   	addq	%r10, %rdi
  0x0000028bc118275d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182767:   	cmpq	(%r10), %rdi
  0x0000028bc118276a:   	je	0x36
  0x0000028bc1182770:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182774:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118277e:   	cmpq	(%r10), %rdi
  0x0000028bc1182781:   	je	0x1f
  0x0000028bc1182787:   	popq	%r10
  0x0000028bc1182789:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118278a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182794:   	andq	$-0x10, %rsp
  0x0000028bc1182798:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11827a2:   	callq	*%r10
  0x0000028bc11827a5:   	hlt
 ;; L_ok:
  0x0000028bc11827a6:   	popq	%r10
  0x0000028bc11827a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11827a9:   	movl	0xc(%r8), %eax
  0x0000028bc11827ad:   	shrl	$0x18, %eax
  0x0000028bc11827b0:   	andl	$0xf, %eax
  0x0000028bc11827b3:   	cmpl	$0x6, %eax
  0x0000028bc11827b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11827bc:   	movabsq	$0x28bdbd31d40, %rcx;   {external_word}
  0x0000028bc11827c6:   	andq	$-0x10, %rsp
  0x0000028bc11827ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11827d4:   	callq	*%r10
  0x0000028bc11827d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11827d8:   	movl	0x24(%r8), %ebx
  0x0000028bc11827dc:   	pushq	%r10
  0x0000028bc11827de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11827e8:   	cmpq	(%r10), %r12
  0x0000028bc11827eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11827f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11827fb:   	andq	$-0x10, %rsp
  0x0000028bc11827ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182809:   	callq	*%r10
  0x0000028bc118280c:   	hlt
  0x0000028bc118280d:   	popq	%r10
  0x0000028bc118280f:   	shlq	$0x3, %rbx
  0x0000028bc1182813:   	movq	0x10(%rbx), %rbx
  0x0000028bc1182817:   	testq	%rbx, %rbx
  0x0000028bc118281a:   	je	0x3
  0x0000028bc1182820:   	jmpq	*0x58(%rbx)
  0x0000028bc1182823:   	jmp	-0x51b308           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1128   11     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)L (native)
 total in heap  [0x0000028bc1182590,0x0000028bc1182828] = 664
 relocation     [0x0000028bc11826f0,0x0000028bc1182738] = 72
 main code      [0x0000028bc1182740,0x0000028bc1182828] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd80eedb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182740:   	testq	%r8, %r8
  0x0000028bc1182743:   	je	0x41
  0x0000028bc1182749:   	pushq	%rdi
  0x0000028bc118274a:   	pushq	%r10
  0x0000028bc118274c:   	movl	0x8(%r8), %edi
  0x0000028bc1182750:   	movabsq	$0x800000000, %r10
  0x0000028bc118275a:   	addq	%r10, %rdi
  0x0000028bc118275d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182767:   	cmpq	(%r10), %rdi
  0x0000028bc118276a:   	je	0x36
  0x0000028bc1182770:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182774:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118277e:   	cmpq	(%r10), %rdi
  0x0000028bc1182781:   	je	0x1f
  0x0000028bc1182787:   	popq	%r10
  0x0000028bc1182789:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118278a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182794:   	andq	$-0x10, %rsp
  0x0000028bc1182798:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11827a2:   	callq	*%r10
  0x0000028bc11827a5:   	hlt
 ;; L_ok:
  0x0000028bc11827a6:   	popq	%r10
  0x0000028bc11827a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11827a9:   	movl	0xc(%r8), %eax
  0x0000028bc11827ad:   	shrl	$0x18, %eax
  0x0000028bc11827b0:   	andl	$0xf, %eax
  0x0000028bc11827b3:   	cmpl	$0x6, %eax
  0x0000028bc11827b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11827bc:   	movabsq	$0x28bdbd31d40, %rcx;   {external_word}
  0x0000028bc11827c6:   	andq	$-0x10, %rsp
  0x0000028bc11827ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11827d4:   	callq	*%r10
  0x0000028bc11827d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11827d8:   	movl	0x24(%r8), %ebx
  0x0000028bc11827dc:   	pushq	%r10
  0x0000028bc11827de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11827e8:   	cmpq	(%r10), %r12
  0x0000028bc11827eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11827f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11827fb:   	andq	$-0x10, %rsp
  0x0000028bc11827ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182809:   	callq	*%r10
  0x0000028bc118280c:   	hlt
  0x0000028bc118280d:   	popq	%r10
  0x0000028bc118280f:   	shlq	$0x3, %rbx
  0x0000028bc1182813:   	movq	0x10(%rbx), %rbx
  0x0000028bc1182817:   	testq	%rbx, %rbx
  0x0000028bc118281a:   	je	0x3
  0x0000028bc1182820:   	jmpq	*0x58(%rbx)
  0x0000028bc1182823:   	jmp	-0x51b308           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1184   12     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)I (native)
 total in heap  [0x0000028bc1182890,0x0000028bc1182c90] = 1024
 relocation     [0x0000028bc11829f0,0x0000028bc1182a80] = 144
 main code      [0x0000028bc1182a80,0x0000028bc1182c8b] = 523
 stub code      [0x0000028bc1182c8b,0x0000028bc1182c90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8180f08} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182a80:   	testq	%rdi, %rdi
  0x0000028bc1182a83:   	je	0x40
  0x0000028bc1182a89:   	pushq	%rdi
  0x0000028bc1182a8a:   	pushq	%r10
  0x0000028bc1182a8c:   	movl	0x8(%rdi), %edi
  0x0000028bc1182a8f:   	movabsq	$0x800000000, %r10
  0x0000028bc1182a99:   	addq	%r10, %rdi
  0x0000028bc1182a9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182aa6:   	cmpq	(%r10), %rdi
  0x0000028bc1182aa9:   	je	0x36
  0x0000028bc1182aaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182ab3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182abd:   	cmpq	(%r10), %rdi
  0x0000028bc1182ac0:   	je	0x1f
  0x0000028bc1182ac6:   	popq	%r10
  0x0000028bc1182ac8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1182ac9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182ad3:   	andq	$-0x10, %rsp
  0x0000028bc1182ad7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182ae1:   	callq	*%r10
  0x0000028bc1182ae4:   	hlt
 ;; L_ok:
  0x0000028bc1182ae5:   	popq	%r10
  0x0000028bc1182ae7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182ae8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1182aeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc1182aef:   	movabsq	$0x800000000, %r11
  0x0000028bc1182af9:   	addq	%r11, %r10
  0x0000028bc1182afc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1182b00:   	pushq	%r10
  0x0000028bc1182b02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182b0c:   	cmpq	(%r10), %r12
  0x0000028bc1182b0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182b15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182b1f:   	andq	$-0x10, %rsp
  0x0000028bc1182b23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182b2d:   	callq	*%r10
  0x0000028bc1182b30:   	hlt
  0x0000028bc1182b31:   	popq	%r10
  0x0000028bc1182b33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1182b37:   	testq	%r11, %r11
  0x0000028bc1182b3a:   	je	0x41
  0x0000028bc1182b40:   	pushq	%rdi
  0x0000028bc1182b41:   	pushq	%r10
  0x0000028bc1182b43:   	movl	0x8(%r11), %edi
  0x0000028bc1182b47:   	movabsq	$0x800000000, %r10
  0x0000028bc1182b51:   	addq	%r10, %rdi
  0x0000028bc1182b54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1182b5e:   	cmpq	(%r10), %rdi
  0x0000028bc1182b61:   	je	0x36
  0x0000028bc1182b67:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182b6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1182b75:   	cmpq	(%r10), %rdi
  0x0000028bc1182b78:   	je	0x1f
  0x0000028bc1182b7e:   	popq	%r10
  0x0000028bc1182b80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1182b81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1182b8b:   	andq	$-0x10, %rsp
  0x0000028bc1182b8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182b99:   	callq	*%r10
  0x0000028bc1182b9c:   	hlt
 ;; L_ok:
  0x0000028bc1182b9d:   	popq	%r10
  0x0000028bc1182b9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182ba0:   	movq	0x10(%r11), %r11
  0x0000028bc1182ba4:   	cmpq	%r11, %r10
  0x0000028bc1182ba7:   	je	0x61
  0x0000028bc1182bad:   	movl	0x1c(%r11), %eax
  0x0000028bc1182bb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1182bb5:   	je	0x53
  0x0000028bc1182bbb:   	cmpl	$0x28, %eax
  0x0000028bc1182bbe:   	jne	0x2e
  0x0000028bc1182bc4:   	movq	%r11, %rax
  0x0000028bc1182bc7:   	pushq	%rcx
  0x0000028bc1182bc8:   	pushq	%rdi
  0x0000028bc1182bc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1182bd3:   	incl	(%rcx)
  0x0000028bc1182bd5:   	movq	0x30(%r10), %rdi
  0x0000028bc1182bd9:   	movl	(%rdi), %ecx
  0x0000028bc1182bdb:   	addq	$0x8, %rdi
  0x0000028bc1182bdf:   	testq	%rax, %rax
  0x0000028bc1182be2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1182be5:   	popq	%rdi
  0x0000028bc1182be6:   	popq	%rcx
  0x0000028bc1182be7:   	jne	0x9
  0x0000028bc1182be9:   	movq	%r11, 0x28(%r10)
  0x0000028bc1182bed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1182bf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1182bfc:   	andq	$-0x10, %rsp
  0x0000028bc1182c00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182c0a:   	callq	*%r10
  0x0000028bc1182c0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1182c0e:   	movl	0xc(%rdi), %eax
  0x0000028bc1182c11:   	shrl	$0x18, %eax
  0x0000028bc1182c14:   	andl	$0xf, %eax
  0x0000028bc1182c17:   	cmpl	$0x7, %eax
  0x0000028bc1182c1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1182c20:   	movabsq	$0x28bdbd32040, %rcx;   {external_word}
  0x0000028bc1182c2a:   	andq	$-0x10, %rsp
  0x0000028bc1182c2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182c38:   	callq	*%r10
  0x0000028bc1182c3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1182c3c:   	movl	0x24(%rdi), %ebx
  0x0000028bc1182c3f:   	pushq	%r10
  0x0000028bc1182c41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182c4b:   	cmpq	(%r10), %r12
  0x0000028bc1182c4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182c54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182c5e:   	andq	$-0x10, %rsp
  0x0000028bc1182c62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182c6c:   	callq	*%r10
  0x0000028bc1182c6f:   	hlt
  0x0000028bc1182c70:   	popq	%r10
  0x0000028bc1182c72:   	shlq	$0x3, %rbx
  0x0000028bc1182c76:   	movq	0x10(%rbx), %rbx
  0x0000028bc1182c7a:   	testq	%rbx, %rbx
  0x0000028bc1182c7d:   	je	0x3
  0x0000028bc1182c83:   	jmpq	*0x58(%rbx)
  0x0000028bc1182c86:   	jmp	-0x51b76b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1182c8b:   	hlt
  0x0000028bc1182c8c:   	hlt
  0x0000028bc1182c8d:   	hlt
  0x0000028bc1182c8e:   	hlt
  0x0000028bc1182c8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1189   12     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)I (native)
 total in heap  [0x0000028bc1182890,0x0000028bc1182c90] = 1024
 relocation     [0x0000028bc11829f0,0x0000028bc1182a80] = 144
 main code      [0x0000028bc1182a80,0x0000028bc1182c8b] = 523
 stub code      [0x0000028bc1182c8b,0x0000028bc1182c90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8180f08} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182a80:   	testq	%rdi, %rdi
  0x0000028bc1182a83:   	je	0x40
  0x0000028bc1182a89:   	pushq	%rdi
  0x0000028bc1182a8a:   	pushq	%r10
  0x0000028bc1182a8c:   	movl	0x8(%rdi), %edi
  0x0000028bc1182a8f:   	movabsq	$0x800000000, %r10
  0x0000028bc1182a99:   	addq	%r10, %rdi
  0x0000028bc1182a9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182aa6:   	cmpq	(%r10), %rdi
  0x0000028bc1182aa9:   	je	0x36
  0x0000028bc1182aaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182ab3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182abd:   	cmpq	(%r10), %rdi
  0x0000028bc1182ac0:   	je	0x1f
  0x0000028bc1182ac6:   	popq	%r10
  0x0000028bc1182ac8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1182ac9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182ad3:   	andq	$-0x10, %rsp
  0x0000028bc1182ad7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182ae1:   	callq	*%r10
  0x0000028bc1182ae4:   	hlt
 ;; L_ok:
  0x0000028bc1182ae5:   	popq	%r10
  0x0000028bc1182ae7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182ae8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1182aeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc1182aef:   	movabsq	$0x800000000, %r11
  0x0000028bc1182af9:   	addq	%r11, %r10
  0x0000028bc1182afc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1182b00:   	pushq	%r10
  0x0000028bc1182b02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182b0c:   	cmpq	(%r10), %r12
  0x0000028bc1182b0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182b15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182b1f:   	andq	$-0x10, %rsp
  0x0000028bc1182b23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182b2d:   	callq	*%r10
  0x0000028bc1182b30:   	hlt
  0x0000028bc1182b31:   	popq	%r10
  0x0000028bc1182b33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1182b37:   	testq	%r11, %r11
  0x0000028bc1182b3a:   	je	0x41
  0x0000028bc1182b40:   	pushq	%rdi
  0x0000028bc1182b41:   	pushq	%r10
  0x0000028bc1182b43:   	movl	0x8(%r11), %edi
  0x0000028bc1182b47:   	movabsq	$0x800000000, %r10
  0x0000028bc1182b51:   	addq	%r10, %rdi
  0x0000028bc1182b54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1182b5e:   	cmpq	(%r10), %rdi
  0x0000028bc1182b61:   	je	0x36
  0x0000028bc1182b67:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182b6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1182b75:   	cmpq	(%r10), %rdi
  0x0000028bc1182b78:   	je	0x1f
  0x0000028bc1182b7e:   	popq	%r10
  0x0000028bc1182b80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1182b81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1182b8b:   	andq	$-0x10, %rsp
  0x0000028bc1182b8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182b99:   	callq	*%r10
  0x0000028bc1182b9c:   	hlt
 ;; L_ok:
  0x0000028bc1182b9d:   	popq	%r10
  0x0000028bc1182b9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1182ba0:   	movq	0x10(%r11), %r11
  0x0000028bc1182ba4:   	cmpq	%r11, %r10
  0x0000028bc1182ba7:   	je	0x61
  0x0000028bc1182bad:   	movl	0x1c(%r11), %eax
  0x0000028bc1182bb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1182bb5:   	je	0x53
  0x0000028bc1182bbb:   	cmpl	$0x28, %eax
  0x0000028bc1182bbe:   	jne	0x2e
  0x0000028bc1182bc4:   	movq	%r11, %rax
  0x0000028bc1182bc7:   	pushq	%rcx
  0x0000028bc1182bc8:   	pushq	%rdi
  0x0000028bc1182bc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1182bd3:   	incl	(%rcx)
  0x0000028bc1182bd5:   	movq	0x30(%r10), %rdi
  0x0000028bc1182bd9:   	movl	(%rdi), %ecx
  0x0000028bc1182bdb:   	addq	$0x8, %rdi
  0x0000028bc1182bdf:   	testq	%rax, %rax
  0x0000028bc1182be2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1182be5:   	popq	%rdi
  0x0000028bc1182be6:   	popq	%rcx
  0x0000028bc1182be7:   	jne	0x9
  0x0000028bc1182be9:   	movq	%r11, 0x28(%r10)
  0x0000028bc1182bed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1182bf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1182bfc:   	andq	$-0x10, %rsp
  0x0000028bc1182c00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182c0a:   	callq	*%r10
  0x0000028bc1182c0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1182c0e:   	movl	0xc(%rdi), %eax
  0x0000028bc1182c11:   	shrl	$0x18, %eax
  0x0000028bc1182c14:   	andl	$0xf, %eax
  0x0000028bc1182c17:   	cmpl	$0x7, %eax
  0x0000028bc1182c1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1182c20:   	movabsq	$0x28bdbd32040, %rcx;   {external_word}
  0x0000028bc1182c2a:   	andq	$-0x10, %rsp
  0x0000028bc1182c2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182c38:   	callq	*%r10
  0x0000028bc1182c3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1182c3c:   	movl	0x24(%rdi), %ebx
  0x0000028bc1182c3f:   	pushq	%r10
  0x0000028bc1182c41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182c4b:   	cmpq	(%r10), %r12
  0x0000028bc1182c4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182c54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182c5e:   	andq	$-0x10, %rsp
  0x0000028bc1182c62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182c6c:   	callq	*%r10
  0x0000028bc1182c6f:   	hlt
  0x0000028bc1182c70:   	popq	%r10
  0x0000028bc1182c72:   	shlq	$0x3, %rbx
  0x0000028bc1182c76:   	movq	0x10(%rbx), %rbx
  0x0000028bc1182c7a:   	testq	%rbx, %rbx
  0x0000028bc1182c7d:   	je	0x3
  0x0000028bc1182c83:   	jmpq	*0x58(%rbx)
  0x0000028bc1182c86:   	jmp	-0x51b76b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1182c8b:   	hlt
  0x0000028bc1182c8c:   	hlt
  0x0000028bc1182c8d:   	hlt
  0x0000028bc1182c8e:   	hlt
  0x0000028bc1182c8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1269   13     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)L (native)
 total in heap  [0x0000028bc1182d10,0x0000028bc1182fa8] = 664
 relocation     [0x0000028bc1182e70,0x0000028bc1182eb8] = 72
 main code      [0x0000028bc1182ec0,0x0000028bc1182fa5] = 229
 stub code      [0x0000028bc1182fa5,0x0000028bc1182fa8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81b61d8} 'linkToStatic' '(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182ec0:   	testq	%rdx, %rdx
  0x0000028bc1182ec3:   	je	0x40
  0x0000028bc1182ec9:   	pushq	%rdi
  0x0000028bc1182eca:   	pushq	%r10
  0x0000028bc1182ecc:   	movl	0x8(%rdx), %edi
  0x0000028bc1182ecf:   	movabsq	$0x800000000, %r10
  0x0000028bc1182ed9:   	addq	%r10, %rdi
  0x0000028bc1182edc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182ee6:   	cmpq	(%r10), %rdi
  0x0000028bc1182ee9:   	je	0x36
  0x0000028bc1182eef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182ef3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182efd:   	cmpq	(%r10), %rdi
  0x0000028bc1182f00:   	je	0x1f
  0x0000028bc1182f06:   	popq	%r10
  0x0000028bc1182f08:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1182f09:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182f13:   	andq	$-0x10, %rsp
  0x0000028bc1182f17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182f21:   	callq	*%r10
  0x0000028bc1182f24:   	hlt
 ;; L_ok:
  0x0000028bc1182f25:   	popq	%r10
  0x0000028bc1182f27:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1182f28:   	movl	0xc(%rdx), %eax
  0x0000028bc1182f2b:   	shrl	$0x18, %eax
  0x0000028bc1182f2e:   	andl	$0xf, %eax
  0x0000028bc1182f31:   	cmpl	$0x6, %eax
  0x0000028bc1182f34:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1182f3a:   	movabsq	$0x28bdbd32340, %rcx;   {external_word}
  0x0000028bc1182f44:   	andq	$-0x10, %rsp
  0x0000028bc1182f48:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182f52:   	callq	*%r10
  0x0000028bc1182f55:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1182f56:   	movl	0x24(%rdx), %ebx
  0x0000028bc1182f59:   	pushq	%r10
  0x0000028bc1182f5b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182f65:   	cmpq	(%r10), %r12
  0x0000028bc1182f68:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182f6e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182f78:   	andq	$-0x10, %rsp
  0x0000028bc1182f7c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182f86:   	callq	*%r10
  0x0000028bc1182f89:   	hlt
  0x0000028bc1182f8a:   	popq	%r10
  0x0000028bc1182f8c:   	shlq	$0x3, %rbx
  0x0000028bc1182f90:   	movq	0x10(%rbx), %rbx
  0x0000028bc1182f94:   	testq	%rbx, %rbx
  0x0000028bc1182f97:   	je	0x3
  0x0000028bc1182f9d:   	jmpq	*0x58(%rbx)
  0x0000028bc1182fa0:   	jmp	-0x51ba85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1182fa5:   	hlt
  0x0000028bc1182fa6:   	hlt
  0x0000028bc1182fa7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1271   13     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)L (native)
 total in heap  [0x0000028bc1182d10,0x0000028bc1182fa8] = 664
 relocation     [0x0000028bc1182e70,0x0000028bc1182eb8] = 72
 main code      [0x0000028bc1182ec0,0x0000028bc1182fa5] = 229
 stub code      [0x0000028bc1182fa5,0x0000028bc1182fa8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81b61d8} 'linkToStatic' '(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1182ec0:   	testq	%rdx, %rdx
  0x0000028bc1182ec3:   	je	0x40
  0x0000028bc1182ec9:   	pushq	%rdi
  0x0000028bc1182eca:   	pushq	%r10
  0x0000028bc1182ecc:   	movl	0x8(%rdx), %edi
  0x0000028bc1182ecf:   	movabsq	$0x800000000, %r10
  0x0000028bc1182ed9:   	addq	%r10, %rdi
  0x0000028bc1182edc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182ee6:   	cmpq	(%r10), %rdi
  0x0000028bc1182ee9:   	je	0x36
  0x0000028bc1182eef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1182ef3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1182efd:   	cmpq	(%r10), %rdi
  0x0000028bc1182f00:   	je	0x1f
  0x0000028bc1182f06:   	popq	%r10
  0x0000028bc1182f08:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1182f09:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1182f13:   	andq	$-0x10, %rsp
  0x0000028bc1182f17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182f21:   	callq	*%r10
  0x0000028bc1182f24:   	hlt
 ;; L_ok:
  0x0000028bc1182f25:   	popq	%r10
  0x0000028bc1182f27:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1182f28:   	movl	0xc(%rdx), %eax
  0x0000028bc1182f2b:   	shrl	$0x18, %eax
  0x0000028bc1182f2e:   	andl	$0xf, %eax
  0x0000028bc1182f31:   	cmpl	$0x6, %eax
  0x0000028bc1182f34:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1182f3a:   	movabsq	$0x28bdbd32340, %rcx;   {external_word}
  0x0000028bc1182f44:   	andq	$-0x10, %rsp
  0x0000028bc1182f48:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182f52:   	callq	*%r10
  0x0000028bc1182f55:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1182f56:   	movl	0x24(%rdx), %ebx
  0x0000028bc1182f59:   	pushq	%r10
  0x0000028bc1182f5b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1182f65:   	cmpq	(%r10), %r12
  0x0000028bc1182f68:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1182f6e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1182f78:   	andq	$-0x10, %rsp
  0x0000028bc1182f7c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1182f86:   	callq	*%r10
  0x0000028bc1182f89:   	hlt
  0x0000028bc1182f8a:   	popq	%r10
  0x0000028bc1182f8c:   	shlq	$0x3, %rbx
  0x0000028bc1182f90:   	movq	0x10(%rbx), %rbx
  0x0000028bc1182f94:   	testq	%rbx, %rbx
  0x0000028bc1182f97:   	je	0x3
  0x0000028bc1182f9d:   	jmpq	*0x58(%rbx)
  0x0000028bc1182fa0:   	jmp	-0x51ba85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1182fa5:   	hlt
  0x0000028bc1182fa6:   	hlt
  0x0000028bc1182fa7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1290   14     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)
 total in heap  [0x0000028bc1183010,0x0000028bc11832a8] = 664
 relocation     [0x0000028bc1183170,0x0000028bc11831b8] = 72
 main code      [0x0000028bc11831c0,0x0000028bc11832a5] = 229
 stub code      [0x0000028bc11832a5,0x0000028bc11832a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81cc308} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc11831c0:   	testq	%rdi, %rdi
  0x0000028bc11831c3:   	je	0x40
  0x0000028bc11831c9:   	pushq	%rdi
  0x0000028bc11831ca:   	pushq	%r10
  0x0000028bc11831cc:   	movl	0x8(%rdi), %edi
  0x0000028bc11831cf:   	movabsq	$0x800000000, %r10
  0x0000028bc11831d9:   	addq	%r10, %rdi
  0x0000028bc11831dc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11831e6:   	cmpq	(%r10), %rdi
  0x0000028bc11831e9:   	je	0x36
  0x0000028bc11831ef:   	movq	0x40(%rdi), %rdi
  0x0000028bc11831f3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11831fd:   	cmpq	(%r10), %rdi
  0x0000028bc1183200:   	je	0x1f
  0x0000028bc1183206:   	popq	%r10
  0x0000028bc1183208:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1183209:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1183213:   	andq	$-0x10, %rsp
  0x0000028bc1183217:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183221:   	callq	*%r10
  0x0000028bc1183224:   	hlt
 ;; L_ok:
  0x0000028bc1183225:   	popq	%r10
  0x0000028bc1183227:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1183228:   	movl	0xc(%rdi), %eax
  0x0000028bc118322b:   	shrl	$0x18, %eax
  0x0000028bc118322e:   	andl	$0xf, %eax
  0x0000028bc1183231:   	cmpl	$0x6, %eax
  0x0000028bc1183234:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118323a:   	movabsq	$0x28bdbd31dc0, %rcx;   {external_word}
  0x0000028bc1183244:   	andq	$-0x10, %rsp
  0x0000028bc1183248:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183252:   	callq	*%r10
  0x0000028bc1183255:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1183256:   	movl	0x24(%rdi), %ebx
  0x0000028bc1183259:   	pushq	%r10
  0x0000028bc118325b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183265:   	cmpq	(%r10), %r12
  0x0000028bc1183268:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118326e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1183278:   	andq	$-0x10, %rsp
  0x0000028bc118327c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183286:   	callq	*%r10
  0x0000028bc1183289:   	hlt
  0x0000028bc118328a:   	popq	%r10
  0x0000028bc118328c:   	shlq	$0x3, %rbx
  0x0000028bc1183290:   	movq	0x10(%rbx), %rbx
  0x0000028bc1183294:   	testq	%rbx, %rbx
  0x0000028bc1183297:   	je	0x3
  0x0000028bc118329d:   	jmpq	*0x58(%rbx)
  0x0000028bc11832a0:   	jmp	-0x51bd85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11832a5:   	hlt
  0x0000028bc11832a6:   	hlt
  0x0000028bc11832a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1292   14     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)
 total in heap  [0x0000028bc1183010,0x0000028bc11832a8] = 664
 relocation     [0x0000028bc1183170,0x0000028bc11831b8] = 72
 main code      [0x0000028bc11831c0,0x0000028bc11832a5] = 229
 stub code      [0x0000028bc11832a5,0x0000028bc11832a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81cc308} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc11831c0:   	testq	%rdi, %rdi
  0x0000028bc11831c3:   	je	0x40
  0x0000028bc11831c9:   	pushq	%rdi
  0x0000028bc11831ca:   	pushq	%r10
  0x0000028bc11831cc:   	movl	0x8(%rdi), %edi
  0x0000028bc11831cf:   	movabsq	$0x800000000, %r10
  0x0000028bc11831d9:   	addq	%r10, %rdi
  0x0000028bc11831dc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11831e6:   	cmpq	(%r10), %rdi
  0x0000028bc11831e9:   	je	0x36
  0x0000028bc11831ef:   	movq	0x40(%rdi), %rdi
  0x0000028bc11831f3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11831fd:   	cmpq	(%r10), %rdi
  0x0000028bc1183200:   	je	0x1f
  0x0000028bc1183206:   	popq	%r10
  0x0000028bc1183208:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1183209:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1183213:   	andq	$-0x10, %rsp
  0x0000028bc1183217:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183221:   	callq	*%r10
  0x0000028bc1183224:   	hlt
 ;; L_ok:
  0x0000028bc1183225:   	popq	%r10
  0x0000028bc1183227:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1183228:   	movl	0xc(%rdi), %eax
  0x0000028bc118322b:   	shrl	$0x18, %eax
  0x0000028bc118322e:   	andl	$0xf, %eax
  0x0000028bc1183231:   	cmpl	$0x6, %eax
  0x0000028bc1183234:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118323a:   	movabsq	$0x28bdbd31dc0, %rcx;   {external_word}
  0x0000028bc1183244:   	andq	$-0x10, %rsp
  0x0000028bc1183248:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183252:   	callq	*%r10
  0x0000028bc1183255:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1183256:   	movl	0x24(%rdi), %ebx
  0x0000028bc1183259:   	pushq	%r10
  0x0000028bc118325b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183265:   	cmpq	(%r10), %r12
  0x0000028bc1183268:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118326e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1183278:   	andq	$-0x10, %rsp
  0x0000028bc118327c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183286:   	callq	*%r10
  0x0000028bc1183289:   	hlt
  0x0000028bc118328a:   	popq	%r10
  0x0000028bc118328c:   	shlq	$0x3, %rbx
  0x0000028bc1183290:   	movq	0x10(%rbx), %rbx
  0x0000028bc1183294:   	testq	%rbx, %rbx
  0x0000028bc1183297:   	je	0x3
  0x0000028bc118329d:   	jmpq	*0x58(%rbx)
  0x0000028bc11832a0:   	jmp	-0x51bd85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11832a5:   	hlt
  0x0000028bc11832a6:   	hlt
  0x0000028bc11832a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1305   15     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)
 total in heap  [0x0000028bc1183310,0x0000028bc1183588] = 632
 relocation     [0x0000028bc1183470,0x0000028bc11834b8] = 72
 main code      [0x0000028bc11834c0,0x0000028bc1183583] = 195
 stub code      [0x0000028bc1183583,0x0000028bc1183588] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81d08a0} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11834c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11834c3:   	pushq	%r10
  0x0000028bc11834c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11834cf:   	cmpq	(%r10), %r12
  0x0000028bc11834d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11834d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11834e2:   	andq	$-0x10, %rsp
  0x0000028bc11834e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11834f0:   	callq	*%r10
  0x0000028bc11834f3:   	hlt
  0x0000028bc11834f4:   	popq	%r10
  0x0000028bc11834f6:   	shlq	$0x3, %rbx
  0x0000028bc11834fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11834fd:   	pushq	%r10
  0x0000028bc11834ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183509:   	cmpq	(%r10), %r12
  0x0000028bc118350c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1183512:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118351c:   	andq	$-0x10, %rsp
  0x0000028bc1183520:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118352a:   	callq	*%r10
  0x0000028bc118352d:   	hlt
  0x0000028bc118352e:   	popq	%r10
  0x0000028bc1183530:   	shlq	$0x3, %rbx
  0x0000028bc1183534:   	movl	0x24(%rbx), %ebx
  0x0000028bc1183537:   	pushq	%r10
  0x0000028bc1183539:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183543:   	cmpq	(%r10), %r12
  0x0000028bc1183546:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118354c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1183556:   	andq	$-0x10, %rsp
  0x0000028bc118355a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183564:   	callq	*%r10
  0x0000028bc1183567:   	hlt
  0x0000028bc1183568:   	popq	%r10
  0x0000028bc118356a:   	shlq	$0x3, %rbx
  0x0000028bc118356e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1183572:   	testq	%rbx, %rbx
  0x0000028bc1183575:   	je	0x3
  0x0000028bc118357b:   	jmpq	*0x58(%rbx)
  0x0000028bc118357e:   	jmp	-0x51c063           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1183583:   	hlt
  0x0000028bc1183584:   	hlt
  0x0000028bc1183585:   	hlt
  0x0000028bc1183586:   	hlt
  0x0000028bc1183587:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1307   15     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)
 total in heap  [0x0000028bc1183310,0x0000028bc1183588] = 632
 relocation     [0x0000028bc1183470,0x0000028bc11834b8] = 72
 main code      [0x0000028bc11834c0,0x0000028bc1183583] = 195
 stub code      [0x0000028bc1183583,0x0000028bc1183588] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81d08a0} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11834c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11834c3:   	pushq	%r10
  0x0000028bc11834c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11834cf:   	cmpq	(%r10), %r12
  0x0000028bc11834d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11834d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11834e2:   	andq	$-0x10, %rsp
  0x0000028bc11834e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11834f0:   	callq	*%r10
  0x0000028bc11834f3:   	hlt
  0x0000028bc11834f4:   	popq	%r10
  0x0000028bc11834f6:   	shlq	$0x3, %rbx
  0x0000028bc11834fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11834fd:   	pushq	%r10
  0x0000028bc11834ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183509:   	cmpq	(%r10), %r12
  0x0000028bc118350c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1183512:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118351c:   	andq	$-0x10, %rsp
  0x0000028bc1183520:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118352a:   	callq	*%r10
  0x0000028bc118352d:   	hlt
  0x0000028bc118352e:   	popq	%r10
  0x0000028bc1183530:   	shlq	$0x3, %rbx
  0x0000028bc1183534:   	movl	0x24(%rbx), %ebx
  0x0000028bc1183537:   	pushq	%r10
  0x0000028bc1183539:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183543:   	cmpq	(%r10), %r12
  0x0000028bc1183546:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118354c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1183556:   	andq	$-0x10, %rsp
  0x0000028bc118355a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183564:   	callq	*%r10
  0x0000028bc1183567:   	hlt
  0x0000028bc1183568:   	popq	%r10
  0x0000028bc118356a:   	shlq	$0x3, %rbx
  0x0000028bc118356e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1183572:   	testq	%rbx, %rbx
  0x0000028bc1183575:   	je	0x3
  0x0000028bc118357b:   	jmpq	*0x58(%rbx)
  0x0000028bc118357e:   	jmp	-0x51c063           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1183583:   	hlt
  0x0000028bc1183584:   	hlt
  0x0000028bc1183585:   	hlt
  0x0000028bc1183586:   	hlt
  0x0000028bc1183587:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1309   16     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)
 total in heap  [0x0000028bc1183610,0x0000028bc1183a10] = 1024
 relocation     [0x0000028bc1183770,0x0000028bc1183800] = 144
 main code      [0x0000028bc1183800,0x0000028bc1183a0e] = 526
 stub code      [0x0000028bc1183a0e,0x0000028bc1183a10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81d09d8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1183800:   	testq	%r8, %r8
  0x0000028bc1183803:   	je	0x41
  0x0000028bc1183809:   	pushq	%rdi
  0x0000028bc118380a:   	pushq	%r10
  0x0000028bc118380c:   	movl	0x8(%r8), %edi
  0x0000028bc1183810:   	movabsq	$0x800000000, %r10
  0x0000028bc118381a:   	addq	%r10, %rdi
  0x0000028bc118381d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1183827:   	cmpq	(%r10), %rdi
  0x0000028bc118382a:   	je	0x36
  0x0000028bc1183830:   	movq	0x40(%rdi), %rdi
  0x0000028bc1183834:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118383e:   	cmpq	(%r10), %rdi
  0x0000028bc1183841:   	je	0x1f
  0x0000028bc1183847:   	popq	%r10
  0x0000028bc1183849:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118384a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1183854:   	andq	$-0x10, %rsp
  0x0000028bc1183858:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183862:   	callq	*%r10
  0x0000028bc1183865:   	hlt
 ;; L_ok:
  0x0000028bc1183866:   	popq	%r10
  0x0000028bc1183868:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183869:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118386c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1183870:   	movabsq	$0x800000000, %r11
  0x0000028bc118387a:   	addq	%r11, %r10
  0x0000028bc118387d:   	movl	0x18(%r8), %r11d
  0x0000028bc1183881:   	pushq	%r10
  0x0000028bc1183883:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118388d:   	cmpq	(%r10), %r12
  0x0000028bc1183890:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1183896:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11838a0:   	andq	$-0x10, %rsp
  0x0000028bc11838a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11838ae:   	callq	*%r10
  0x0000028bc11838b1:   	hlt
  0x0000028bc11838b2:   	popq	%r10
  0x0000028bc11838b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11838b8:   	testq	%r11, %r11
  0x0000028bc11838bb:   	je	0x41
  0x0000028bc11838c1:   	pushq	%rdi
  0x0000028bc11838c2:   	pushq	%r10
  0x0000028bc11838c4:   	movl	0x8(%r11), %edi
  0x0000028bc11838c8:   	movabsq	$0x800000000, %r10
  0x0000028bc11838d2:   	addq	%r10, %rdi
  0x0000028bc11838d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11838df:   	cmpq	(%r10), %rdi
  0x0000028bc11838e2:   	je	0x36
  0x0000028bc11838e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc11838ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11838f6:   	cmpq	(%r10), %rdi
  0x0000028bc11838f9:   	je	0x1f
  0x0000028bc11838ff:   	popq	%r10
  0x0000028bc1183901:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1183902:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118390c:   	andq	$-0x10, %rsp
  0x0000028bc1183910:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118391a:   	callq	*%r10
  0x0000028bc118391d:   	hlt
 ;; L_ok:
  0x0000028bc118391e:   	popq	%r10
  0x0000028bc1183920:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183921:   	movq	0x10(%r11), %r11
  0x0000028bc1183925:   	cmpq	%r11, %r10
  0x0000028bc1183928:   	je	0x61
  0x0000028bc118392e:   	movl	0x1c(%r11), %eax
  0x0000028bc1183932:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1183936:   	je	0x53
  0x0000028bc118393c:   	cmpl	$0x28, %eax
  0x0000028bc118393f:   	jne	0x2e
  0x0000028bc1183945:   	movq	%r11, %rax
  0x0000028bc1183948:   	pushq	%rcx
  0x0000028bc1183949:   	pushq	%rdi
  0x0000028bc118394a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1183954:   	incl	(%rcx)
  0x0000028bc1183956:   	movq	0x30(%r10), %rdi
  0x0000028bc118395a:   	movl	(%rdi), %ecx
  0x0000028bc118395c:   	addq	$0x8, %rdi
  0x0000028bc1183960:   	testq	%rax, %rax
  0x0000028bc1183963:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1183966:   	popq	%rdi
  0x0000028bc1183967:   	popq	%rcx
  0x0000028bc1183968:   	jne	0x9
  0x0000028bc118396a:   	movq	%r11, 0x28(%r10)
  0x0000028bc118396e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1183973:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118397d:   	andq	$-0x10, %rsp
  0x0000028bc1183981:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118398b:   	callq	*%r10
  0x0000028bc118398e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118398f:   	movl	0xc(%r8), %eax
  0x0000028bc1183993:   	shrl	$0x18, %eax
  0x0000028bc1183996:   	andl	$0xf, %eax
  0x0000028bc1183999:   	cmpl	$0x7, %eax
  0x0000028bc118399c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11839a2:   	movabsq	$0x28bdbd31940, %rcx;   {external_word}
  0x0000028bc11839ac:   	andq	$-0x10, %rsp
  0x0000028bc11839b0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11839ba:   	callq	*%r10
  0x0000028bc11839bd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11839be:   	movl	0x24(%r8), %ebx
  0x0000028bc11839c2:   	pushq	%r10
  0x0000028bc11839c4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11839ce:   	cmpq	(%r10), %r12
  0x0000028bc11839d1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11839d7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11839e1:   	andq	$-0x10, %rsp
  0x0000028bc11839e5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11839ef:   	callq	*%r10
  0x0000028bc11839f2:   	hlt
  0x0000028bc11839f3:   	popq	%r10
  0x0000028bc11839f5:   	shlq	$0x3, %rbx
  0x0000028bc11839f9:   	movq	0x10(%rbx), %rbx
  0x0000028bc11839fd:   	testq	%rbx, %rbx
  0x0000028bc1183a00:   	je	0x3
  0x0000028bc1183a06:   	jmpq	*0x58(%rbx)
  0x0000028bc1183a09:   	jmp	-0x51c4ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1183a0e:   	hlt
  0x0000028bc1183a0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1313   16     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)
 total in heap  [0x0000028bc1183610,0x0000028bc1183a10] = 1024
 relocation     [0x0000028bc1183770,0x0000028bc1183800] = 144
 main code      [0x0000028bc1183800,0x0000028bc1183a0e] = 526
 stub code      [0x0000028bc1183a0e,0x0000028bc1183a10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81d09d8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1183800:   	testq	%r8, %r8
  0x0000028bc1183803:   	je	0x41
  0x0000028bc1183809:   	pushq	%rdi
  0x0000028bc118380a:   	pushq	%r10
  0x0000028bc118380c:   	movl	0x8(%r8), %edi
  0x0000028bc1183810:   	movabsq	$0x800000000, %r10
  0x0000028bc118381a:   	addq	%r10, %rdi
  0x0000028bc118381d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1183827:   	cmpq	(%r10), %rdi
  0x0000028bc118382a:   	je	0x36
  0x0000028bc1183830:   	movq	0x40(%rdi), %rdi
  0x0000028bc1183834:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118383e:   	cmpq	(%r10), %rdi
  0x0000028bc1183841:   	je	0x1f
  0x0000028bc1183847:   	popq	%r10
  0x0000028bc1183849:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118384a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1183854:   	andq	$-0x10, %rsp
  0x0000028bc1183858:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183862:   	callq	*%r10
  0x0000028bc1183865:   	hlt
 ;; L_ok:
  0x0000028bc1183866:   	popq	%r10
  0x0000028bc1183868:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183869:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118386c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1183870:   	movabsq	$0x800000000, %r11
  0x0000028bc118387a:   	addq	%r11, %r10
  0x0000028bc118387d:   	movl	0x18(%r8), %r11d
  0x0000028bc1183881:   	pushq	%r10
  0x0000028bc1183883:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118388d:   	cmpq	(%r10), %r12
  0x0000028bc1183890:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1183896:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11838a0:   	andq	$-0x10, %rsp
  0x0000028bc11838a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11838ae:   	callq	*%r10
  0x0000028bc11838b1:   	hlt
  0x0000028bc11838b2:   	popq	%r10
  0x0000028bc11838b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11838b8:   	testq	%r11, %r11
  0x0000028bc11838bb:   	je	0x41
  0x0000028bc11838c1:   	pushq	%rdi
  0x0000028bc11838c2:   	pushq	%r10
  0x0000028bc11838c4:   	movl	0x8(%r11), %edi
  0x0000028bc11838c8:   	movabsq	$0x800000000, %r10
  0x0000028bc11838d2:   	addq	%r10, %rdi
  0x0000028bc11838d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11838df:   	cmpq	(%r10), %rdi
  0x0000028bc11838e2:   	je	0x36
  0x0000028bc11838e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc11838ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11838f6:   	cmpq	(%r10), %rdi
  0x0000028bc11838f9:   	je	0x1f
  0x0000028bc11838ff:   	popq	%r10
  0x0000028bc1183901:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1183902:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118390c:   	andq	$-0x10, %rsp
  0x0000028bc1183910:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118391a:   	callq	*%r10
  0x0000028bc118391d:   	hlt
 ;; L_ok:
  0x0000028bc118391e:   	popq	%r10
  0x0000028bc1183920:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183921:   	movq	0x10(%r11), %r11
  0x0000028bc1183925:   	cmpq	%r11, %r10
  0x0000028bc1183928:   	je	0x61
  0x0000028bc118392e:   	movl	0x1c(%r11), %eax
  0x0000028bc1183932:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1183936:   	je	0x53
  0x0000028bc118393c:   	cmpl	$0x28, %eax
  0x0000028bc118393f:   	jne	0x2e
  0x0000028bc1183945:   	movq	%r11, %rax
  0x0000028bc1183948:   	pushq	%rcx
  0x0000028bc1183949:   	pushq	%rdi
  0x0000028bc118394a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1183954:   	incl	(%rcx)
  0x0000028bc1183956:   	movq	0x30(%r10), %rdi
  0x0000028bc118395a:   	movl	(%rdi), %ecx
  0x0000028bc118395c:   	addq	$0x8, %rdi
  0x0000028bc1183960:   	testq	%rax, %rax
  0x0000028bc1183963:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1183966:   	popq	%rdi
  0x0000028bc1183967:   	popq	%rcx
  0x0000028bc1183968:   	jne	0x9
  0x0000028bc118396a:   	movq	%r11, 0x28(%r10)
  0x0000028bc118396e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1183973:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118397d:   	andq	$-0x10, %rsp
  0x0000028bc1183981:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118398b:   	callq	*%r10
  0x0000028bc118398e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118398f:   	movl	0xc(%r8), %eax
  0x0000028bc1183993:   	shrl	$0x18, %eax
  0x0000028bc1183996:   	andl	$0xf, %eax
  0x0000028bc1183999:   	cmpl	$0x7, %eax
  0x0000028bc118399c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11839a2:   	movabsq	$0x28bdbd31940, %rcx;   {external_word}
  0x0000028bc11839ac:   	andq	$-0x10, %rsp
  0x0000028bc11839b0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11839ba:   	callq	*%r10
  0x0000028bc11839bd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11839be:   	movl	0x24(%r8), %ebx
  0x0000028bc11839c2:   	pushq	%r10
  0x0000028bc11839c4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11839ce:   	cmpq	(%r10), %r12
  0x0000028bc11839d1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11839d7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11839e1:   	andq	$-0x10, %rsp
  0x0000028bc11839e5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11839ef:   	callq	*%r10
  0x0000028bc11839f2:   	hlt
  0x0000028bc11839f3:   	popq	%r10
  0x0000028bc11839f5:   	shlq	$0x3, %rbx
  0x0000028bc11839f9:   	movq	0x10(%rbx), %rbx
  0x0000028bc11839fd:   	testq	%rbx, %rbx
  0x0000028bc1183a00:   	je	0x3
  0x0000028bc1183a06:   	jmpq	*0x58(%rbx)
  0x0000028bc1183a09:   	jmp	-0x51c4ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1183a0e:   	hlt
  0x0000028bc1183a0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1332   17     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)V (native)
 total in heap  [0x0000028bc1183a90,0x0000028bc1183e80] = 1008
 relocation     [0x0000028bc1183bf0,0x0000028bc1183c78] = 136
 main code      [0x0000028bc1183c80,0x0000028bc1183e7e] = 510
 stub code      [0x0000028bc1183e7e,0x0000028bc1183e80] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81e2d60} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1183c80:   	testq	%r8, %r8
  0x0000028bc1183c83:   	je	0x41
  0x0000028bc1183c89:   	pushq	%rdi
  0x0000028bc1183c8a:   	pushq	%r10
  0x0000028bc1183c8c:   	movl	0x8(%r8), %edi
  0x0000028bc1183c90:   	movabsq	$0x800000000, %r10
  0x0000028bc1183c9a:   	addq	%r10, %rdi
  0x0000028bc1183c9d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1183ca7:   	cmpq	(%r10), %rdi
  0x0000028bc1183caa:   	je	0x36
  0x0000028bc1183cb0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1183cb4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1183cbe:   	cmpq	(%r10), %rdi
  0x0000028bc1183cc1:   	je	0x1f
  0x0000028bc1183cc7:   	popq	%r10
  0x0000028bc1183cc9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1183cca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1183cd4:   	andq	$-0x10, %rsp
  0x0000028bc1183cd8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183ce2:   	callq	*%r10
  0x0000028bc1183ce5:   	hlt
 ;; L_ok:
  0x0000028bc1183ce6:   	popq	%r10
  0x0000028bc1183ce8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183ce9:   	movl	0x8(%rdx), %r10d
  0x0000028bc1183ced:   	movabsq	$0x800000000, %r11
  0x0000028bc1183cf7:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc1183cfa:   	movl	0x18(%r8), %r11d
  0x0000028bc1183cfe:   	pushq	%r10
  0x0000028bc1183d00:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183d0a:   	cmpq	(%r10), %r12
  0x0000028bc1183d0d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1183d13:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1183d1d:   	andq	$-0x10, %rsp
  0x0000028bc1183d21:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183d2b:   	callq	*%r10
  0x0000028bc1183d2e:   	hlt
  0x0000028bc1183d2f:   	popq	%r10
  0x0000028bc1183d31:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1183d35:   	testq	%r11, %r11
  0x0000028bc1183d38:   	je	0x41
  0x0000028bc1183d3e:   	pushq	%rdi
  0x0000028bc1183d3f:   	pushq	%r10
  0x0000028bc1183d41:   	movl	0x8(%r11), %edi
  0x0000028bc1183d45:   	movabsq	$0x800000000, %r10
  0x0000028bc1183d4f:   	addq	%r10, %rdi
  0x0000028bc1183d52:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1183d5c:   	cmpq	(%r10), %rdi
  0x0000028bc1183d5f:   	je	0x36
  0x0000028bc1183d65:   	movq	0x40(%rdi), %rdi
  0x0000028bc1183d69:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1183d73:   	cmpq	(%r10), %rdi
  0x0000028bc1183d76:   	je	0x1f
  0x0000028bc1183d7c:   	popq	%r10
  0x0000028bc1183d7e:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1183d7f:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1183d89:   	andq	$-0x10, %rsp
  0x0000028bc1183d8d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183d97:   	callq	*%r10
  0x0000028bc1183d9a:   	hlt
 ;; L_ok:
  0x0000028bc1183d9b:   	popq	%r10
  0x0000028bc1183d9d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183d9e:   	movq	0x10(%r11), %r11
  0x0000028bc1183da2:   	cmpq	%r11, %r10
  0x0000028bc1183da5:   	je	0x61
  0x0000028bc1183dab:   	movl	0x1c(%r11), %eax
  0x0000028bc1183daf:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1183db3:   	je	0x53
  0x0000028bc1183db9:   	cmpl	$0x28, %eax
  0x0000028bc1183dbc:   	jne	0x2e
  0x0000028bc1183dc2:   	movq	%r11, %rax
  0x0000028bc1183dc5:   	pushq	%rcx
  0x0000028bc1183dc6:   	pushq	%rdi
  0x0000028bc1183dc7:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1183dd1:   	incl	(%rcx)
  0x0000028bc1183dd3:   	movq	0x30(%r10), %rdi
  0x0000028bc1183dd7:   	movl	(%rdi), %ecx
  0x0000028bc1183dd9:   	addq	$0x8, %rdi
  0x0000028bc1183ddd:   	testq	%rax, %rax
  0x0000028bc1183de0:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1183de3:   	popq	%rdi
  0x0000028bc1183de4:   	popq	%rcx
  0x0000028bc1183de5:   	jne	0x9
  0x0000028bc1183de7:   	movq	%r11, 0x28(%r10)
  0x0000028bc1183deb:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1183df0:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1183dfa:   	andq	$-0x10, %rsp
  0x0000028bc1183dfe:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183e08:   	callq	*%r10
  0x0000028bc1183e0b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1183e0c:   	movl	0xc(%r8), %eax
  0x0000028bc1183e10:   	shrl	$0x18, %eax
  0x0000028bc1183e13:   	andl	$0xf, %eax
  0x0000028bc1183e16:   	cmpl	$0x5, %eax
  0x0000028bc1183e19:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc1183e1f:   	movabsq	$0x28bdbd323c0, %rcx;   {external_word}
  0x0000028bc1183e29:   	andq	$-0x10, %rsp
  0x0000028bc1183e2d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183e37:   	callq	*%r10
  0x0000028bc1183e3a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1183e3b:   	movq	0x10(%r8), %r11
  0x0000028bc1183e3f:   	cmpl	$0x0, %r11d
  0x0000028bc1183e43:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1183e49:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1183e53:   	andq	$-0x10, %rsp
  0x0000028bc1183e57:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183e61:   	callq	*%r10
  0x0000028bc1183e64:   	hlt
 ;; L_index_ok:
  0x0000028bc1183e65:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc1183e6d:   	testq	%rbx, %rbx
  0x0000028bc1183e70:   	je	0x3
  0x0000028bc1183e76:   	jmpq	*0x58(%rbx)
  0x0000028bc1183e79:   	jmp	-0x51c95e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1183e7e:   	hlt
  0x0000028bc1183e7f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1337   17     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)V (native)
 total in heap  [0x0000028bc1183a90,0x0000028bc1183e80] = 1008
 relocation     [0x0000028bc1183bf0,0x0000028bc1183c78] = 136
 main code      [0x0000028bc1183c80,0x0000028bc1183e7e] = 510
 stub code      [0x0000028bc1183e7e,0x0000028bc1183e80] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81e2d60} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1183c80:   	testq	%r8, %r8
  0x0000028bc1183c83:   	je	0x41
  0x0000028bc1183c89:   	pushq	%rdi
  0x0000028bc1183c8a:   	pushq	%r10
  0x0000028bc1183c8c:   	movl	0x8(%r8), %edi
  0x0000028bc1183c90:   	movabsq	$0x800000000, %r10
  0x0000028bc1183c9a:   	addq	%r10, %rdi
  0x0000028bc1183c9d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1183ca7:   	cmpq	(%r10), %rdi
  0x0000028bc1183caa:   	je	0x36
  0x0000028bc1183cb0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1183cb4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1183cbe:   	cmpq	(%r10), %rdi
  0x0000028bc1183cc1:   	je	0x1f
  0x0000028bc1183cc7:   	popq	%r10
  0x0000028bc1183cc9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1183cca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1183cd4:   	andq	$-0x10, %rsp
  0x0000028bc1183cd8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183ce2:   	callq	*%r10
  0x0000028bc1183ce5:   	hlt
 ;; L_ok:
  0x0000028bc1183ce6:   	popq	%r10
  0x0000028bc1183ce8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183ce9:   	movl	0x8(%rdx), %r10d
  0x0000028bc1183ced:   	movabsq	$0x800000000, %r11
  0x0000028bc1183cf7:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc1183cfa:   	movl	0x18(%r8), %r11d
  0x0000028bc1183cfe:   	pushq	%r10
  0x0000028bc1183d00:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1183d0a:   	cmpq	(%r10), %r12
  0x0000028bc1183d0d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1183d13:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1183d1d:   	andq	$-0x10, %rsp
  0x0000028bc1183d21:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183d2b:   	callq	*%r10
  0x0000028bc1183d2e:   	hlt
  0x0000028bc1183d2f:   	popq	%r10
  0x0000028bc1183d31:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1183d35:   	testq	%r11, %r11
  0x0000028bc1183d38:   	je	0x41
  0x0000028bc1183d3e:   	pushq	%rdi
  0x0000028bc1183d3f:   	pushq	%r10
  0x0000028bc1183d41:   	movl	0x8(%r11), %edi
  0x0000028bc1183d45:   	movabsq	$0x800000000, %r10
  0x0000028bc1183d4f:   	addq	%r10, %rdi
  0x0000028bc1183d52:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1183d5c:   	cmpq	(%r10), %rdi
  0x0000028bc1183d5f:   	je	0x36
  0x0000028bc1183d65:   	movq	0x40(%rdi), %rdi
  0x0000028bc1183d69:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1183d73:   	cmpq	(%r10), %rdi
  0x0000028bc1183d76:   	je	0x1f
  0x0000028bc1183d7c:   	popq	%r10
  0x0000028bc1183d7e:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1183d7f:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1183d89:   	andq	$-0x10, %rsp
  0x0000028bc1183d8d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183d97:   	callq	*%r10
  0x0000028bc1183d9a:   	hlt
 ;; L_ok:
  0x0000028bc1183d9b:   	popq	%r10
  0x0000028bc1183d9d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1183d9e:   	movq	0x10(%r11), %r11
  0x0000028bc1183da2:   	cmpq	%r11, %r10
  0x0000028bc1183da5:   	je	0x61
  0x0000028bc1183dab:   	movl	0x1c(%r11), %eax
  0x0000028bc1183daf:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1183db3:   	je	0x53
  0x0000028bc1183db9:   	cmpl	$0x28, %eax
  0x0000028bc1183dbc:   	jne	0x2e
  0x0000028bc1183dc2:   	movq	%r11, %rax
  0x0000028bc1183dc5:   	pushq	%rcx
  0x0000028bc1183dc6:   	pushq	%rdi
  0x0000028bc1183dc7:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1183dd1:   	incl	(%rcx)
  0x0000028bc1183dd3:   	movq	0x30(%r10), %rdi
  0x0000028bc1183dd7:   	movl	(%rdi), %ecx
  0x0000028bc1183dd9:   	addq	$0x8, %rdi
  0x0000028bc1183ddd:   	testq	%rax, %rax
  0x0000028bc1183de0:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1183de3:   	popq	%rdi
  0x0000028bc1183de4:   	popq	%rcx
  0x0000028bc1183de5:   	jne	0x9
  0x0000028bc1183de7:   	movq	%r11, 0x28(%r10)
  0x0000028bc1183deb:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1183df0:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1183dfa:   	andq	$-0x10, %rsp
  0x0000028bc1183dfe:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183e08:   	callq	*%r10
  0x0000028bc1183e0b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1183e0c:   	movl	0xc(%r8), %eax
  0x0000028bc1183e10:   	shrl	$0x18, %eax
  0x0000028bc1183e13:   	andl	$0xf, %eax
  0x0000028bc1183e16:   	cmpl	$0x5, %eax
  0x0000028bc1183e19:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc1183e1f:   	movabsq	$0x28bdbd323c0, %rcx;   {external_word}
  0x0000028bc1183e29:   	andq	$-0x10, %rsp
  0x0000028bc1183e2d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183e37:   	callq	*%r10
  0x0000028bc1183e3a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1183e3b:   	movq	0x10(%r8), %r11
  0x0000028bc1183e3f:   	cmpl	$0x0, %r11d
  0x0000028bc1183e43:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1183e49:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1183e53:   	andq	$-0x10, %rsp
  0x0000028bc1183e57:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1183e61:   	callq	*%r10
  0x0000028bc1183e64:   	hlt
 ;; L_index_ok:
  0x0000028bc1183e65:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc1183e6d:   	testq	%rbx, %rbx
  0x0000028bc1183e70:   	je	0x3
  0x0000028bc1183e76:   	jmpq	*0x58(%rbx)
  0x0000028bc1183e79:   	jmp	-0x51c95e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1183e7e:   	hlt
  0x0000028bc1183e7f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1345   18     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)I (native)
 total in heap  [0x0000028bc1183e90,0x0000028bc1184128] = 664
 relocation     [0x0000028bc1183ff0,0x0000028bc1184038] = 72
 main code      [0x0000028bc1184040,0x0000028bc1184128] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81e4018} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184040:   	testq	%r9, %r9
  0x0000028bc1184043:   	je	0x41
  0x0000028bc1184049:   	pushq	%rdi
  0x0000028bc118404a:   	pushq	%r10
  0x0000028bc118404c:   	movl	0x8(%r9), %edi
  0x0000028bc1184050:   	movabsq	$0x800000000, %r10
  0x0000028bc118405a:   	addq	%r10, %rdi
  0x0000028bc118405d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184067:   	cmpq	(%r10), %rdi
  0x0000028bc118406a:   	je	0x36
  0x0000028bc1184070:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184074:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118407e:   	cmpq	(%r10), %rdi
  0x0000028bc1184081:   	je	0x1f
  0x0000028bc1184087:   	popq	%r10
  0x0000028bc1184089:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118408a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1184094:   	andq	$-0x10, %rsp
  0x0000028bc1184098:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11840a2:   	callq	*%r10
  0x0000028bc11840a5:   	hlt
 ;; L_ok:
  0x0000028bc11840a6:   	popq	%r10
  0x0000028bc11840a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11840a9:   	movl	0xc(%r9), %eax
  0x0000028bc11840ad:   	shrl	$0x18, %eax
  0x0000028bc11840b0:   	andl	$0xf, %eax
  0x0000028bc11840b3:   	cmpl	$0x6, %eax
  0x0000028bc11840b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11840bc:   	movabsq	$0x28bdbd31cc0, %rcx;   {external_word}
  0x0000028bc11840c6:   	andq	$-0x10, %rsp
  0x0000028bc11840ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11840d4:   	callq	*%r10
  0x0000028bc11840d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11840d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11840dc:   	pushq	%r10
  0x0000028bc11840de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11840e8:   	cmpq	(%r10), %r12
  0x0000028bc11840eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11840f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11840fb:   	andq	$-0x10, %rsp
  0x0000028bc11840ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184109:   	callq	*%r10
  0x0000028bc118410c:   	hlt
  0x0000028bc118410d:   	popq	%r10
  0x0000028bc118410f:   	shlq	$0x3, %rbx
  0x0000028bc1184113:   	movq	0x10(%rbx), %rbx
  0x0000028bc1184117:   	testq	%rbx, %rbx
  0x0000028bc118411a:   	je	0x3
  0x0000028bc1184120:   	jmpq	*0x58(%rbx)
  0x0000028bc1184123:   	jmp	-0x51cc08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1348   18     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)I (native)
 total in heap  [0x0000028bc1183e90,0x0000028bc1184128] = 664
 relocation     [0x0000028bc1183ff0,0x0000028bc1184038] = 72
 main code      [0x0000028bc1184040,0x0000028bc1184128] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81e4018} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184040:   	testq	%r9, %r9
  0x0000028bc1184043:   	je	0x41
  0x0000028bc1184049:   	pushq	%rdi
  0x0000028bc118404a:   	pushq	%r10
  0x0000028bc118404c:   	movl	0x8(%r9), %edi
  0x0000028bc1184050:   	movabsq	$0x800000000, %r10
  0x0000028bc118405a:   	addq	%r10, %rdi
  0x0000028bc118405d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184067:   	cmpq	(%r10), %rdi
  0x0000028bc118406a:   	je	0x36
  0x0000028bc1184070:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184074:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118407e:   	cmpq	(%r10), %rdi
  0x0000028bc1184081:   	je	0x1f
  0x0000028bc1184087:   	popq	%r10
  0x0000028bc1184089:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118408a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1184094:   	andq	$-0x10, %rsp
  0x0000028bc1184098:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11840a2:   	callq	*%r10
  0x0000028bc11840a5:   	hlt
 ;; L_ok:
  0x0000028bc11840a6:   	popq	%r10
  0x0000028bc11840a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11840a9:   	movl	0xc(%r9), %eax
  0x0000028bc11840ad:   	shrl	$0x18, %eax
  0x0000028bc11840b0:   	andl	$0xf, %eax
  0x0000028bc11840b3:   	cmpl	$0x6, %eax
  0x0000028bc11840b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11840bc:   	movabsq	$0x28bdbd31cc0, %rcx;   {external_word}
  0x0000028bc11840c6:   	andq	$-0x10, %rsp
  0x0000028bc11840ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11840d4:   	callq	*%r10
  0x0000028bc11840d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11840d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11840dc:   	pushq	%r10
  0x0000028bc11840de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11840e8:   	cmpq	(%r10), %r12
  0x0000028bc11840eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11840f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11840fb:   	andq	$-0x10, %rsp
  0x0000028bc11840ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184109:   	callq	*%r10
  0x0000028bc118410c:   	hlt
  0x0000028bc118410d:   	popq	%r10
  0x0000028bc118410f:   	shlq	$0x3, %rbx
  0x0000028bc1184113:   	movq	0x10(%rbx), %rbx
  0x0000028bc1184117:   	testq	%rbx, %rbx
  0x0000028bc118411a:   	je	0x3
  0x0000028bc1184120:   	jmpq	*0x58(%rbx)
  0x0000028bc1184123:   	jmp	-0x51cc08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1357   19     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)V (native)
 total in heap  [0x0000028bc1184190,0x0000028bc1184590] = 1024
 relocation     [0x0000028bc11842f0,0x0000028bc1184380] = 144
 main code      [0x0000028bc1184380,0x0000028bc118458e] = 526
 stub code      [0x0000028bc118458e,0x0000028bc1184590] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81e6340} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184380:   	testq	%r8, %r8
  0x0000028bc1184383:   	je	0x41
  0x0000028bc1184389:   	pushq	%rdi
  0x0000028bc118438a:   	pushq	%r10
  0x0000028bc118438c:   	movl	0x8(%r8), %edi
  0x0000028bc1184390:   	movabsq	$0x800000000, %r10
  0x0000028bc118439a:   	addq	%r10, %rdi
  0x0000028bc118439d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11843a7:   	cmpq	(%r10), %rdi
  0x0000028bc11843aa:   	je	0x36
  0x0000028bc11843b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11843b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11843be:   	cmpq	(%r10), %rdi
  0x0000028bc11843c1:   	je	0x1f
  0x0000028bc11843c7:   	popq	%r10
  0x0000028bc11843c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11843ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11843d4:   	andq	$-0x10, %rsp
  0x0000028bc11843d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11843e2:   	callq	*%r10
  0x0000028bc11843e5:   	hlt
 ;; L_ok:
  0x0000028bc11843e6:   	popq	%r10
  0x0000028bc11843e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11843e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11843ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc11843f0:   	movabsq	$0x800000000, %r11
  0x0000028bc11843fa:   	addq	%r11, %r10
  0x0000028bc11843fd:   	movl	0x18(%r8), %r11d
  0x0000028bc1184401:   	pushq	%r10
  0x0000028bc1184403:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118440d:   	cmpq	(%r10), %r12
  0x0000028bc1184410:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1184416:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1184420:   	andq	$-0x10, %rsp
  0x0000028bc1184424:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118442e:   	callq	*%r10
  0x0000028bc1184431:   	hlt
  0x0000028bc1184432:   	popq	%r10
  0x0000028bc1184434:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1184438:   	testq	%r11, %r11
  0x0000028bc118443b:   	je	0x41
  0x0000028bc1184441:   	pushq	%rdi
  0x0000028bc1184442:   	pushq	%r10
  0x0000028bc1184444:   	movl	0x8(%r11), %edi
  0x0000028bc1184448:   	movabsq	$0x800000000, %r10
  0x0000028bc1184452:   	addq	%r10, %rdi
  0x0000028bc1184455:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118445f:   	cmpq	(%r10), %rdi
  0x0000028bc1184462:   	je	0x36
  0x0000028bc1184468:   	movq	0x40(%rdi), %rdi
  0x0000028bc118446c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184476:   	cmpq	(%r10), %rdi
  0x0000028bc1184479:   	je	0x1f
  0x0000028bc118447f:   	popq	%r10
  0x0000028bc1184481:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1184482:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118448c:   	andq	$-0x10, %rsp
  0x0000028bc1184490:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118449a:   	callq	*%r10
  0x0000028bc118449d:   	hlt
 ;; L_ok:
  0x0000028bc118449e:   	popq	%r10
  0x0000028bc11844a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11844a1:   	movq	0x10(%r11), %r11
  0x0000028bc11844a5:   	cmpq	%r11, %r10
  0x0000028bc11844a8:   	je	0x61
  0x0000028bc11844ae:   	movl	0x1c(%r11), %eax
  0x0000028bc11844b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11844b6:   	je	0x53
  0x0000028bc11844bc:   	cmpl	$0x28, %eax
  0x0000028bc11844bf:   	jne	0x2e
  0x0000028bc11844c5:   	movq	%r11, %rax
  0x0000028bc11844c8:   	pushq	%rcx
  0x0000028bc11844c9:   	pushq	%rdi
  0x0000028bc11844ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11844d4:   	incl	(%rcx)
  0x0000028bc11844d6:   	movq	0x30(%r10), %rdi
  0x0000028bc11844da:   	movl	(%rdi), %ecx
  0x0000028bc11844dc:   	addq	$0x8, %rdi
  0x0000028bc11844e0:   	testq	%rax, %rax
  0x0000028bc11844e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11844e6:   	popq	%rdi
  0x0000028bc11844e7:   	popq	%rcx
  0x0000028bc11844e8:   	jne	0x9
  0x0000028bc11844ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc11844ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11844f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11844fd:   	andq	$-0x10, %rsp
  0x0000028bc1184501:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118450b:   	callq	*%r10
  0x0000028bc118450e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118450f:   	movl	0xc(%r8), %eax
  0x0000028bc1184513:   	shrl	$0x18, %eax
  0x0000028bc1184516:   	andl	$0xf, %eax
  0x0000028bc1184519:   	cmpl	$0x7, %eax
  0x0000028bc118451c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1184522:   	movabsq	$0x28bdbd32440, %rcx;   {external_word}
  0x0000028bc118452c:   	andq	$-0x10, %rsp
  0x0000028bc1184530:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118453a:   	callq	*%r10
  0x0000028bc118453d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118453e:   	movl	0x24(%r8), %ebx
  0x0000028bc1184542:   	pushq	%r10
  0x0000028bc1184544:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118454e:   	cmpq	(%r10), %r12
  0x0000028bc1184551:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1184557:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1184561:   	andq	$-0x10, %rsp
  0x0000028bc1184565:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118456f:   	callq	*%r10
  0x0000028bc1184572:   	hlt
  0x0000028bc1184573:   	popq	%r10
  0x0000028bc1184575:   	shlq	$0x3, %rbx
  0x0000028bc1184579:   	movq	0x10(%rbx), %rbx
  0x0000028bc118457d:   	testq	%rbx, %rbx
  0x0000028bc1184580:   	je	0x3
  0x0000028bc1184586:   	jmpq	*0x58(%rbx)
  0x0000028bc1184589:   	jmp	-0x51d06e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118458e:   	hlt
  0x0000028bc118458f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1361   19     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)V (native)
 total in heap  [0x0000028bc1184190,0x0000028bc1184590] = 1024
 relocation     [0x0000028bc11842f0,0x0000028bc1184380] = 144
 main code      [0x0000028bc1184380,0x0000028bc118458e] = 526
 stub code      [0x0000028bc118458e,0x0000028bc1184590] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81e6340} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184380:   	testq	%r8, %r8
  0x0000028bc1184383:   	je	0x41
  0x0000028bc1184389:   	pushq	%rdi
  0x0000028bc118438a:   	pushq	%r10
  0x0000028bc118438c:   	movl	0x8(%r8), %edi
  0x0000028bc1184390:   	movabsq	$0x800000000, %r10
  0x0000028bc118439a:   	addq	%r10, %rdi
  0x0000028bc118439d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11843a7:   	cmpq	(%r10), %rdi
  0x0000028bc11843aa:   	je	0x36
  0x0000028bc11843b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11843b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11843be:   	cmpq	(%r10), %rdi
  0x0000028bc11843c1:   	je	0x1f
  0x0000028bc11843c7:   	popq	%r10
  0x0000028bc11843c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11843ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11843d4:   	andq	$-0x10, %rsp
  0x0000028bc11843d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11843e2:   	callq	*%r10
  0x0000028bc11843e5:   	hlt
 ;; L_ok:
  0x0000028bc11843e6:   	popq	%r10
  0x0000028bc11843e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11843e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11843ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc11843f0:   	movabsq	$0x800000000, %r11
  0x0000028bc11843fa:   	addq	%r11, %r10
  0x0000028bc11843fd:   	movl	0x18(%r8), %r11d
  0x0000028bc1184401:   	pushq	%r10
  0x0000028bc1184403:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118440d:   	cmpq	(%r10), %r12
  0x0000028bc1184410:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1184416:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1184420:   	andq	$-0x10, %rsp
  0x0000028bc1184424:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118442e:   	callq	*%r10
  0x0000028bc1184431:   	hlt
  0x0000028bc1184432:   	popq	%r10
  0x0000028bc1184434:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1184438:   	testq	%r11, %r11
  0x0000028bc118443b:   	je	0x41
  0x0000028bc1184441:   	pushq	%rdi
  0x0000028bc1184442:   	pushq	%r10
  0x0000028bc1184444:   	movl	0x8(%r11), %edi
  0x0000028bc1184448:   	movabsq	$0x800000000, %r10
  0x0000028bc1184452:   	addq	%r10, %rdi
  0x0000028bc1184455:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118445f:   	cmpq	(%r10), %rdi
  0x0000028bc1184462:   	je	0x36
  0x0000028bc1184468:   	movq	0x40(%rdi), %rdi
  0x0000028bc118446c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184476:   	cmpq	(%r10), %rdi
  0x0000028bc1184479:   	je	0x1f
  0x0000028bc118447f:   	popq	%r10
  0x0000028bc1184481:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1184482:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118448c:   	andq	$-0x10, %rsp
  0x0000028bc1184490:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118449a:   	callq	*%r10
  0x0000028bc118449d:   	hlt
 ;; L_ok:
  0x0000028bc118449e:   	popq	%r10
  0x0000028bc11844a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11844a1:   	movq	0x10(%r11), %r11
  0x0000028bc11844a5:   	cmpq	%r11, %r10
  0x0000028bc11844a8:   	je	0x61
  0x0000028bc11844ae:   	movl	0x1c(%r11), %eax
  0x0000028bc11844b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11844b6:   	je	0x53
  0x0000028bc11844bc:   	cmpl	$0x28, %eax
  0x0000028bc11844bf:   	jne	0x2e
  0x0000028bc11844c5:   	movq	%r11, %rax
  0x0000028bc11844c8:   	pushq	%rcx
  0x0000028bc11844c9:   	pushq	%rdi
  0x0000028bc11844ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11844d4:   	incl	(%rcx)
  0x0000028bc11844d6:   	movq	0x30(%r10), %rdi
  0x0000028bc11844da:   	movl	(%rdi), %ecx
  0x0000028bc11844dc:   	addq	$0x8, %rdi
  0x0000028bc11844e0:   	testq	%rax, %rax
  0x0000028bc11844e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11844e6:   	popq	%rdi
  0x0000028bc11844e7:   	popq	%rcx
  0x0000028bc11844e8:   	jne	0x9
  0x0000028bc11844ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc11844ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11844f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11844fd:   	andq	$-0x10, %rsp
  0x0000028bc1184501:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118450b:   	callq	*%r10
  0x0000028bc118450e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118450f:   	movl	0xc(%r8), %eax
  0x0000028bc1184513:   	shrl	$0x18, %eax
  0x0000028bc1184516:   	andl	$0xf, %eax
  0x0000028bc1184519:   	cmpl	$0x7, %eax
  0x0000028bc118451c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1184522:   	movabsq	$0x28bdbd32440, %rcx;   {external_word}
  0x0000028bc118452c:   	andq	$-0x10, %rsp
  0x0000028bc1184530:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118453a:   	callq	*%r10
  0x0000028bc118453d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118453e:   	movl	0x24(%r8), %ebx
  0x0000028bc1184542:   	pushq	%r10
  0x0000028bc1184544:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118454e:   	cmpq	(%r10), %r12
  0x0000028bc1184551:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1184557:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1184561:   	andq	$-0x10, %rsp
  0x0000028bc1184565:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118456f:   	callq	*%r10
  0x0000028bc1184572:   	hlt
  0x0000028bc1184573:   	popq	%r10
  0x0000028bc1184575:   	shlq	$0x3, %rbx
  0x0000028bc1184579:   	movq	0x10(%rbx), %rbx
  0x0000028bc118457d:   	testq	%rbx, %rbx
  0x0000028bc1184580:   	je	0x3
  0x0000028bc1184586:   	jmpq	*0x58(%rbx)
  0x0000028bc1184589:   	jmp	-0x51d06e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118458e:   	hlt
  0x0000028bc118458f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1379   20     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLL)L (native)
 total in heap  [0x0000028bc1184610,0x0000028bc11849c8] = 952
 relocation     [0x0000028bc1184770,0x0000028bc11847e8] = 120
 main code      [0x0000028bc1184800,0x0000028bc11849c7] = 455
 stub code      [0x0000028bc11849c7,0x0000028bc11849c8] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81ecba8} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184800:   	testq	%r9, %r9
  0x0000028bc1184803:   	je	0x41
  0x0000028bc1184809:   	pushq	%rdi
  0x0000028bc118480a:   	pushq	%r10
  0x0000028bc118480c:   	movl	0x8(%r9), %edi
  0x0000028bc1184810:   	movabsq	$0x800000000, %r10
  0x0000028bc118481a:   	addq	%r10, %rdi
  0x0000028bc118481d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184827:   	cmpq	(%r10), %rdi
  0x0000028bc118482a:   	je	0x36
  0x0000028bc1184830:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184834:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118483e:   	cmpq	(%r10), %rdi
  0x0000028bc1184841:   	je	0x1f
  0x0000028bc1184847:   	popq	%r10
  0x0000028bc1184849:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118484a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1184854:   	andq	$-0x10, %rsp
  0x0000028bc1184858:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184862:   	callq	*%r10
  0x0000028bc1184865:   	hlt
 ;; L_ok:
  0x0000028bc1184866:   	popq	%r10
  0x0000028bc1184868:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1184869:   	movl	0x8(%rdx), %r10d
  0x0000028bc118486d:   	movabsq	$0x800000000, %r11
  0x0000028bc1184877:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118487a:   	movl	0xc(%r9), %eax
  0x0000028bc118487e:   	shrl	$0x18, %eax
  0x0000028bc1184881:   	andl	$0xf, %eax
  0x0000028bc1184884:   	cmpl	$0x9, %eax
  0x0000028bc1184887:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118488d:   	movabsq	$0x28bb7e96b20, %rcx;   {external_word}
  0x0000028bc1184897:   	andq	$-0x10, %rsp
  0x0000028bc118489b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11848a5:   	callq	*%r10
  0x0000028bc11848a8:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11848a9:   	movl	0x18(%r9), %eax
  0x0000028bc11848ad:   	pushq	%r10
  0x0000028bc11848af:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11848b9:   	cmpq	(%r10), %r12
  0x0000028bc11848bc:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11848c2:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11848cc:   	andq	$-0x10, %rsp
  0x0000028bc11848d0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11848da:   	callq	*%r10
  0x0000028bc11848dd:   	hlt
  0x0000028bc11848de:   	popq	%r10
  0x0000028bc11848e0:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc11848e4:   	testq	%rax, %rax
  0x0000028bc11848e7:   	je	0x40
  0x0000028bc11848ed:   	pushq	%rdi
  0x0000028bc11848ee:   	pushq	%r10
  0x0000028bc11848f0:   	movl	0x8(%rax), %edi
  0x0000028bc11848f3:   	movabsq	$0x800000000, %r10
  0x0000028bc11848fd:   	addq	%r10, %rdi
  0x0000028bc1184900:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118490a:   	cmpq	(%r10), %rdi
  0x0000028bc118490d:   	je	0x36
  0x0000028bc1184913:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184917:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184921:   	cmpq	(%r10), %rdi
  0x0000028bc1184924:   	je	0x1f
  0x0000028bc118492a:   	popq	%r10
  0x0000028bc118492c:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118492d:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1184937:   	andq	$-0x10, %rsp
  0x0000028bc118493b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184945:   	callq	*%r10
  0x0000028bc1184948:   	hlt
 ;; L_ok:
  0x0000028bc1184949:   	popq	%r10
  0x0000028bc118494b:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118494c:   	movq	0x10(%rax), %rax
  0x0000028bc1184950:   	movq	0x10(%r9), %rbx
  0x0000028bc1184954:   	cmpl	$0x0, %ebx
  0x0000028bc1184957:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118495d:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1184967:   	andq	$-0x10, %rsp
  0x0000028bc118496b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184975:   	callq	*%r10
  0x0000028bc1184978:   	hlt
  0x0000028bc1184979:   	movl	0xa8(%r10), %r11d
  0x0000028bc1184980:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1184988:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118498c:   	movq	(%r11), %rbx
  0x0000028bc118498f:   	cmpq	%rbx, %rax
  0x0000028bc1184992:   	je	0x15
  0x0000028bc1184994:   	testq	%rbx, %rbx
  0x0000028bc1184997:   	je	0x25
  0x0000028bc118499d:   	addq	$0x10, %r11
  0x0000028bc11849a1:   	movq	(%r11), %rbx
  0x0000028bc11849a4:   	cmpq	%rbx, %rax
  0x0000028bc11849a7:   	jne	-0x15
  0x0000028bc11849a9:   	movl	0x8(%r11), %r11d
  0x0000028bc11849ad:   	movq	(%r10,%r11), %rbx
  0x0000028bc11849b1:   	testq	%rbx, %rbx
  0x0000028bc11849b4:   	je	0x3
  0x0000028bc11849ba:   	jmpq	*0x58(%rbx)
  0x0000028bc11849bd:   	jmp	-0x51d4a2           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc11849c2:   	jmp	-0x51d7a7           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc11849c7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1383   20     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLL)L (native)
 total in heap  [0x0000028bc1184610,0x0000028bc11849c8] = 952
 relocation     [0x0000028bc1184770,0x0000028bc11847e8] = 120
 main code      [0x0000028bc1184800,0x0000028bc11849c7] = 455
 stub code      [0x0000028bc11849c7,0x0000028bc11849c8] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd81ecba8} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184800:   	testq	%r9, %r9
  0x0000028bc1184803:   	je	0x41
  0x0000028bc1184809:   	pushq	%rdi
  0x0000028bc118480a:   	pushq	%r10
  0x0000028bc118480c:   	movl	0x8(%r9), %edi
  0x0000028bc1184810:   	movabsq	$0x800000000, %r10
  0x0000028bc118481a:   	addq	%r10, %rdi
  0x0000028bc118481d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184827:   	cmpq	(%r10), %rdi
  0x0000028bc118482a:   	je	0x36
  0x0000028bc1184830:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184834:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118483e:   	cmpq	(%r10), %rdi
  0x0000028bc1184841:   	je	0x1f
  0x0000028bc1184847:   	popq	%r10
  0x0000028bc1184849:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118484a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1184854:   	andq	$-0x10, %rsp
  0x0000028bc1184858:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184862:   	callq	*%r10
  0x0000028bc1184865:   	hlt
 ;; L_ok:
  0x0000028bc1184866:   	popq	%r10
  0x0000028bc1184868:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1184869:   	movl	0x8(%rdx), %r10d
  0x0000028bc118486d:   	movabsq	$0x800000000, %r11
  0x0000028bc1184877:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118487a:   	movl	0xc(%r9), %eax
  0x0000028bc118487e:   	shrl	$0x18, %eax
  0x0000028bc1184881:   	andl	$0xf, %eax
  0x0000028bc1184884:   	cmpl	$0x9, %eax
  0x0000028bc1184887:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118488d:   	movabsq	$0x28bb7e96b20, %rcx;   {external_word}
  0x0000028bc1184897:   	andq	$-0x10, %rsp
  0x0000028bc118489b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11848a5:   	callq	*%r10
  0x0000028bc11848a8:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11848a9:   	movl	0x18(%r9), %eax
  0x0000028bc11848ad:   	pushq	%r10
  0x0000028bc11848af:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11848b9:   	cmpq	(%r10), %r12
  0x0000028bc11848bc:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11848c2:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11848cc:   	andq	$-0x10, %rsp
  0x0000028bc11848d0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11848da:   	callq	*%r10
  0x0000028bc11848dd:   	hlt
  0x0000028bc11848de:   	popq	%r10
  0x0000028bc11848e0:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc11848e4:   	testq	%rax, %rax
  0x0000028bc11848e7:   	je	0x40
  0x0000028bc11848ed:   	pushq	%rdi
  0x0000028bc11848ee:   	pushq	%r10
  0x0000028bc11848f0:   	movl	0x8(%rax), %edi
  0x0000028bc11848f3:   	movabsq	$0x800000000, %r10
  0x0000028bc11848fd:   	addq	%r10, %rdi
  0x0000028bc1184900:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118490a:   	cmpq	(%r10), %rdi
  0x0000028bc118490d:   	je	0x36
  0x0000028bc1184913:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184917:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184921:   	cmpq	(%r10), %rdi
  0x0000028bc1184924:   	je	0x1f
  0x0000028bc118492a:   	popq	%r10
  0x0000028bc118492c:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118492d:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1184937:   	andq	$-0x10, %rsp
  0x0000028bc118493b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184945:   	callq	*%r10
  0x0000028bc1184948:   	hlt
 ;; L_ok:
  0x0000028bc1184949:   	popq	%r10
  0x0000028bc118494b:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118494c:   	movq	0x10(%rax), %rax
  0x0000028bc1184950:   	movq	0x10(%r9), %rbx
  0x0000028bc1184954:   	cmpl	$0x0, %ebx
  0x0000028bc1184957:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118495d:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1184967:   	andq	$-0x10, %rsp
  0x0000028bc118496b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184975:   	callq	*%r10
  0x0000028bc1184978:   	hlt
  0x0000028bc1184979:   	movl	0xa8(%r10), %r11d
  0x0000028bc1184980:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1184988:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118498c:   	movq	(%r11), %rbx
  0x0000028bc118498f:   	cmpq	%rbx, %rax
  0x0000028bc1184992:   	je	0x15
  0x0000028bc1184994:   	testq	%rbx, %rbx
  0x0000028bc1184997:   	je	0x25
  0x0000028bc118499d:   	addq	$0x10, %r11
  0x0000028bc11849a1:   	movq	(%r11), %rbx
  0x0000028bc11849a4:   	cmpq	%rbx, %rax
  0x0000028bc11849a7:   	jne	-0x15
  0x0000028bc11849a9:   	movl	0x8(%r11), %r11d
  0x0000028bc11849ad:   	movq	(%r10,%r11), %rbx
  0x0000028bc11849b1:   	testq	%rbx, %rbx
  0x0000028bc11849b4:   	je	0x3
  0x0000028bc11849ba:   	jmpq	*0x58(%rbx)
  0x0000028bc11849bd:   	jmp	-0x51d4a2           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc11849c2:   	jmp	-0x51d7a7           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc11849c7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1406   21     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLL)I (native)
 total in heap  [0x0000028bc1184a10,0x0000028bc1184dc8] = 952
 relocation     [0x0000028bc1184b70,0x0000028bc1184be8] = 120
 main code      [0x0000028bc1184c00,0x0000028bc1184dc7] = 455
 stub code      [0x0000028bc1184dc7,0x0000028bc1184dc8] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8144818} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184c00:   	testq	%r9, %r9
  0x0000028bc1184c03:   	je	0x41
  0x0000028bc1184c09:   	pushq	%rdi
  0x0000028bc1184c0a:   	pushq	%r10
  0x0000028bc1184c0c:   	movl	0x8(%r9), %edi
  0x0000028bc1184c10:   	movabsq	$0x800000000, %r10
  0x0000028bc1184c1a:   	addq	%r10, %rdi
  0x0000028bc1184c1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184c27:   	cmpq	(%r10), %rdi
  0x0000028bc1184c2a:   	je	0x36
  0x0000028bc1184c30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184c34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184c3e:   	cmpq	(%r10), %rdi
  0x0000028bc1184c41:   	je	0x1f
  0x0000028bc1184c47:   	popq	%r10
  0x0000028bc1184c49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1184c4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1184c54:   	andq	$-0x10, %rsp
  0x0000028bc1184c58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184c62:   	callq	*%r10
  0x0000028bc1184c65:   	hlt
 ;; L_ok:
  0x0000028bc1184c66:   	popq	%r10
  0x0000028bc1184c68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1184c69:   	movl	0x8(%rdx), %r10d
  0x0000028bc1184c6d:   	movabsq	$0x800000000, %r11
  0x0000028bc1184c77:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1184c7a:   	movl	0xc(%r9), %eax
  0x0000028bc1184c7e:   	shrl	$0x18, %eax
  0x0000028bc1184c81:   	andl	$0xf, %eax
  0x0000028bc1184c84:   	cmpl	$0x9, %eax
  0x0000028bc1184c87:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc1184c8d:   	movabsq	$0x28bdbd32740, %rcx;   {external_word}
  0x0000028bc1184c97:   	andq	$-0x10, %rsp
  0x0000028bc1184c9b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184ca5:   	callq	*%r10
  0x0000028bc1184ca8:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1184ca9:   	movl	0x18(%r9), %eax
  0x0000028bc1184cad:   	pushq	%r10
  0x0000028bc1184caf:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1184cb9:   	cmpq	(%r10), %r12
  0x0000028bc1184cbc:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1184cc2:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1184ccc:   	andq	$-0x10, %rsp
  0x0000028bc1184cd0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184cda:   	callq	*%r10
  0x0000028bc1184cdd:   	hlt
  0x0000028bc1184cde:   	popq	%r10
  0x0000028bc1184ce0:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc1184ce4:   	testq	%rax, %rax
  0x0000028bc1184ce7:   	je	0x40
  0x0000028bc1184ced:   	pushq	%rdi
  0x0000028bc1184cee:   	pushq	%r10
  0x0000028bc1184cf0:   	movl	0x8(%rax), %edi
  0x0000028bc1184cf3:   	movabsq	$0x800000000, %r10
  0x0000028bc1184cfd:   	addq	%r10, %rdi
  0x0000028bc1184d00:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184d0a:   	cmpq	(%r10), %rdi
  0x0000028bc1184d0d:   	je	0x36
  0x0000028bc1184d13:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184d17:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184d21:   	cmpq	(%r10), %rdi
  0x0000028bc1184d24:   	je	0x1f
  0x0000028bc1184d2a:   	popq	%r10
  0x0000028bc1184d2c:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1184d2d:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1184d37:   	andq	$-0x10, %rsp
  0x0000028bc1184d3b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184d45:   	callq	*%r10
  0x0000028bc1184d48:   	hlt
 ;; L_ok:
  0x0000028bc1184d49:   	popq	%r10
  0x0000028bc1184d4b:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1184d4c:   	movq	0x10(%rax), %rax
  0x0000028bc1184d50:   	movq	0x10(%r9), %rbx
  0x0000028bc1184d54:   	cmpl	$0x0, %ebx
  0x0000028bc1184d57:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc1184d5d:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1184d67:   	andq	$-0x10, %rsp
  0x0000028bc1184d6b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184d75:   	callq	*%r10
  0x0000028bc1184d78:   	hlt
  0x0000028bc1184d79:   	movl	0xa8(%r10), %r11d
  0x0000028bc1184d80:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1184d88:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc1184d8c:   	movq	(%r11), %rbx
  0x0000028bc1184d8f:   	cmpq	%rbx, %rax
  0x0000028bc1184d92:   	je	0x15
  0x0000028bc1184d94:   	testq	%rbx, %rbx
  0x0000028bc1184d97:   	je	0x25
  0x0000028bc1184d9d:   	addq	$0x10, %r11
  0x0000028bc1184da1:   	movq	(%r11), %rbx
  0x0000028bc1184da4:   	cmpq	%rbx, %rax
  0x0000028bc1184da7:   	jne	-0x15
  0x0000028bc1184da9:   	movl	0x8(%r11), %r11d
  0x0000028bc1184dad:   	movq	(%r10,%r11), %rbx
  0x0000028bc1184db1:   	testq	%rbx, %rbx
  0x0000028bc1184db4:   	je	0x3
  0x0000028bc1184dba:   	jmpq	*0x58(%rbx)
  0x0000028bc1184dbd:   	jmp	-0x51d8a2           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc1184dc2:   	jmp	-0x51dba7           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc1184dc7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1409   21     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLL)I (native)
 total in heap  [0x0000028bc1184a10,0x0000028bc1184dc8] = 952
 relocation     [0x0000028bc1184b70,0x0000028bc1184be8] = 120
 main code      [0x0000028bc1184c00,0x0000028bc1184dc7] = 455
 stub code      [0x0000028bc1184dc7,0x0000028bc1184dc8] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8144818} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1184c00:   	testq	%r9, %r9
  0x0000028bc1184c03:   	je	0x41
  0x0000028bc1184c09:   	pushq	%rdi
  0x0000028bc1184c0a:   	pushq	%r10
  0x0000028bc1184c0c:   	movl	0x8(%r9), %edi
  0x0000028bc1184c10:   	movabsq	$0x800000000, %r10
  0x0000028bc1184c1a:   	addq	%r10, %rdi
  0x0000028bc1184c1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184c27:   	cmpq	(%r10), %rdi
  0x0000028bc1184c2a:   	je	0x36
  0x0000028bc1184c30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184c34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1184c3e:   	cmpq	(%r10), %rdi
  0x0000028bc1184c41:   	je	0x1f
  0x0000028bc1184c47:   	popq	%r10
  0x0000028bc1184c49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1184c4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1184c54:   	andq	$-0x10, %rsp
  0x0000028bc1184c58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184c62:   	callq	*%r10
  0x0000028bc1184c65:   	hlt
 ;; L_ok:
  0x0000028bc1184c66:   	popq	%r10
  0x0000028bc1184c68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1184c69:   	movl	0x8(%rdx), %r10d
  0x0000028bc1184c6d:   	movabsq	$0x800000000, %r11
  0x0000028bc1184c77:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1184c7a:   	movl	0xc(%r9), %eax
  0x0000028bc1184c7e:   	shrl	$0x18, %eax
  0x0000028bc1184c81:   	andl	$0xf, %eax
  0x0000028bc1184c84:   	cmpl	$0x9, %eax
  0x0000028bc1184c87:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc1184c8d:   	movabsq	$0x28bdbd32740, %rcx;   {external_word}
  0x0000028bc1184c97:   	andq	$-0x10, %rsp
  0x0000028bc1184c9b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184ca5:   	callq	*%r10
  0x0000028bc1184ca8:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1184ca9:   	movl	0x18(%r9), %eax
  0x0000028bc1184cad:   	pushq	%r10
  0x0000028bc1184caf:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1184cb9:   	cmpq	(%r10), %r12
  0x0000028bc1184cbc:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1184cc2:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1184ccc:   	andq	$-0x10, %rsp
  0x0000028bc1184cd0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184cda:   	callq	*%r10
  0x0000028bc1184cdd:   	hlt
  0x0000028bc1184cde:   	popq	%r10
  0x0000028bc1184ce0:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc1184ce4:   	testq	%rax, %rax
  0x0000028bc1184ce7:   	je	0x40
  0x0000028bc1184ced:   	pushq	%rdi
  0x0000028bc1184cee:   	pushq	%r10
  0x0000028bc1184cf0:   	movl	0x8(%rax), %edi
  0x0000028bc1184cf3:   	movabsq	$0x800000000, %r10
  0x0000028bc1184cfd:   	addq	%r10, %rdi
  0x0000028bc1184d00:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184d0a:   	cmpq	(%r10), %rdi
  0x0000028bc1184d0d:   	je	0x36
  0x0000028bc1184d13:   	movq	0x40(%rdi), %rdi
  0x0000028bc1184d17:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1184d21:   	cmpq	(%r10), %rdi
  0x0000028bc1184d24:   	je	0x1f
  0x0000028bc1184d2a:   	popq	%r10
  0x0000028bc1184d2c:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1184d2d:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1184d37:   	andq	$-0x10, %rsp
  0x0000028bc1184d3b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184d45:   	callq	*%r10
  0x0000028bc1184d48:   	hlt
 ;; L_ok:
  0x0000028bc1184d49:   	popq	%r10
  0x0000028bc1184d4b:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1184d4c:   	movq	0x10(%rax), %rax
  0x0000028bc1184d50:   	movq	0x10(%r9), %rbx
  0x0000028bc1184d54:   	cmpl	$0x0, %ebx
  0x0000028bc1184d57:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc1184d5d:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1184d67:   	andq	$-0x10, %rsp
  0x0000028bc1184d6b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1184d75:   	callq	*%r10
  0x0000028bc1184d78:   	hlt
  0x0000028bc1184d79:   	movl	0xa8(%r10), %r11d
  0x0000028bc1184d80:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1184d88:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc1184d8c:   	movq	(%r11), %rbx
  0x0000028bc1184d8f:   	cmpq	%rbx, %rax
  0x0000028bc1184d92:   	je	0x15
  0x0000028bc1184d94:   	testq	%rbx, %rbx
  0x0000028bc1184d97:   	je	0x25
  0x0000028bc1184d9d:   	addq	$0x10, %r11
  0x0000028bc1184da1:   	movq	(%r11), %rbx
  0x0000028bc1184da4:   	cmpq	%rbx, %rax
  0x0000028bc1184da7:   	jne	-0x15
  0x0000028bc1184da9:   	movl	0x8(%r11), %r11d
  0x0000028bc1184dad:   	movq	(%r10,%r11), %rbx
  0x0000028bc1184db1:   	testq	%rbx, %rbx
  0x0000028bc1184db4:   	je	0x3
  0x0000028bc1184dba:   	jmpq	*0x58(%rbx)
  0x0000028bc1184dbd:   	jmp	-0x51d8a2           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc1184dc2:   	jmp	-0x51dba7           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc1184dc7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1641   22     n 0       java.lang.invoke.MethodHandle::linkToInterface(LL)L (native)
 total in heap  [0x0000028bc1184e10,0x0000028bc11851c8] = 952
 relocation     [0x0000028bc1184f70,0x0000028bc1184fe8] = 120
 main code      [0x0000028bc1185000,0x0000028bc11851c7] = 455
 stub code      [0x0000028bc11851c7,0x0000028bc11851c8] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8122698} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185000:   	testq	%r8, %r8
  0x0000028bc1185003:   	je	0x41
  0x0000028bc1185009:   	pushq	%rdi
  0x0000028bc118500a:   	pushq	%r10
  0x0000028bc118500c:   	movl	0x8(%r8), %edi
  0x0000028bc1185010:   	movabsq	$0x800000000, %r10
  0x0000028bc118501a:   	addq	%r10, %rdi
  0x0000028bc118501d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185027:   	cmpq	(%r10), %rdi
  0x0000028bc118502a:   	je	0x36
  0x0000028bc1185030:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185034:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118503e:   	cmpq	(%r10), %rdi
  0x0000028bc1185041:   	je	0x1f
  0x0000028bc1185047:   	popq	%r10
  0x0000028bc1185049:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118504a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185054:   	andq	$-0x10, %rsp
  0x0000028bc1185058:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185062:   	callq	*%r10
  0x0000028bc1185065:   	hlt
 ;; L_ok:
  0x0000028bc1185066:   	popq	%r10
  0x0000028bc1185068:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185069:   	movl	0x8(%rdx), %r10d
  0x0000028bc118506d:   	movabsq	$0x800000000, %r11
  0x0000028bc1185077:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118507a:   	movl	0xc(%r8), %eax
  0x0000028bc118507e:   	shrl	$0x18, %eax
  0x0000028bc1185081:   	andl	$0xf, %eax
  0x0000028bc1185084:   	cmpl	$0x9, %eax
  0x0000028bc1185087:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118508d:   	movabsq	$0x28bdc0ce6b0, %rcx;   {external_word}
  0x0000028bc1185097:   	andq	$-0x10, %rsp
  0x0000028bc118509b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11850a5:   	callq	*%r10
  0x0000028bc11850a8:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11850a9:   	movl	0x18(%r8), %eax
  0x0000028bc11850ad:   	pushq	%r10
  0x0000028bc11850af:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11850b9:   	cmpq	(%r10), %r12
  0x0000028bc11850bc:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11850c2:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11850cc:   	andq	$-0x10, %rsp
  0x0000028bc11850d0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11850da:   	callq	*%r10
  0x0000028bc11850dd:   	hlt
  0x0000028bc11850de:   	popq	%r10
  0x0000028bc11850e0:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc11850e4:   	testq	%rax, %rax
  0x0000028bc11850e7:   	je	0x40
  0x0000028bc11850ed:   	pushq	%rdi
  0x0000028bc11850ee:   	pushq	%r10
  0x0000028bc11850f0:   	movl	0x8(%rax), %edi
  0x0000028bc11850f3:   	movabsq	$0x800000000, %r10
  0x0000028bc11850fd:   	addq	%r10, %rdi
  0x0000028bc1185100:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118510a:   	cmpq	(%r10), %rdi
  0x0000028bc118510d:   	je	0x36
  0x0000028bc1185113:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185117:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1185121:   	cmpq	(%r10), %rdi
  0x0000028bc1185124:   	je	0x1f
  0x0000028bc118512a:   	popq	%r10
  0x0000028bc118512c:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118512d:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1185137:   	andq	$-0x10, %rsp
  0x0000028bc118513b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185145:   	callq	*%r10
  0x0000028bc1185148:   	hlt
 ;; L_ok:
  0x0000028bc1185149:   	popq	%r10
  0x0000028bc118514b:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118514c:   	movq	0x10(%rax), %rax
  0x0000028bc1185150:   	movq	0x10(%r8), %rbx
  0x0000028bc1185154:   	cmpl	$0x0, %ebx
  0x0000028bc1185157:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118515d:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1185167:   	andq	$-0x10, %rsp
  0x0000028bc118516b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185175:   	callq	*%r10
  0x0000028bc1185178:   	hlt
  0x0000028bc1185179:   	movl	0xa8(%r10), %r11d
  0x0000028bc1185180:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1185188:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118518c:   	movq	(%r11), %rbx
  0x0000028bc118518f:   	cmpq	%rbx, %rax
  0x0000028bc1185192:   	je	0x15
  0x0000028bc1185194:   	testq	%rbx, %rbx
  0x0000028bc1185197:   	je	0x25
  0x0000028bc118519d:   	addq	$0x10, %r11
  0x0000028bc11851a1:   	movq	(%r11), %rbx
  0x0000028bc11851a4:   	cmpq	%rbx, %rax
  0x0000028bc11851a7:   	jne	-0x15
  0x0000028bc11851a9:   	movl	0x8(%r11), %r11d
  0x0000028bc11851ad:   	movq	(%r10,%r11), %rbx
  0x0000028bc11851b1:   	testq	%rbx, %rbx
  0x0000028bc11851b4:   	je	0x3
  0x0000028bc11851ba:   	jmpq	*0x58(%rbx)
  0x0000028bc11851bd:   	jmp	-0x51dca2           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc11851c2:   	jmp	-0x51dfa7           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc11851c7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1645   22     n 0       java.lang.invoke.MethodHandle::linkToInterface(LL)L (native)
 total in heap  [0x0000028bc1184e10,0x0000028bc11851c8] = 952
 relocation     [0x0000028bc1184f70,0x0000028bc1184fe8] = 120
 main code      [0x0000028bc1185000,0x0000028bc11851c7] = 455
 stub code      [0x0000028bc11851c7,0x0000028bc11851c8] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8122698} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185000:   	testq	%r8, %r8
  0x0000028bc1185003:   	je	0x41
  0x0000028bc1185009:   	pushq	%rdi
  0x0000028bc118500a:   	pushq	%r10
  0x0000028bc118500c:   	movl	0x8(%r8), %edi
  0x0000028bc1185010:   	movabsq	$0x800000000, %r10
  0x0000028bc118501a:   	addq	%r10, %rdi
  0x0000028bc118501d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185027:   	cmpq	(%r10), %rdi
  0x0000028bc118502a:   	je	0x36
  0x0000028bc1185030:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185034:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118503e:   	cmpq	(%r10), %rdi
  0x0000028bc1185041:   	je	0x1f
  0x0000028bc1185047:   	popq	%r10
  0x0000028bc1185049:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118504a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185054:   	andq	$-0x10, %rsp
  0x0000028bc1185058:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185062:   	callq	*%r10
  0x0000028bc1185065:   	hlt
 ;; L_ok:
  0x0000028bc1185066:   	popq	%r10
  0x0000028bc1185068:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185069:   	movl	0x8(%rdx), %r10d
  0x0000028bc118506d:   	movabsq	$0x800000000, %r11
  0x0000028bc1185077:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118507a:   	movl	0xc(%r8), %eax
  0x0000028bc118507e:   	shrl	$0x18, %eax
  0x0000028bc1185081:   	andl	$0xf, %eax
  0x0000028bc1185084:   	cmpl	$0x9, %eax
  0x0000028bc1185087:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118508d:   	movabsq	$0x28bdc0ce6b0, %rcx;   {external_word}
  0x0000028bc1185097:   	andq	$-0x10, %rsp
  0x0000028bc118509b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11850a5:   	callq	*%r10
  0x0000028bc11850a8:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11850a9:   	movl	0x18(%r8), %eax
  0x0000028bc11850ad:   	pushq	%r10
  0x0000028bc11850af:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11850b9:   	cmpq	(%r10), %r12
  0x0000028bc11850bc:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11850c2:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11850cc:   	andq	$-0x10, %rsp
  0x0000028bc11850d0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11850da:   	callq	*%r10
  0x0000028bc11850dd:   	hlt
  0x0000028bc11850de:   	popq	%r10
  0x0000028bc11850e0:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc11850e4:   	testq	%rax, %rax
  0x0000028bc11850e7:   	je	0x40
  0x0000028bc11850ed:   	pushq	%rdi
  0x0000028bc11850ee:   	pushq	%r10
  0x0000028bc11850f0:   	movl	0x8(%rax), %edi
  0x0000028bc11850f3:   	movabsq	$0x800000000, %r10
  0x0000028bc11850fd:   	addq	%r10, %rdi
  0x0000028bc1185100:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118510a:   	cmpq	(%r10), %rdi
  0x0000028bc118510d:   	je	0x36
  0x0000028bc1185113:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185117:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1185121:   	cmpq	(%r10), %rdi
  0x0000028bc1185124:   	je	0x1f
  0x0000028bc118512a:   	popq	%r10
  0x0000028bc118512c:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118512d:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1185137:   	andq	$-0x10, %rsp
  0x0000028bc118513b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185145:   	callq	*%r10
  0x0000028bc1185148:   	hlt
 ;; L_ok:
  0x0000028bc1185149:   	popq	%r10
  0x0000028bc118514b:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118514c:   	movq	0x10(%rax), %rax
  0x0000028bc1185150:   	movq	0x10(%r8), %rbx
  0x0000028bc1185154:   	cmpl	$0x0, %ebx
  0x0000028bc1185157:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118515d:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1185167:   	andq	$-0x10, %rsp
  0x0000028bc118516b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185175:   	callq	*%r10
  0x0000028bc1185178:   	hlt
  0x0000028bc1185179:   	movl	0xa8(%r10), %r11d
  0x0000028bc1185180:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1185188:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118518c:   	movq	(%r11), %rbx
  0x0000028bc118518f:   	cmpq	%rbx, %rax
  0x0000028bc1185192:   	je	0x15
  0x0000028bc1185194:   	testq	%rbx, %rbx
  0x0000028bc1185197:   	je	0x25
  0x0000028bc118519d:   	addq	$0x10, %r11
  0x0000028bc11851a1:   	movq	(%r11), %rbx
  0x0000028bc11851a4:   	cmpq	%rbx, %rax
  0x0000028bc11851a7:   	jne	-0x15
  0x0000028bc11851a9:   	movl	0x8(%r11), %r11d
  0x0000028bc11851ad:   	movq	(%r10,%r11), %rbx
  0x0000028bc11851b1:   	testq	%rbx, %rbx
  0x0000028bc11851b4:   	je	0x3
  0x0000028bc11851ba:   	jmpq	*0x58(%rbx)
  0x0000028bc11851bd:   	jmp	-0x51dca2           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc11851c2:   	jmp	-0x51dfa7           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc11851c7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1666   23     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)I (native)
 total in heap  [0x0000028bc1185210,0x0000028bc11854a8] = 664
 relocation     [0x0000028bc1185370,0x0000028bc11853b8] = 72
 main code      [0x0000028bc11853c0,0x0000028bc11854a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8128cb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc11853c0:   	testq	%r8, %r8
  0x0000028bc11853c3:   	je	0x41
  0x0000028bc11853c9:   	pushq	%rdi
  0x0000028bc11853ca:   	pushq	%r10
  0x0000028bc11853cc:   	movl	0x8(%r8), %edi
  0x0000028bc11853d0:   	movabsq	$0x800000000, %r10
  0x0000028bc11853da:   	addq	%r10, %rdi
  0x0000028bc11853dd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11853e7:   	cmpq	(%r10), %rdi
  0x0000028bc11853ea:   	je	0x36
  0x0000028bc11853f0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11853f4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11853fe:   	cmpq	(%r10), %rdi
  0x0000028bc1185401:   	je	0x1f
  0x0000028bc1185407:   	popq	%r10
  0x0000028bc1185409:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118540a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185414:   	andq	$-0x10, %rsp
  0x0000028bc1185418:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185422:   	callq	*%r10
  0x0000028bc1185425:   	hlt
 ;; L_ok:
  0x0000028bc1185426:   	popq	%r10
  0x0000028bc1185428:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1185429:   	movl	0xc(%r8), %eax
  0x0000028bc118542d:   	shrl	$0x18, %eax
  0x0000028bc1185430:   	andl	$0xf, %eax
  0x0000028bc1185433:   	cmpl	$0x6, %eax
  0x0000028bc1185436:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118543c:   	movabsq	$0x28bdc0cde30, %rcx;   {external_word}
  0x0000028bc1185446:   	andq	$-0x10, %rsp
  0x0000028bc118544a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185454:   	callq	*%r10
  0x0000028bc1185457:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1185458:   	movl	0x24(%r8), %ebx
  0x0000028bc118545c:   	pushq	%r10
  0x0000028bc118545e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185468:   	cmpq	(%r10), %r12
  0x0000028bc118546b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185471:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118547b:   	andq	$-0x10, %rsp
  0x0000028bc118547f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185489:   	callq	*%r10
  0x0000028bc118548c:   	hlt
  0x0000028bc118548d:   	popq	%r10
  0x0000028bc118548f:   	shlq	$0x3, %rbx
  0x0000028bc1185493:   	movq	0x10(%rbx), %rbx
  0x0000028bc1185497:   	testq	%rbx, %rbx
  0x0000028bc118549a:   	je	0x3
  0x0000028bc11854a0:   	jmpq	*0x58(%rbx)
  0x0000028bc11854a3:   	jmp	-0x51df88           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1668   23     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)I (native)
 total in heap  [0x0000028bc1185210,0x0000028bc11854a8] = 664
 relocation     [0x0000028bc1185370,0x0000028bc11853b8] = 72
 main code      [0x0000028bc11853c0,0x0000028bc11854a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8128cb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc11853c0:   	testq	%r8, %r8
  0x0000028bc11853c3:   	je	0x41
  0x0000028bc11853c9:   	pushq	%rdi
  0x0000028bc11853ca:   	pushq	%r10
  0x0000028bc11853cc:   	movl	0x8(%r8), %edi
  0x0000028bc11853d0:   	movabsq	$0x800000000, %r10
  0x0000028bc11853da:   	addq	%r10, %rdi
  0x0000028bc11853dd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11853e7:   	cmpq	(%r10), %rdi
  0x0000028bc11853ea:   	je	0x36
  0x0000028bc11853f0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11853f4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11853fe:   	cmpq	(%r10), %rdi
  0x0000028bc1185401:   	je	0x1f
  0x0000028bc1185407:   	popq	%r10
  0x0000028bc1185409:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118540a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185414:   	andq	$-0x10, %rsp
  0x0000028bc1185418:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185422:   	callq	*%r10
  0x0000028bc1185425:   	hlt
 ;; L_ok:
  0x0000028bc1185426:   	popq	%r10
  0x0000028bc1185428:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1185429:   	movl	0xc(%r8), %eax
  0x0000028bc118542d:   	shrl	$0x18, %eax
  0x0000028bc1185430:   	andl	$0xf, %eax
  0x0000028bc1185433:   	cmpl	$0x6, %eax
  0x0000028bc1185436:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118543c:   	movabsq	$0x28bdc0cde30, %rcx;   {external_word}
  0x0000028bc1185446:   	andq	$-0x10, %rsp
  0x0000028bc118544a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185454:   	callq	*%r10
  0x0000028bc1185457:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1185458:   	movl	0x24(%r8), %ebx
  0x0000028bc118545c:   	pushq	%r10
  0x0000028bc118545e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185468:   	cmpq	(%r10), %r12
  0x0000028bc118546b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185471:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118547b:   	andq	$-0x10, %rsp
  0x0000028bc118547f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185489:   	callq	*%r10
  0x0000028bc118548c:   	hlt
  0x0000028bc118548d:   	popq	%r10
  0x0000028bc118548f:   	shlq	$0x3, %rbx
  0x0000028bc1185493:   	movq	0x10(%rbx), %rbx
  0x0000028bc1185497:   	testq	%rbx, %rbx
  0x0000028bc118549a:   	je	0x3
  0x0000028bc11854a0:   	jmpq	*0x58(%rbx)
  0x0000028bc11854a3:   	jmp	-0x51df88           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1676   24     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)L (native)
 total in heap  [0x0000028bc1185510,0x0000028bc1185900] = 1008
 relocation     [0x0000028bc1185670,0x0000028bc11856f8] = 136
 main code      [0x0000028bc1185700,0x0000028bc11858fe] = 510
 stub code      [0x0000028bc11858fe,0x0000028bc1185900] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd812a2f8} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185700:   	testq	%r8, %r8
  0x0000028bc1185703:   	je	0x41
  0x0000028bc1185709:   	pushq	%rdi
  0x0000028bc118570a:   	pushq	%r10
  0x0000028bc118570c:   	movl	0x8(%r8), %edi
  0x0000028bc1185710:   	movabsq	$0x800000000, %r10
  0x0000028bc118571a:   	addq	%r10, %rdi
  0x0000028bc118571d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185727:   	cmpq	(%r10), %rdi
  0x0000028bc118572a:   	je	0x36
  0x0000028bc1185730:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185734:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118573e:   	cmpq	(%r10), %rdi
  0x0000028bc1185741:   	je	0x1f
  0x0000028bc1185747:   	popq	%r10
  0x0000028bc1185749:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118574a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185754:   	andq	$-0x10, %rsp
  0x0000028bc1185758:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185762:   	callq	*%r10
  0x0000028bc1185765:   	hlt
 ;; L_ok:
  0x0000028bc1185766:   	popq	%r10
  0x0000028bc1185768:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185769:   	movl	0x8(%rdx), %r10d
  0x0000028bc118576d:   	movabsq	$0x800000000, %r11
  0x0000028bc1185777:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc118577a:   	movl	0x18(%r8), %r11d
  0x0000028bc118577e:   	pushq	%r10
  0x0000028bc1185780:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118578a:   	cmpq	(%r10), %r12
  0x0000028bc118578d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185793:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118579d:   	andq	$-0x10, %rsp
  0x0000028bc11857a1:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11857ab:   	callq	*%r10
  0x0000028bc11857ae:   	hlt
  0x0000028bc11857af:   	popq	%r10
  0x0000028bc11857b1:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11857b5:   	testq	%r11, %r11
  0x0000028bc11857b8:   	je	0x41
  0x0000028bc11857be:   	pushq	%rdi
  0x0000028bc11857bf:   	pushq	%r10
  0x0000028bc11857c1:   	movl	0x8(%r11), %edi
  0x0000028bc11857c5:   	movabsq	$0x800000000, %r10
  0x0000028bc11857cf:   	addq	%r10, %rdi
  0x0000028bc11857d2:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11857dc:   	cmpq	(%r10), %rdi
  0x0000028bc11857df:   	je	0x36
  0x0000028bc11857e5:   	movq	0x40(%rdi), %rdi
  0x0000028bc11857e9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11857f3:   	cmpq	(%r10), %rdi
  0x0000028bc11857f6:   	je	0x1f
  0x0000028bc11857fc:   	popq	%r10
  0x0000028bc11857fe:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc11857ff:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1185809:   	andq	$-0x10, %rsp
  0x0000028bc118580d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185817:   	callq	*%r10
  0x0000028bc118581a:   	hlt
 ;; L_ok:
  0x0000028bc118581b:   	popq	%r10
  0x0000028bc118581d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118581e:   	movq	0x10(%r11), %r11
  0x0000028bc1185822:   	cmpq	%r11, %r10
  0x0000028bc1185825:   	je	0x61
  0x0000028bc118582b:   	movl	0x1c(%r11), %eax
  0x0000028bc118582f:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1185833:   	je	0x53
  0x0000028bc1185839:   	cmpl	$0x28, %eax
  0x0000028bc118583c:   	jne	0x2e
  0x0000028bc1185842:   	movq	%r11, %rax
  0x0000028bc1185845:   	pushq	%rcx
  0x0000028bc1185846:   	pushq	%rdi
  0x0000028bc1185847:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1185851:   	incl	(%rcx)
  0x0000028bc1185853:   	movq	0x30(%r10), %rdi
  0x0000028bc1185857:   	movl	(%rdi), %ecx
  0x0000028bc1185859:   	addq	$0x8, %rdi
  0x0000028bc118585d:   	testq	%rax, %rax
  0x0000028bc1185860:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1185863:   	popq	%rdi
  0x0000028bc1185864:   	popq	%rcx
  0x0000028bc1185865:   	jne	0x9
  0x0000028bc1185867:   	movq	%r11, 0x28(%r10)
  0x0000028bc118586b:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1185870:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118587a:   	andq	$-0x10, %rsp
  0x0000028bc118587e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185888:   	callq	*%r10
  0x0000028bc118588b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118588c:   	movl	0xc(%r8), %eax
  0x0000028bc1185890:   	shrl	$0x18, %eax
  0x0000028bc1185893:   	andl	$0xf, %eax
  0x0000028bc1185896:   	cmpl	$0x5, %eax
  0x0000028bc1185899:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc118589f:   	movabsq	$0x28bdc0ce0b0, %rcx;   {external_word}
  0x0000028bc11858a9:   	andq	$-0x10, %rsp
  0x0000028bc11858ad:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11858b7:   	callq	*%r10
  0x0000028bc11858ba:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11858bb:   	movq	0x10(%r8), %r11
  0x0000028bc11858bf:   	cmpl	$0x0, %r11d
  0x0000028bc11858c3:   	jge	0x1c
 ;; no virtual index
  0x0000028bc11858c9:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc11858d3:   	andq	$-0x10, %rsp
  0x0000028bc11858d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11858e1:   	callq	*%r10
  0x0000028bc11858e4:   	hlt
 ;; L_index_ok:
  0x0000028bc11858e5:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc11858ed:   	testq	%rbx, %rbx
  0x0000028bc11858f0:   	je	0x3
  0x0000028bc11858f6:   	jmpq	*0x58(%rbx)
  0x0000028bc11858f9:   	jmp	-0x51e3de           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11858fe:   	hlt
  0x0000028bc11858ff:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1680   24     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)L (native)
 total in heap  [0x0000028bc1185510,0x0000028bc1185900] = 1008
 relocation     [0x0000028bc1185670,0x0000028bc11856f8] = 136
 main code      [0x0000028bc1185700,0x0000028bc11858fe] = 510
 stub code      [0x0000028bc11858fe,0x0000028bc1185900] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd812a2f8} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185700:   	testq	%r8, %r8
  0x0000028bc1185703:   	je	0x41
  0x0000028bc1185709:   	pushq	%rdi
  0x0000028bc118570a:   	pushq	%r10
  0x0000028bc118570c:   	movl	0x8(%r8), %edi
  0x0000028bc1185710:   	movabsq	$0x800000000, %r10
  0x0000028bc118571a:   	addq	%r10, %rdi
  0x0000028bc118571d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185727:   	cmpq	(%r10), %rdi
  0x0000028bc118572a:   	je	0x36
  0x0000028bc1185730:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185734:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118573e:   	cmpq	(%r10), %rdi
  0x0000028bc1185741:   	je	0x1f
  0x0000028bc1185747:   	popq	%r10
  0x0000028bc1185749:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118574a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185754:   	andq	$-0x10, %rsp
  0x0000028bc1185758:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185762:   	callq	*%r10
  0x0000028bc1185765:   	hlt
 ;; L_ok:
  0x0000028bc1185766:   	popq	%r10
  0x0000028bc1185768:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185769:   	movl	0x8(%rdx), %r10d
  0x0000028bc118576d:   	movabsq	$0x800000000, %r11
  0x0000028bc1185777:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc118577a:   	movl	0x18(%r8), %r11d
  0x0000028bc118577e:   	pushq	%r10
  0x0000028bc1185780:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118578a:   	cmpq	(%r10), %r12
  0x0000028bc118578d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185793:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118579d:   	andq	$-0x10, %rsp
  0x0000028bc11857a1:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11857ab:   	callq	*%r10
  0x0000028bc11857ae:   	hlt
  0x0000028bc11857af:   	popq	%r10
  0x0000028bc11857b1:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11857b5:   	testq	%r11, %r11
  0x0000028bc11857b8:   	je	0x41
  0x0000028bc11857be:   	pushq	%rdi
  0x0000028bc11857bf:   	pushq	%r10
  0x0000028bc11857c1:   	movl	0x8(%r11), %edi
  0x0000028bc11857c5:   	movabsq	$0x800000000, %r10
  0x0000028bc11857cf:   	addq	%r10, %rdi
  0x0000028bc11857d2:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11857dc:   	cmpq	(%r10), %rdi
  0x0000028bc11857df:   	je	0x36
  0x0000028bc11857e5:   	movq	0x40(%rdi), %rdi
  0x0000028bc11857e9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11857f3:   	cmpq	(%r10), %rdi
  0x0000028bc11857f6:   	je	0x1f
  0x0000028bc11857fc:   	popq	%r10
  0x0000028bc11857fe:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc11857ff:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1185809:   	andq	$-0x10, %rsp
  0x0000028bc118580d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185817:   	callq	*%r10
  0x0000028bc118581a:   	hlt
 ;; L_ok:
  0x0000028bc118581b:   	popq	%r10
  0x0000028bc118581d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118581e:   	movq	0x10(%r11), %r11
  0x0000028bc1185822:   	cmpq	%r11, %r10
  0x0000028bc1185825:   	je	0x61
  0x0000028bc118582b:   	movl	0x1c(%r11), %eax
  0x0000028bc118582f:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1185833:   	je	0x53
  0x0000028bc1185839:   	cmpl	$0x28, %eax
  0x0000028bc118583c:   	jne	0x2e
  0x0000028bc1185842:   	movq	%r11, %rax
  0x0000028bc1185845:   	pushq	%rcx
  0x0000028bc1185846:   	pushq	%rdi
  0x0000028bc1185847:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1185851:   	incl	(%rcx)
  0x0000028bc1185853:   	movq	0x30(%r10), %rdi
  0x0000028bc1185857:   	movl	(%rdi), %ecx
  0x0000028bc1185859:   	addq	$0x8, %rdi
  0x0000028bc118585d:   	testq	%rax, %rax
  0x0000028bc1185860:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1185863:   	popq	%rdi
  0x0000028bc1185864:   	popq	%rcx
  0x0000028bc1185865:   	jne	0x9
  0x0000028bc1185867:   	movq	%r11, 0x28(%r10)
  0x0000028bc118586b:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1185870:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118587a:   	andq	$-0x10, %rsp
  0x0000028bc118587e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185888:   	callq	*%r10
  0x0000028bc118588b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118588c:   	movl	0xc(%r8), %eax
  0x0000028bc1185890:   	shrl	$0x18, %eax
  0x0000028bc1185893:   	andl	$0xf, %eax
  0x0000028bc1185896:   	cmpl	$0x5, %eax
  0x0000028bc1185899:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc118589f:   	movabsq	$0x28bdc0ce0b0, %rcx;   {external_word}
  0x0000028bc11858a9:   	andq	$-0x10, %rsp
  0x0000028bc11858ad:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11858b7:   	callq	*%r10
  0x0000028bc11858ba:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11858bb:   	movq	0x10(%r8), %r11
  0x0000028bc11858bf:   	cmpl	$0x0, %r11d
  0x0000028bc11858c3:   	jge	0x1c
 ;; no virtual index
  0x0000028bc11858c9:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc11858d3:   	andq	$-0x10, %rsp
  0x0000028bc11858d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11858e1:   	callq	*%r10
  0x0000028bc11858e4:   	hlt
 ;; L_index_ok:
  0x0000028bc11858e5:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc11858ed:   	testq	%rbx, %rbx
  0x0000028bc11858f0:   	je	0x3
  0x0000028bc11858f6:   	jmpq	*0x58(%rbx)
  0x0000028bc11858f9:   	jmp	-0x51e3de           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11858fe:   	hlt
  0x0000028bc11858ff:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1693   25     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)I (native)
 total in heap  [0x0000028bc1185910,0x0000028bc1185d10] = 1024
 relocation     [0x0000028bc1185a70,0x0000028bc1185b00] = 144
 main code      [0x0000028bc1185b00,0x0000028bc1185d0e] = 526
 stub code      [0x0000028bc1185d0e,0x0000028bc1185d10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd812f200} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185b00:   	testq	%r8, %r8
  0x0000028bc1185b03:   	je	0x41
  0x0000028bc1185b09:   	pushq	%rdi
  0x0000028bc1185b0a:   	pushq	%r10
  0x0000028bc1185b0c:   	movl	0x8(%r8), %edi
  0x0000028bc1185b10:   	movabsq	$0x800000000, %r10
  0x0000028bc1185b1a:   	addq	%r10, %rdi
  0x0000028bc1185b1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185b27:   	cmpq	(%r10), %rdi
  0x0000028bc1185b2a:   	je	0x36
  0x0000028bc1185b30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185b34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185b3e:   	cmpq	(%r10), %rdi
  0x0000028bc1185b41:   	je	0x1f
  0x0000028bc1185b47:   	popq	%r10
  0x0000028bc1185b49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1185b4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185b54:   	andq	$-0x10, %rsp
  0x0000028bc1185b58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185b62:   	callq	*%r10
  0x0000028bc1185b65:   	hlt
 ;; L_ok:
  0x0000028bc1185b66:   	popq	%r10
  0x0000028bc1185b68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185b69:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1185b6c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1185b70:   	movabsq	$0x800000000, %r11
  0x0000028bc1185b7a:   	addq	%r11, %r10
  0x0000028bc1185b7d:   	movl	0x18(%r8), %r11d
  0x0000028bc1185b81:   	pushq	%r10
  0x0000028bc1185b83:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185b8d:   	cmpq	(%r10), %r12
  0x0000028bc1185b90:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185b96:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1185ba0:   	andq	$-0x10, %rsp
  0x0000028bc1185ba4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185bae:   	callq	*%r10
  0x0000028bc1185bb1:   	hlt
  0x0000028bc1185bb2:   	popq	%r10
  0x0000028bc1185bb4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1185bb8:   	testq	%r11, %r11
  0x0000028bc1185bbb:   	je	0x41
  0x0000028bc1185bc1:   	pushq	%rdi
  0x0000028bc1185bc2:   	pushq	%r10
  0x0000028bc1185bc4:   	movl	0x8(%r11), %edi
  0x0000028bc1185bc8:   	movabsq	$0x800000000, %r10
  0x0000028bc1185bd2:   	addq	%r10, %rdi
  0x0000028bc1185bd5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1185bdf:   	cmpq	(%r10), %rdi
  0x0000028bc1185be2:   	je	0x36
  0x0000028bc1185be8:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185bec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1185bf6:   	cmpq	(%r10), %rdi
  0x0000028bc1185bf9:   	je	0x1f
  0x0000028bc1185bff:   	popq	%r10
  0x0000028bc1185c01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1185c02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1185c0c:   	andq	$-0x10, %rsp
  0x0000028bc1185c10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185c1a:   	callq	*%r10
  0x0000028bc1185c1d:   	hlt
 ;; L_ok:
  0x0000028bc1185c1e:   	popq	%r10
  0x0000028bc1185c20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185c21:   	movq	0x10(%r11), %r11
  0x0000028bc1185c25:   	cmpq	%r11, %r10
  0x0000028bc1185c28:   	je	0x61
  0x0000028bc1185c2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1185c32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1185c36:   	je	0x53
  0x0000028bc1185c3c:   	cmpl	$0x28, %eax
  0x0000028bc1185c3f:   	jne	0x2e
  0x0000028bc1185c45:   	movq	%r11, %rax
  0x0000028bc1185c48:   	pushq	%rcx
  0x0000028bc1185c49:   	pushq	%rdi
  0x0000028bc1185c4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1185c54:   	incl	(%rcx)
  0x0000028bc1185c56:   	movq	0x30(%r10), %rdi
  0x0000028bc1185c5a:   	movl	(%rdi), %ecx
  0x0000028bc1185c5c:   	addq	$0x8, %rdi
  0x0000028bc1185c60:   	testq	%rax, %rax
  0x0000028bc1185c63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1185c66:   	popq	%rdi
  0x0000028bc1185c67:   	popq	%rcx
  0x0000028bc1185c68:   	jne	0x9
  0x0000028bc1185c6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1185c6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1185c73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1185c7d:   	andq	$-0x10, %rsp
  0x0000028bc1185c81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185c8b:   	callq	*%r10
  0x0000028bc1185c8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1185c8f:   	movl	0xc(%r8), %eax
  0x0000028bc1185c93:   	shrl	$0x18, %eax
  0x0000028bc1185c96:   	andl	$0xf, %eax
  0x0000028bc1185c99:   	cmpl	$0x7, %eax
  0x0000028bc1185c9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1185ca2:   	movabsq	$0x28bdc0cd6b0, %rcx;   {external_word}
  0x0000028bc1185cac:   	andq	$-0x10, %rsp
  0x0000028bc1185cb0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185cba:   	callq	*%r10
  0x0000028bc1185cbd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1185cbe:   	movl	0x24(%r8), %ebx
  0x0000028bc1185cc2:   	pushq	%r10
  0x0000028bc1185cc4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185cce:   	cmpq	(%r10), %r12
  0x0000028bc1185cd1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185cd7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1185ce1:   	andq	$-0x10, %rsp
  0x0000028bc1185ce5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185cef:   	callq	*%r10
  0x0000028bc1185cf2:   	hlt
  0x0000028bc1185cf3:   	popq	%r10
  0x0000028bc1185cf5:   	shlq	$0x3, %rbx
  0x0000028bc1185cf9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1185cfd:   	testq	%rbx, %rbx
  0x0000028bc1185d00:   	je	0x3
  0x0000028bc1185d06:   	jmpq	*0x58(%rbx)
  0x0000028bc1185d09:   	jmp	-0x51e7ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1185d0e:   	hlt
  0x0000028bc1185d0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1697   25     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)I (native)
 total in heap  [0x0000028bc1185910,0x0000028bc1185d10] = 1024
 relocation     [0x0000028bc1185a70,0x0000028bc1185b00] = 144
 main code      [0x0000028bc1185b00,0x0000028bc1185d0e] = 526
 stub code      [0x0000028bc1185d0e,0x0000028bc1185d10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd812f200} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185b00:   	testq	%r8, %r8
  0x0000028bc1185b03:   	je	0x41
  0x0000028bc1185b09:   	pushq	%rdi
  0x0000028bc1185b0a:   	pushq	%r10
  0x0000028bc1185b0c:   	movl	0x8(%r8), %edi
  0x0000028bc1185b10:   	movabsq	$0x800000000, %r10
  0x0000028bc1185b1a:   	addq	%r10, %rdi
  0x0000028bc1185b1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185b27:   	cmpq	(%r10), %rdi
  0x0000028bc1185b2a:   	je	0x36
  0x0000028bc1185b30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185b34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185b3e:   	cmpq	(%r10), %rdi
  0x0000028bc1185b41:   	je	0x1f
  0x0000028bc1185b47:   	popq	%r10
  0x0000028bc1185b49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1185b4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185b54:   	andq	$-0x10, %rsp
  0x0000028bc1185b58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185b62:   	callq	*%r10
  0x0000028bc1185b65:   	hlt
 ;; L_ok:
  0x0000028bc1185b66:   	popq	%r10
  0x0000028bc1185b68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185b69:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1185b6c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1185b70:   	movabsq	$0x800000000, %r11
  0x0000028bc1185b7a:   	addq	%r11, %r10
  0x0000028bc1185b7d:   	movl	0x18(%r8), %r11d
  0x0000028bc1185b81:   	pushq	%r10
  0x0000028bc1185b83:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185b8d:   	cmpq	(%r10), %r12
  0x0000028bc1185b90:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185b96:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1185ba0:   	andq	$-0x10, %rsp
  0x0000028bc1185ba4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185bae:   	callq	*%r10
  0x0000028bc1185bb1:   	hlt
  0x0000028bc1185bb2:   	popq	%r10
  0x0000028bc1185bb4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1185bb8:   	testq	%r11, %r11
  0x0000028bc1185bbb:   	je	0x41
  0x0000028bc1185bc1:   	pushq	%rdi
  0x0000028bc1185bc2:   	pushq	%r10
  0x0000028bc1185bc4:   	movl	0x8(%r11), %edi
  0x0000028bc1185bc8:   	movabsq	$0x800000000, %r10
  0x0000028bc1185bd2:   	addq	%r10, %rdi
  0x0000028bc1185bd5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1185bdf:   	cmpq	(%r10), %rdi
  0x0000028bc1185be2:   	je	0x36
  0x0000028bc1185be8:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185bec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1185bf6:   	cmpq	(%r10), %rdi
  0x0000028bc1185bf9:   	je	0x1f
  0x0000028bc1185bff:   	popq	%r10
  0x0000028bc1185c01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1185c02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1185c0c:   	andq	$-0x10, %rsp
  0x0000028bc1185c10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185c1a:   	callq	*%r10
  0x0000028bc1185c1d:   	hlt
 ;; L_ok:
  0x0000028bc1185c1e:   	popq	%r10
  0x0000028bc1185c20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1185c21:   	movq	0x10(%r11), %r11
  0x0000028bc1185c25:   	cmpq	%r11, %r10
  0x0000028bc1185c28:   	je	0x61
  0x0000028bc1185c2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1185c32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1185c36:   	je	0x53
  0x0000028bc1185c3c:   	cmpl	$0x28, %eax
  0x0000028bc1185c3f:   	jne	0x2e
  0x0000028bc1185c45:   	movq	%r11, %rax
  0x0000028bc1185c48:   	pushq	%rcx
  0x0000028bc1185c49:   	pushq	%rdi
  0x0000028bc1185c4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1185c54:   	incl	(%rcx)
  0x0000028bc1185c56:   	movq	0x30(%r10), %rdi
  0x0000028bc1185c5a:   	movl	(%rdi), %ecx
  0x0000028bc1185c5c:   	addq	$0x8, %rdi
  0x0000028bc1185c60:   	testq	%rax, %rax
  0x0000028bc1185c63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1185c66:   	popq	%rdi
  0x0000028bc1185c67:   	popq	%rcx
  0x0000028bc1185c68:   	jne	0x9
  0x0000028bc1185c6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1185c6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1185c73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1185c7d:   	andq	$-0x10, %rsp
  0x0000028bc1185c81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185c8b:   	callq	*%r10
  0x0000028bc1185c8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1185c8f:   	movl	0xc(%r8), %eax
  0x0000028bc1185c93:   	shrl	$0x18, %eax
  0x0000028bc1185c96:   	andl	$0xf, %eax
  0x0000028bc1185c99:   	cmpl	$0x7, %eax
  0x0000028bc1185c9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1185ca2:   	movabsq	$0x28bdc0cd6b0, %rcx;   {external_word}
  0x0000028bc1185cac:   	andq	$-0x10, %rsp
  0x0000028bc1185cb0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185cba:   	callq	*%r10
  0x0000028bc1185cbd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1185cbe:   	movl	0x24(%r8), %ebx
  0x0000028bc1185cc2:   	pushq	%r10
  0x0000028bc1185cc4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185cce:   	cmpq	(%r10), %r12
  0x0000028bc1185cd1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185cd7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1185ce1:   	andq	$-0x10, %rsp
  0x0000028bc1185ce5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185cef:   	callq	*%r10
  0x0000028bc1185cf2:   	hlt
  0x0000028bc1185cf3:   	popq	%r10
  0x0000028bc1185cf5:   	shlq	$0x3, %rbx
  0x0000028bc1185cf9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1185cfd:   	testq	%rbx, %rbx
  0x0000028bc1185d00:   	je	0x3
  0x0000028bc1185d06:   	jmpq	*0x58(%rbx)
  0x0000028bc1185d09:   	jmp	-0x51e7ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1185d0e:   	hlt
  0x0000028bc1185d0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1846   26     n 0       java.lang.invoke.MethodHandle::linkToStatic(IIL)I (native)
 total in heap  [0x0000028bc1185d90,0x0000028bc1186028] = 664
 relocation     [0x0000028bc1185ef0,0x0000028bc1185f38] = 72
 main code      [0x0000028bc1185f40,0x0000028bc1186028] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd82721a0} 'linkToStatic' '(IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185f40:   	testq	%r9, %r9
  0x0000028bc1185f43:   	je	0x41
  0x0000028bc1185f49:   	pushq	%rdi
  0x0000028bc1185f4a:   	pushq	%r10
  0x0000028bc1185f4c:   	movl	0x8(%r9), %edi
  0x0000028bc1185f50:   	movabsq	$0x800000000, %r10
  0x0000028bc1185f5a:   	addq	%r10, %rdi
  0x0000028bc1185f5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185f67:   	cmpq	(%r10), %rdi
  0x0000028bc1185f6a:   	je	0x36
  0x0000028bc1185f70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185f74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185f7e:   	cmpq	(%r10), %rdi
  0x0000028bc1185f81:   	je	0x1f
  0x0000028bc1185f87:   	popq	%r10
  0x0000028bc1185f89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1185f8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185f94:   	andq	$-0x10, %rsp
  0x0000028bc1185f98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185fa2:   	callq	*%r10
  0x0000028bc1185fa5:   	hlt
 ;; L_ok:
  0x0000028bc1185fa6:   	popq	%r10
  0x0000028bc1185fa8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1185fa9:   	movl	0xc(%r9), %eax
  0x0000028bc1185fad:   	shrl	$0x18, %eax
  0x0000028bc1185fb0:   	andl	$0xf, %eax
  0x0000028bc1185fb3:   	cmpl	$0x6, %eax
  0x0000028bc1185fb6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1185fbc:   	movabsq	$0x28bdc114b60, %rcx;   {external_word}
  0x0000028bc1185fc6:   	andq	$-0x10, %rsp
  0x0000028bc1185fca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185fd4:   	callq	*%r10
  0x0000028bc1185fd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1185fd8:   	movl	0x24(%r9), %ebx
  0x0000028bc1185fdc:   	pushq	%r10
  0x0000028bc1185fde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185fe8:   	cmpq	(%r10), %r12
  0x0000028bc1185feb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185ff1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1185ffb:   	andq	$-0x10, %rsp
  0x0000028bc1185fff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186009:   	callq	*%r10
  0x0000028bc118600c:   	hlt
  0x0000028bc118600d:   	popq	%r10
  0x0000028bc118600f:   	shlq	$0x3, %rbx
  0x0000028bc1186013:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186017:   	testq	%rbx, %rbx
  0x0000028bc118601a:   	je	0x3
  0x0000028bc1186020:   	jmpq	*0x58(%rbx)
  0x0000028bc1186023:   	jmp	-0x51eb08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1849   26     n 0       java.lang.invoke.MethodHandle::linkToStatic(IIL)I (native)
 total in heap  [0x0000028bc1185d90,0x0000028bc1186028] = 664
 relocation     [0x0000028bc1185ef0,0x0000028bc1185f38] = 72
 main code      [0x0000028bc1185f40,0x0000028bc1186028] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd82721a0} 'linkToStatic' '(IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1185f40:   	testq	%r9, %r9
  0x0000028bc1185f43:   	je	0x41
  0x0000028bc1185f49:   	pushq	%rdi
  0x0000028bc1185f4a:   	pushq	%r10
  0x0000028bc1185f4c:   	movl	0x8(%r9), %edi
  0x0000028bc1185f50:   	movabsq	$0x800000000, %r10
  0x0000028bc1185f5a:   	addq	%r10, %rdi
  0x0000028bc1185f5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185f67:   	cmpq	(%r10), %rdi
  0x0000028bc1185f6a:   	je	0x36
  0x0000028bc1185f70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1185f74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1185f7e:   	cmpq	(%r10), %rdi
  0x0000028bc1185f81:   	je	0x1f
  0x0000028bc1185f87:   	popq	%r10
  0x0000028bc1185f89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1185f8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1185f94:   	andq	$-0x10, %rsp
  0x0000028bc1185f98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185fa2:   	callq	*%r10
  0x0000028bc1185fa5:   	hlt
 ;; L_ok:
  0x0000028bc1185fa6:   	popq	%r10
  0x0000028bc1185fa8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1185fa9:   	movl	0xc(%r9), %eax
  0x0000028bc1185fad:   	shrl	$0x18, %eax
  0x0000028bc1185fb0:   	andl	$0xf, %eax
  0x0000028bc1185fb3:   	cmpl	$0x6, %eax
  0x0000028bc1185fb6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1185fbc:   	movabsq	$0x28bdc114b60, %rcx;   {external_word}
  0x0000028bc1185fc6:   	andq	$-0x10, %rsp
  0x0000028bc1185fca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1185fd4:   	callq	*%r10
  0x0000028bc1185fd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1185fd8:   	movl	0x24(%r9), %ebx
  0x0000028bc1185fdc:   	pushq	%r10
  0x0000028bc1185fde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1185fe8:   	cmpq	(%r10), %r12
  0x0000028bc1185feb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1185ff1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1185ffb:   	andq	$-0x10, %rsp
  0x0000028bc1185fff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186009:   	callq	*%r10
  0x0000028bc118600c:   	hlt
  0x0000028bc118600d:   	popq	%r10
  0x0000028bc118600f:   	shlq	$0x3, %rbx
  0x0000028bc1186013:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186017:   	testq	%rbx, %rbx
  0x0000028bc118601a:   	je	0x3
  0x0000028bc1186020:   	jmpq	*0x58(%rbx)
  0x0000028bc1186023:   	jmp	-0x51eb08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1854   27     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIL)V (native)
 total in heap  [0x0000028bc1186090,0x0000028bc1186490] = 1024
 relocation     [0x0000028bc11861f0,0x0000028bc1186280] = 144
 main code      [0x0000028bc1186280,0x0000028bc118648e] = 526
 stub code      [0x0000028bc118648e,0x0000028bc1186490] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8272ef0} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1186280:   	testq	%r9, %r9
  0x0000028bc1186283:   	je	0x41
  0x0000028bc1186289:   	pushq	%rdi
  0x0000028bc118628a:   	pushq	%r10
  0x0000028bc118628c:   	movl	0x8(%r9), %edi
  0x0000028bc1186290:   	movabsq	$0x800000000, %r10
  0x0000028bc118629a:   	addq	%r10, %rdi
  0x0000028bc118629d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11862a7:   	cmpq	(%r10), %rdi
  0x0000028bc11862aa:   	je	0x36
  0x0000028bc11862b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11862b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11862be:   	cmpq	(%r10), %rdi
  0x0000028bc11862c1:   	je	0x1f
  0x0000028bc11862c7:   	popq	%r10
  0x0000028bc11862c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11862ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11862d4:   	andq	$-0x10, %rsp
  0x0000028bc11862d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11862e2:   	callq	*%r10
  0x0000028bc11862e5:   	hlt
 ;; L_ok:
  0x0000028bc11862e6:   	popq	%r10
  0x0000028bc11862e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11862e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11862ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc11862f0:   	movabsq	$0x800000000, %r11
  0x0000028bc11862fa:   	addq	%r11, %r10
  0x0000028bc11862fd:   	movl	0x18(%r9), %r11d
  0x0000028bc1186301:   	pushq	%r10
  0x0000028bc1186303:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118630d:   	cmpq	(%r10), %r12
  0x0000028bc1186310:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186316:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186320:   	andq	$-0x10, %rsp
  0x0000028bc1186324:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118632e:   	callq	*%r10
  0x0000028bc1186331:   	hlt
  0x0000028bc1186332:   	popq	%r10
  0x0000028bc1186334:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1186338:   	testq	%r11, %r11
  0x0000028bc118633b:   	je	0x41
  0x0000028bc1186341:   	pushq	%rdi
  0x0000028bc1186342:   	pushq	%r10
  0x0000028bc1186344:   	movl	0x8(%r11), %edi
  0x0000028bc1186348:   	movabsq	$0x800000000, %r10
  0x0000028bc1186352:   	addq	%r10, %rdi
  0x0000028bc1186355:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118635f:   	cmpq	(%r10), %rdi
  0x0000028bc1186362:   	je	0x36
  0x0000028bc1186368:   	movq	0x40(%rdi), %rdi
  0x0000028bc118636c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1186376:   	cmpq	(%r10), %rdi
  0x0000028bc1186379:   	je	0x1f
  0x0000028bc118637f:   	popq	%r10
  0x0000028bc1186381:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1186382:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118638c:   	andq	$-0x10, %rsp
  0x0000028bc1186390:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118639a:   	callq	*%r10
  0x0000028bc118639d:   	hlt
 ;; L_ok:
  0x0000028bc118639e:   	popq	%r10
  0x0000028bc11863a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11863a1:   	movq	0x10(%r11), %r11
  0x0000028bc11863a5:   	cmpq	%r11, %r10
  0x0000028bc11863a8:   	je	0x61
  0x0000028bc11863ae:   	movl	0x1c(%r11), %eax
  0x0000028bc11863b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11863b6:   	je	0x53
  0x0000028bc11863bc:   	cmpl	$0x28, %eax
  0x0000028bc11863bf:   	jne	0x2e
  0x0000028bc11863c5:   	movq	%r11, %rax
  0x0000028bc11863c8:   	pushq	%rcx
  0x0000028bc11863c9:   	pushq	%rdi
  0x0000028bc11863ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11863d4:   	incl	(%rcx)
  0x0000028bc11863d6:   	movq	0x30(%r10), %rdi
  0x0000028bc11863da:   	movl	(%rdi), %ecx
  0x0000028bc11863dc:   	addq	$0x8, %rdi
  0x0000028bc11863e0:   	testq	%rax, %rax
  0x0000028bc11863e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11863e6:   	popq	%rdi
  0x0000028bc11863e7:   	popq	%rcx
  0x0000028bc11863e8:   	jne	0x9
  0x0000028bc11863ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc11863ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11863f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11863fd:   	andq	$-0x10, %rsp
  0x0000028bc1186401:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118640b:   	callq	*%r10
  0x0000028bc118640e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118640f:   	movl	0xc(%r9), %eax
  0x0000028bc1186413:   	shrl	$0x18, %eax
  0x0000028bc1186416:   	andl	$0xf, %eax
  0x0000028bc1186419:   	cmpl	$0x7, %eax
  0x0000028bc118641c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1186422:   	movabsq	$0x28bdc114f60, %rcx;   {external_word}
  0x0000028bc118642c:   	andq	$-0x10, %rsp
  0x0000028bc1186430:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118643a:   	callq	*%r10
  0x0000028bc118643d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118643e:   	movl	0x24(%r9), %ebx
  0x0000028bc1186442:   	pushq	%r10
  0x0000028bc1186444:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118644e:   	cmpq	(%r10), %r12
  0x0000028bc1186451:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186457:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186461:   	andq	$-0x10, %rsp
  0x0000028bc1186465:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118646f:   	callq	*%r10
  0x0000028bc1186472:   	hlt
  0x0000028bc1186473:   	popq	%r10
  0x0000028bc1186475:   	shlq	$0x3, %rbx
  0x0000028bc1186479:   	movq	0x10(%rbx), %rbx
  0x0000028bc118647d:   	testq	%rbx, %rbx
  0x0000028bc1186480:   	je	0x3
  0x0000028bc1186486:   	jmpq	*0x58(%rbx)
  0x0000028bc1186489:   	jmp	-0x51ef6e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118648e:   	hlt
  0x0000028bc118648f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1858   27     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIL)V (native)
 total in heap  [0x0000028bc1186090,0x0000028bc1186490] = 1024
 relocation     [0x0000028bc11861f0,0x0000028bc1186280] = 144
 main code      [0x0000028bc1186280,0x0000028bc118648e] = 526
 stub code      [0x0000028bc118648e,0x0000028bc1186490] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8272ef0} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1186280:   	testq	%r9, %r9
  0x0000028bc1186283:   	je	0x41
  0x0000028bc1186289:   	pushq	%rdi
  0x0000028bc118628a:   	pushq	%r10
  0x0000028bc118628c:   	movl	0x8(%r9), %edi
  0x0000028bc1186290:   	movabsq	$0x800000000, %r10
  0x0000028bc118629a:   	addq	%r10, %rdi
  0x0000028bc118629d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11862a7:   	cmpq	(%r10), %rdi
  0x0000028bc11862aa:   	je	0x36
  0x0000028bc11862b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11862b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11862be:   	cmpq	(%r10), %rdi
  0x0000028bc11862c1:   	je	0x1f
  0x0000028bc11862c7:   	popq	%r10
  0x0000028bc11862c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11862ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11862d4:   	andq	$-0x10, %rsp
  0x0000028bc11862d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11862e2:   	callq	*%r10
  0x0000028bc11862e5:   	hlt
 ;; L_ok:
  0x0000028bc11862e6:   	popq	%r10
  0x0000028bc11862e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11862e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11862ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc11862f0:   	movabsq	$0x800000000, %r11
  0x0000028bc11862fa:   	addq	%r11, %r10
  0x0000028bc11862fd:   	movl	0x18(%r9), %r11d
  0x0000028bc1186301:   	pushq	%r10
  0x0000028bc1186303:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118630d:   	cmpq	(%r10), %r12
  0x0000028bc1186310:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186316:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186320:   	andq	$-0x10, %rsp
  0x0000028bc1186324:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118632e:   	callq	*%r10
  0x0000028bc1186331:   	hlt
  0x0000028bc1186332:   	popq	%r10
  0x0000028bc1186334:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1186338:   	testq	%r11, %r11
  0x0000028bc118633b:   	je	0x41
  0x0000028bc1186341:   	pushq	%rdi
  0x0000028bc1186342:   	pushq	%r10
  0x0000028bc1186344:   	movl	0x8(%r11), %edi
  0x0000028bc1186348:   	movabsq	$0x800000000, %r10
  0x0000028bc1186352:   	addq	%r10, %rdi
  0x0000028bc1186355:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118635f:   	cmpq	(%r10), %rdi
  0x0000028bc1186362:   	je	0x36
  0x0000028bc1186368:   	movq	0x40(%rdi), %rdi
  0x0000028bc118636c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1186376:   	cmpq	(%r10), %rdi
  0x0000028bc1186379:   	je	0x1f
  0x0000028bc118637f:   	popq	%r10
  0x0000028bc1186381:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1186382:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118638c:   	andq	$-0x10, %rsp
  0x0000028bc1186390:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118639a:   	callq	*%r10
  0x0000028bc118639d:   	hlt
 ;; L_ok:
  0x0000028bc118639e:   	popq	%r10
  0x0000028bc11863a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11863a1:   	movq	0x10(%r11), %r11
  0x0000028bc11863a5:   	cmpq	%r11, %r10
  0x0000028bc11863a8:   	je	0x61
  0x0000028bc11863ae:   	movl	0x1c(%r11), %eax
  0x0000028bc11863b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11863b6:   	je	0x53
  0x0000028bc11863bc:   	cmpl	$0x28, %eax
  0x0000028bc11863bf:   	jne	0x2e
  0x0000028bc11863c5:   	movq	%r11, %rax
  0x0000028bc11863c8:   	pushq	%rcx
  0x0000028bc11863c9:   	pushq	%rdi
  0x0000028bc11863ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11863d4:   	incl	(%rcx)
  0x0000028bc11863d6:   	movq	0x30(%r10), %rdi
  0x0000028bc11863da:   	movl	(%rdi), %ecx
  0x0000028bc11863dc:   	addq	$0x8, %rdi
  0x0000028bc11863e0:   	testq	%rax, %rax
  0x0000028bc11863e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11863e6:   	popq	%rdi
  0x0000028bc11863e7:   	popq	%rcx
  0x0000028bc11863e8:   	jne	0x9
  0x0000028bc11863ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc11863ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11863f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11863fd:   	andq	$-0x10, %rsp
  0x0000028bc1186401:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118640b:   	callq	*%r10
  0x0000028bc118640e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118640f:   	movl	0xc(%r9), %eax
  0x0000028bc1186413:   	shrl	$0x18, %eax
  0x0000028bc1186416:   	andl	$0xf, %eax
  0x0000028bc1186419:   	cmpl	$0x7, %eax
  0x0000028bc118641c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1186422:   	movabsq	$0x28bdc114f60, %rcx;   {external_word}
  0x0000028bc118642c:   	andq	$-0x10, %rsp
  0x0000028bc1186430:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118643a:   	callq	*%r10
  0x0000028bc118643d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118643e:   	movl	0x24(%r9), %ebx
  0x0000028bc1186442:   	pushq	%r10
  0x0000028bc1186444:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118644e:   	cmpq	(%r10), %r12
  0x0000028bc1186451:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186457:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186461:   	andq	$-0x10, %rsp
  0x0000028bc1186465:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118646f:   	callq	*%r10
  0x0000028bc1186472:   	hlt
  0x0000028bc1186473:   	popq	%r10
  0x0000028bc1186475:   	shlq	$0x3, %rbx
  0x0000028bc1186479:   	movq	0x10(%rbx), %rbx
  0x0000028bc118647d:   	testq	%rbx, %rbx
  0x0000028bc1186480:   	je	0x3
  0x0000028bc1186486:   	jmpq	*0x58(%rbx)
  0x0000028bc1186489:   	jmp	-0x51ef6e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118648e:   	hlt
  0x0000028bc118648f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1868   28     n 0       java.lang.invoke.MethodHandle::invokeBasic(I)L (native)
 total in heap  [0x0000028bc1186510,0x0000028bc1186788] = 632
 relocation     [0x0000028bc1186670,0x0000028bc11866b8] = 72
 main code      [0x0000028bc11866c0,0x0000028bc1186783] = 195
 stub code      [0x0000028bc1186783,0x0000028bc1186788] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8273258} 'invokeBasic' '(I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11866c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11866c3:   	pushq	%r10
  0x0000028bc11866c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11866cf:   	cmpq	(%r10), %r12
  0x0000028bc11866d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11866d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11866e2:   	andq	$-0x10, %rsp
  0x0000028bc11866e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11866f0:   	callq	*%r10
  0x0000028bc11866f3:   	hlt
  0x0000028bc11866f4:   	popq	%r10
  0x0000028bc11866f6:   	shlq	$0x3, %rbx
  0x0000028bc11866fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11866fd:   	pushq	%r10
  0x0000028bc11866ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186709:   	cmpq	(%r10), %r12
  0x0000028bc118670c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186712:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118671c:   	andq	$-0x10, %rsp
  0x0000028bc1186720:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118672a:   	callq	*%r10
  0x0000028bc118672d:   	hlt
  0x0000028bc118672e:   	popq	%r10
  0x0000028bc1186730:   	shlq	$0x3, %rbx
  0x0000028bc1186734:   	movl	0x24(%rbx), %ebx
  0x0000028bc1186737:   	pushq	%r10
  0x0000028bc1186739:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186743:   	cmpq	(%r10), %r12
  0x0000028bc1186746:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118674c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186756:   	andq	$-0x10, %rsp
  0x0000028bc118675a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186764:   	callq	*%r10
  0x0000028bc1186767:   	hlt
  0x0000028bc1186768:   	popq	%r10
  0x0000028bc118676a:   	shlq	$0x3, %rbx
  0x0000028bc118676e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186772:   	testq	%rbx, %rbx
  0x0000028bc1186775:   	je	0x3
  0x0000028bc118677b:   	jmpq	*0x58(%rbx)
  0x0000028bc118677e:   	jmp	-0x51f263           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1186783:   	hlt
  0x0000028bc1186784:   	hlt
  0x0000028bc1186785:   	hlt
  0x0000028bc1186786:   	hlt
  0x0000028bc1186787:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1873   28     n 0       java.lang.invoke.MethodHandle::invokeBasic(I)L (native)
 total in heap  [0x0000028bc1186510,0x0000028bc1186788] = 632
 relocation     [0x0000028bc1186670,0x0000028bc11866b8] = 72
 main code      [0x0000028bc11866c0,0x0000028bc1186783] = 195
 stub code      [0x0000028bc1186783,0x0000028bc1186788] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8273258} 'invokeBasic' '(I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11866c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11866c3:   	pushq	%r10
  0x0000028bc11866c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11866cf:   	cmpq	(%r10), %r12
  0x0000028bc11866d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11866d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11866e2:   	andq	$-0x10, %rsp
  0x0000028bc11866e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11866f0:   	callq	*%r10
  0x0000028bc11866f3:   	hlt
  0x0000028bc11866f4:   	popq	%r10
  0x0000028bc11866f6:   	shlq	$0x3, %rbx
  0x0000028bc11866fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11866fd:   	pushq	%r10
  0x0000028bc11866ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186709:   	cmpq	(%r10), %r12
  0x0000028bc118670c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186712:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118671c:   	andq	$-0x10, %rsp
  0x0000028bc1186720:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118672a:   	callq	*%r10
  0x0000028bc118672d:   	hlt
  0x0000028bc118672e:   	popq	%r10
  0x0000028bc1186730:   	shlq	$0x3, %rbx
  0x0000028bc1186734:   	movl	0x24(%rbx), %ebx
  0x0000028bc1186737:   	pushq	%r10
  0x0000028bc1186739:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186743:   	cmpq	(%r10), %r12
  0x0000028bc1186746:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118674c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186756:   	andq	$-0x10, %rsp
  0x0000028bc118675a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186764:   	callq	*%r10
  0x0000028bc1186767:   	hlt
  0x0000028bc1186768:   	popq	%r10
  0x0000028bc118676a:   	shlq	$0x3, %rbx
  0x0000028bc118676e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186772:   	testq	%rbx, %rbx
  0x0000028bc1186775:   	je	0x3
  0x0000028bc118677b:   	jmpq	*0x58(%rbx)
  0x0000028bc118677e:   	jmp	-0x51f263           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1186783:   	hlt
  0x0000028bc1186784:   	hlt
  0x0000028bc1186785:   	hlt
  0x0000028bc1186786:   	hlt
  0x0000028bc1186787:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1877   29     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIL)L (native)
 total in heap  [0x0000028bc1186810,0x0000028bc1186c10] = 1024
 relocation     [0x0000028bc1186970,0x0000028bc1186a00] = 144
 main code      [0x0000028bc1186a00,0x0000028bc1186c0e] = 526
 stub code      [0x0000028bc1186c0e,0x0000028bc1186c10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8273390} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1186a00:   	testq	%r9, %r9
  0x0000028bc1186a03:   	je	0x41
  0x0000028bc1186a09:   	pushq	%rdi
  0x0000028bc1186a0a:   	pushq	%r10
  0x0000028bc1186a0c:   	movl	0x8(%r9), %edi
  0x0000028bc1186a10:   	movabsq	$0x800000000, %r10
  0x0000028bc1186a1a:   	addq	%r10, %rdi
  0x0000028bc1186a1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186a27:   	cmpq	(%r10), %rdi
  0x0000028bc1186a2a:   	je	0x36
  0x0000028bc1186a30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1186a34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186a3e:   	cmpq	(%r10), %rdi
  0x0000028bc1186a41:   	je	0x1f
  0x0000028bc1186a47:   	popq	%r10
  0x0000028bc1186a49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1186a4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1186a54:   	andq	$-0x10, %rsp
  0x0000028bc1186a58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186a62:   	callq	*%r10
  0x0000028bc1186a65:   	hlt
 ;; L_ok:
  0x0000028bc1186a66:   	popq	%r10
  0x0000028bc1186a68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1186a69:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1186a6c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1186a70:   	movabsq	$0x800000000, %r11
  0x0000028bc1186a7a:   	addq	%r11, %r10
  0x0000028bc1186a7d:   	movl	0x18(%r9), %r11d
  0x0000028bc1186a81:   	pushq	%r10
  0x0000028bc1186a83:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186a8d:   	cmpq	(%r10), %r12
  0x0000028bc1186a90:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186a96:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186aa0:   	andq	$-0x10, %rsp
  0x0000028bc1186aa4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186aae:   	callq	*%r10
  0x0000028bc1186ab1:   	hlt
  0x0000028bc1186ab2:   	popq	%r10
  0x0000028bc1186ab4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1186ab8:   	testq	%r11, %r11
  0x0000028bc1186abb:   	je	0x41
  0x0000028bc1186ac1:   	pushq	%rdi
  0x0000028bc1186ac2:   	pushq	%r10
  0x0000028bc1186ac4:   	movl	0x8(%r11), %edi
  0x0000028bc1186ac8:   	movabsq	$0x800000000, %r10
  0x0000028bc1186ad2:   	addq	%r10, %rdi
  0x0000028bc1186ad5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1186adf:   	cmpq	(%r10), %rdi
  0x0000028bc1186ae2:   	je	0x36
  0x0000028bc1186ae8:   	movq	0x40(%rdi), %rdi
  0x0000028bc1186aec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1186af6:   	cmpq	(%r10), %rdi
  0x0000028bc1186af9:   	je	0x1f
  0x0000028bc1186aff:   	popq	%r10
  0x0000028bc1186b01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1186b02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1186b0c:   	andq	$-0x10, %rsp
  0x0000028bc1186b10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186b1a:   	callq	*%r10
  0x0000028bc1186b1d:   	hlt
 ;; L_ok:
  0x0000028bc1186b1e:   	popq	%r10
  0x0000028bc1186b20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1186b21:   	movq	0x10(%r11), %r11
  0x0000028bc1186b25:   	cmpq	%r11, %r10
  0x0000028bc1186b28:   	je	0x61
  0x0000028bc1186b2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1186b32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1186b36:   	je	0x53
  0x0000028bc1186b3c:   	cmpl	$0x28, %eax
  0x0000028bc1186b3f:   	jne	0x2e
  0x0000028bc1186b45:   	movq	%r11, %rax
  0x0000028bc1186b48:   	pushq	%rcx
  0x0000028bc1186b49:   	pushq	%rdi
  0x0000028bc1186b4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1186b54:   	incl	(%rcx)
  0x0000028bc1186b56:   	movq	0x30(%r10), %rdi
  0x0000028bc1186b5a:   	movl	(%rdi), %ecx
  0x0000028bc1186b5c:   	addq	$0x8, %rdi
  0x0000028bc1186b60:   	testq	%rax, %rax
  0x0000028bc1186b63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1186b66:   	popq	%rdi
  0x0000028bc1186b67:   	popq	%rcx
  0x0000028bc1186b68:   	jne	0x9
  0x0000028bc1186b6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1186b6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1186b73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1186b7d:   	andq	$-0x10, %rsp
  0x0000028bc1186b81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186b8b:   	callq	*%r10
  0x0000028bc1186b8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1186b8f:   	movl	0xc(%r9), %eax
  0x0000028bc1186b93:   	shrl	$0x18, %eax
  0x0000028bc1186b96:   	andl	$0xf, %eax
  0x0000028bc1186b99:   	cmpl	$0x7, %eax
  0x0000028bc1186b9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1186ba2:   	movabsq	$0x28bdc114be0, %rcx;   {external_word}
  0x0000028bc1186bac:   	andq	$-0x10, %rsp
  0x0000028bc1186bb0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186bba:   	callq	*%r10
  0x0000028bc1186bbd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1186bbe:   	movl	0x24(%r9), %ebx
  0x0000028bc1186bc2:   	pushq	%r10
  0x0000028bc1186bc4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186bce:   	cmpq	(%r10), %r12
  0x0000028bc1186bd1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186bd7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186be1:   	andq	$-0x10, %rsp
  0x0000028bc1186be5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186bef:   	callq	*%r10
  0x0000028bc1186bf2:   	hlt
  0x0000028bc1186bf3:   	popq	%r10
  0x0000028bc1186bf5:   	shlq	$0x3, %rbx
  0x0000028bc1186bf9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186bfd:   	testq	%rbx, %rbx
  0x0000028bc1186c00:   	je	0x3
  0x0000028bc1186c06:   	jmpq	*0x58(%rbx)
  0x0000028bc1186c09:   	jmp	-0x51f6ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1186c0e:   	hlt
  0x0000028bc1186c0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1885   29     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIL)L (native)
 total in heap  [0x0000028bc1186810,0x0000028bc1186c10] = 1024
 relocation     [0x0000028bc1186970,0x0000028bc1186a00] = 144
 main code      [0x0000028bc1186a00,0x0000028bc1186c0e] = 526
 stub code      [0x0000028bc1186c0e,0x0000028bc1186c10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8273390} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1186a00:   	testq	%r9, %r9
  0x0000028bc1186a03:   	je	0x41
  0x0000028bc1186a09:   	pushq	%rdi
  0x0000028bc1186a0a:   	pushq	%r10
  0x0000028bc1186a0c:   	movl	0x8(%r9), %edi
  0x0000028bc1186a10:   	movabsq	$0x800000000, %r10
  0x0000028bc1186a1a:   	addq	%r10, %rdi
  0x0000028bc1186a1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186a27:   	cmpq	(%r10), %rdi
  0x0000028bc1186a2a:   	je	0x36
  0x0000028bc1186a30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1186a34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186a3e:   	cmpq	(%r10), %rdi
  0x0000028bc1186a41:   	je	0x1f
  0x0000028bc1186a47:   	popq	%r10
  0x0000028bc1186a49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1186a4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1186a54:   	andq	$-0x10, %rsp
  0x0000028bc1186a58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186a62:   	callq	*%r10
  0x0000028bc1186a65:   	hlt
 ;; L_ok:
  0x0000028bc1186a66:   	popq	%r10
  0x0000028bc1186a68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1186a69:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1186a6c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1186a70:   	movabsq	$0x800000000, %r11
  0x0000028bc1186a7a:   	addq	%r11, %r10
  0x0000028bc1186a7d:   	movl	0x18(%r9), %r11d
  0x0000028bc1186a81:   	pushq	%r10
  0x0000028bc1186a83:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186a8d:   	cmpq	(%r10), %r12
  0x0000028bc1186a90:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186a96:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186aa0:   	andq	$-0x10, %rsp
  0x0000028bc1186aa4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186aae:   	callq	*%r10
  0x0000028bc1186ab1:   	hlt
  0x0000028bc1186ab2:   	popq	%r10
  0x0000028bc1186ab4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1186ab8:   	testq	%r11, %r11
  0x0000028bc1186abb:   	je	0x41
  0x0000028bc1186ac1:   	pushq	%rdi
  0x0000028bc1186ac2:   	pushq	%r10
  0x0000028bc1186ac4:   	movl	0x8(%r11), %edi
  0x0000028bc1186ac8:   	movabsq	$0x800000000, %r10
  0x0000028bc1186ad2:   	addq	%r10, %rdi
  0x0000028bc1186ad5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1186adf:   	cmpq	(%r10), %rdi
  0x0000028bc1186ae2:   	je	0x36
  0x0000028bc1186ae8:   	movq	0x40(%rdi), %rdi
  0x0000028bc1186aec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1186af6:   	cmpq	(%r10), %rdi
  0x0000028bc1186af9:   	je	0x1f
  0x0000028bc1186aff:   	popq	%r10
  0x0000028bc1186b01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1186b02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1186b0c:   	andq	$-0x10, %rsp
  0x0000028bc1186b10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186b1a:   	callq	*%r10
  0x0000028bc1186b1d:   	hlt
 ;; L_ok:
  0x0000028bc1186b1e:   	popq	%r10
  0x0000028bc1186b20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1186b21:   	movq	0x10(%r11), %r11
  0x0000028bc1186b25:   	cmpq	%r11, %r10
  0x0000028bc1186b28:   	je	0x61
  0x0000028bc1186b2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1186b32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1186b36:   	je	0x53
  0x0000028bc1186b3c:   	cmpl	$0x28, %eax
  0x0000028bc1186b3f:   	jne	0x2e
  0x0000028bc1186b45:   	movq	%r11, %rax
  0x0000028bc1186b48:   	pushq	%rcx
  0x0000028bc1186b49:   	pushq	%rdi
  0x0000028bc1186b4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1186b54:   	incl	(%rcx)
  0x0000028bc1186b56:   	movq	0x30(%r10), %rdi
  0x0000028bc1186b5a:   	movl	(%rdi), %ecx
  0x0000028bc1186b5c:   	addq	$0x8, %rdi
  0x0000028bc1186b60:   	testq	%rax, %rax
  0x0000028bc1186b63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1186b66:   	popq	%rdi
  0x0000028bc1186b67:   	popq	%rcx
  0x0000028bc1186b68:   	jne	0x9
  0x0000028bc1186b6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1186b6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1186b73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1186b7d:   	andq	$-0x10, %rsp
  0x0000028bc1186b81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186b8b:   	callq	*%r10
  0x0000028bc1186b8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1186b8f:   	movl	0xc(%r9), %eax
  0x0000028bc1186b93:   	shrl	$0x18, %eax
  0x0000028bc1186b96:   	andl	$0xf, %eax
  0x0000028bc1186b99:   	cmpl	$0x7, %eax
  0x0000028bc1186b9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1186ba2:   	movabsq	$0x28bdc114be0, %rcx;   {external_word}
  0x0000028bc1186bac:   	andq	$-0x10, %rsp
  0x0000028bc1186bb0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186bba:   	callq	*%r10
  0x0000028bc1186bbd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1186bbe:   	movl	0x24(%r9), %ebx
  0x0000028bc1186bc2:   	pushq	%r10
  0x0000028bc1186bc4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186bce:   	cmpq	(%r10), %r12
  0x0000028bc1186bd1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186bd7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186be1:   	andq	$-0x10, %rsp
  0x0000028bc1186be5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186bef:   	callq	*%r10
  0x0000028bc1186bf2:   	hlt
  0x0000028bc1186bf3:   	popq	%r10
  0x0000028bc1186bf5:   	shlq	$0x3, %rbx
  0x0000028bc1186bf9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186bfd:   	testq	%rbx, %rbx
  0x0000028bc1186c00:   	je	0x3
  0x0000028bc1186c06:   	jmpq	*0x58(%rbx)
  0x0000028bc1186c09:   	jmp	-0x51f6ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1186c0e:   	hlt
  0x0000028bc1186c0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1904   30     n 0       java.lang.invoke.MethodHandle::linkToStatic(IL)I (native)
 total in heap  [0x0000028bc1186c90,0x0000028bc1186f28] = 664
 relocation     [0x0000028bc1186df0,0x0000028bc1186e38] = 72
 main code      [0x0000028bc1186e40,0x0000028bc1186f28] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd827b8d8} 'linkToStatic' '(ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1186e40:   	testq	%r8, %r8
  0x0000028bc1186e43:   	je	0x41
  0x0000028bc1186e49:   	pushq	%rdi
  0x0000028bc1186e4a:   	pushq	%r10
  0x0000028bc1186e4c:   	movl	0x8(%r8), %edi
  0x0000028bc1186e50:   	movabsq	$0x800000000, %r10
  0x0000028bc1186e5a:   	addq	%r10, %rdi
  0x0000028bc1186e5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186e67:   	cmpq	(%r10), %rdi
  0x0000028bc1186e6a:   	je	0x36
  0x0000028bc1186e70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1186e74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186e7e:   	cmpq	(%r10), %rdi
  0x0000028bc1186e81:   	je	0x1f
  0x0000028bc1186e87:   	popq	%r10
  0x0000028bc1186e89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1186e8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1186e94:   	andq	$-0x10, %rsp
  0x0000028bc1186e98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186ea2:   	callq	*%r10
  0x0000028bc1186ea5:   	hlt
 ;; L_ok:
  0x0000028bc1186ea6:   	popq	%r10
  0x0000028bc1186ea8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1186ea9:   	movl	0xc(%r8), %eax
  0x0000028bc1186ead:   	shrl	$0x18, %eax
  0x0000028bc1186eb0:   	andl	$0xf, %eax
  0x0000028bc1186eb3:   	cmpl	$0x6, %eax
  0x0000028bc1186eb6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1186ebc:   	movabsq	$0x28bdc114c60, %rcx;   {external_word}
  0x0000028bc1186ec6:   	andq	$-0x10, %rsp
  0x0000028bc1186eca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186ed4:   	callq	*%r10
  0x0000028bc1186ed7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1186ed8:   	movl	0x24(%r8), %ebx
  0x0000028bc1186edc:   	pushq	%r10
  0x0000028bc1186ede:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186ee8:   	cmpq	(%r10), %r12
  0x0000028bc1186eeb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186ef1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186efb:   	andq	$-0x10, %rsp
  0x0000028bc1186eff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186f09:   	callq	*%r10
  0x0000028bc1186f0c:   	hlt
  0x0000028bc1186f0d:   	popq	%r10
  0x0000028bc1186f0f:   	shlq	$0x3, %rbx
  0x0000028bc1186f13:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186f17:   	testq	%rbx, %rbx
  0x0000028bc1186f1a:   	je	0x3
  0x0000028bc1186f20:   	jmpq	*0x58(%rbx)
  0x0000028bc1186f23:   	jmp	-0x51fa08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1906   30     n 0       java.lang.invoke.MethodHandle::linkToStatic(IL)I (native)
 total in heap  [0x0000028bc1186c90,0x0000028bc1186f28] = 664
 relocation     [0x0000028bc1186df0,0x0000028bc1186e38] = 72
 main code      [0x0000028bc1186e40,0x0000028bc1186f28] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd827b8d8} 'linkToStatic' '(ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1186e40:   	testq	%r8, %r8
  0x0000028bc1186e43:   	je	0x41
  0x0000028bc1186e49:   	pushq	%rdi
  0x0000028bc1186e4a:   	pushq	%r10
  0x0000028bc1186e4c:   	movl	0x8(%r8), %edi
  0x0000028bc1186e50:   	movabsq	$0x800000000, %r10
  0x0000028bc1186e5a:   	addq	%r10, %rdi
  0x0000028bc1186e5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186e67:   	cmpq	(%r10), %rdi
  0x0000028bc1186e6a:   	je	0x36
  0x0000028bc1186e70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1186e74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1186e7e:   	cmpq	(%r10), %rdi
  0x0000028bc1186e81:   	je	0x1f
  0x0000028bc1186e87:   	popq	%r10
  0x0000028bc1186e89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1186e8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1186e94:   	andq	$-0x10, %rsp
  0x0000028bc1186e98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186ea2:   	callq	*%r10
  0x0000028bc1186ea5:   	hlt
 ;; L_ok:
  0x0000028bc1186ea6:   	popq	%r10
  0x0000028bc1186ea8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1186ea9:   	movl	0xc(%r8), %eax
  0x0000028bc1186ead:   	shrl	$0x18, %eax
  0x0000028bc1186eb0:   	andl	$0xf, %eax
  0x0000028bc1186eb3:   	cmpl	$0x6, %eax
  0x0000028bc1186eb6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1186ebc:   	movabsq	$0x28bdc114c60, %rcx;   {external_word}
  0x0000028bc1186ec6:   	andq	$-0x10, %rsp
  0x0000028bc1186eca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186ed4:   	callq	*%r10
  0x0000028bc1186ed7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1186ed8:   	movl	0x24(%r8), %ebx
  0x0000028bc1186edc:   	pushq	%r10
  0x0000028bc1186ede:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1186ee8:   	cmpq	(%r10), %r12
  0x0000028bc1186eeb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1186ef1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1186efb:   	andq	$-0x10, %rsp
  0x0000028bc1186eff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1186f09:   	callq	*%r10
  0x0000028bc1186f0c:   	hlt
  0x0000028bc1186f0d:   	popq	%r10
  0x0000028bc1186f0f:   	shlq	$0x3, %rbx
  0x0000028bc1186f13:   	movq	0x10(%rbx), %rbx
  0x0000028bc1186f17:   	testq	%rbx, %rbx
  0x0000028bc1186f1a:   	je	0x3
  0x0000028bc1186f20:   	jmpq	*0x58(%rbx)
  0x0000028bc1186f23:   	jmp	-0x51fa08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1915   31     n 0       java.lang.invoke.MethodHandle::linkToStatic(IIIL)I (native)
 total in heap  [0x0000028bc1186f90,0x0000028bc1187228] = 664
 relocation     [0x0000028bc11870f0,0x0000028bc1187138] = 72
 main code      [0x0000028bc1187140,0x0000028bc1187225] = 229
 stub code      [0x0000028bc1187225,0x0000028bc1187228] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280268} 'linkToStatic' '(IIILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1187140:   	testq	%rdi, %rdi
  0x0000028bc1187143:   	je	0x40
  0x0000028bc1187149:   	pushq	%rdi
  0x0000028bc118714a:   	pushq	%r10
  0x0000028bc118714c:   	movl	0x8(%rdi), %edi
  0x0000028bc118714f:   	movabsq	$0x800000000, %r10
  0x0000028bc1187159:   	addq	%r10, %rdi
  0x0000028bc118715c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1187166:   	cmpq	(%r10), %rdi
  0x0000028bc1187169:   	je	0x36
  0x0000028bc118716f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1187173:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118717d:   	cmpq	(%r10), %rdi
  0x0000028bc1187180:   	je	0x1f
  0x0000028bc1187186:   	popq	%r10
  0x0000028bc1187188:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1187189:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1187193:   	andq	$-0x10, %rsp
  0x0000028bc1187197:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11871a1:   	callq	*%r10
  0x0000028bc11871a4:   	hlt
 ;; L_ok:
  0x0000028bc11871a5:   	popq	%r10
  0x0000028bc11871a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11871a8:   	movl	0xc(%rdi), %eax
  0x0000028bc11871ab:   	shrl	$0x18, %eax
  0x0000028bc11871ae:   	andl	$0xf, %eax
  0x0000028bc11871b1:   	cmpl	$0x6, %eax
  0x0000028bc11871b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11871ba:   	movabsq	$0x28bdc115060, %rcx;   {external_word}
  0x0000028bc11871c4:   	andq	$-0x10, %rsp
  0x0000028bc11871c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11871d2:   	callq	*%r10
  0x0000028bc11871d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11871d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc11871d9:   	pushq	%r10
  0x0000028bc11871db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11871e5:   	cmpq	(%r10), %r12
  0x0000028bc11871e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11871ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11871f8:   	andq	$-0x10, %rsp
  0x0000028bc11871fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187206:   	callq	*%r10
  0x0000028bc1187209:   	hlt
  0x0000028bc118720a:   	popq	%r10
  0x0000028bc118720c:   	shlq	$0x3, %rbx
  0x0000028bc1187210:   	movq	0x10(%rbx), %rbx
  0x0000028bc1187214:   	testq	%rbx, %rbx
  0x0000028bc1187217:   	je	0x3
  0x0000028bc118721d:   	jmpq	*0x58(%rbx)
  0x0000028bc1187220:   	jmp	-0x51fd05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1187225:   	hlt
  0x0000028bc1187226:   	hlt
  0x0000028bc1187227:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1918   31     n 0       java.lang.invoke.MethodHandle::linkToStatic(IIIL)I (native)
 total in heap  [0x0000028bc1186f90,0x0000028bc1187228] = 664
 relocation     [0x0000028bc11870f0,0x0000028bc1187138] = 72
 main code      [0x0000028bc1187140,0x0000028bc1187225] = 229
 stub code      [0x0000028bc1187225,0x0000028bc1187228] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280268} 'linkToStatic' '(IIILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1187140:   	testq	%rdi, %rdi
  0x0000028bc1187143:   	je	0x40
  0x0000028bc1187149:   	pushq	%rdi
  0x0000028bc118714a:   	pushq	%r10
  0x0000028bc118714c:   	movl	0x8(%rdi), %edi
  0x0000028bc118714f:   	movabsq	$0x800000000, %r10
  0x0000028bc1187159:   	addq	%r10, %rdi
  0x0000028bc118715c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1187166:   	cmpq	(%r10), %rdi
  0x0000028bc1187169:   	je	0x36
  0x0000028bc118716f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1187173:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118717d:   	cmpq	(%r10), %rdi
  0x0000028bc1187180:   	je	0x1f
  0x0000028bc1187186:   	popq	%r10
  0x0000028bc1187188:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1187189:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1187193:   	andq	$-0x10, %rsp
  0x0000028bc1187197:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11871a1:   	callq	*%r10
  0x0000028bc11871a4:   	hlt
 ;; L_ok:
  0x0000028bc11871a5:   	popq	%r10
  0x0000028bc11871a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11871a8:   	movl	0xc(%rdi), %eax
  0x0000028bc11871ab:   	shrl	$0x18, %eax
  0x0000028bc11871ae:   	andl	$0xf, %eax
  0x0000028bc11871b1:   	cmpl	$0x6, %eax
  0x0000028bc11871b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11871ba:   	movabsq	$0x28bdc115060, %rcx;   {external_word}
  0x0000028bc11871c4:   	andq	$-0x10, %rsp
  0x0000028bc11871c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11871d2:   	callq	*%r10
  0x0000028bc11871d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11871d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc11871d9:   	pushq	%r10
  0x0000028bc11871db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11871e5:   	cmpq	(%r10), %r12
  0x0000028bc11871e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11871ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11871f8:   	andq	$-0x10, %rsp
  0x0000028bc11871fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187206:   	callq	*%r10
  0x0000028bc1187209:   	hlt
  0x0000028bc118720a:   	popq	%r10
  0x0000028bc118720c:   	shlq	$0x3, %rbx
  0x0000028bc1187210:   	movq	0x10(%rbx), %rbx
  0x0000028bc1187214:   	testq	%rbx, %rbx
  0x0000028bc1187217:   	je	0x3
  0x0000028bc118721d:   	jmpq	*0x58(%rbx)
  0x0000028bc1187220:   	jmp	-0x51fd05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1187225:   	hlt
  0x0000028bc1187226:   	hlt
  0x0000028bc1187227:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1923   32     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIIL)V (native)
 total in heap  [0x0000028bc1187290,0x0000028bc1187690] = 1024
 relocation     [0x0000028bc11873f0,0x0000028bc1187480] = 144
 main code      [0x0000028bc1187480,0x0000028bc118768b] = 523
 stub code      [0x0000028bc118768b,0x0000028bc1187690] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280960} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1187480:   	testq	%rdi, %rdi
  0x0000028bc1187483:   	je	0x40
  0x0000028bc1187489:   	pushq	%rdi
  0x0000028bc118748a:   	pushq	%r10
  0x0000028bc118748c:   	movl	0x8(%rdi), %edi
  0x0000028bc118748f:   	movabsq	$0x800000000, %r10
  0x0000028bc1187499:   	addq	%r10, %rdi
  0x0000028bc118749c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11874a6:   	cmpq	(%r10), %rdi
  0x0000028bc11874a9:   	je	0x36
  0x0000028bc11874af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11874b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11874bd:   	cmpq	(%r10), %rdi
  0x0000028bc11874c0:   	je	0x1f
  0x0000028bc11874c6:   	popq	%r10
  0x0000028bc11874c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11874c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11874d3:   	andq	$-0x10, %rsp
  0x0000028bc11874d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11874e1:   	callq	*%r10
  0x0000028bc11874e4:   	hlt
 ;; L_ok:
  0x0000028bc11874e5:   	popq	%r10
  0x0000028bc11874e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11874e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11874eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc11874ef:   	movabsq	$0x800000000, %r11
  0x0000028bc11874f9:   	addq	%r11, %r10
  0x0000028bc11874fc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1187500:   	pushq	%r10
  0x0000028bc1187502:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118750c:   	cmpq	(%r10), %r12
  0x0000028bc118750f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187515:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118751f:   	andq	$-0x10, %rsp
  0x0000028bc1187523:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118752d:   	callq	*%r10
  0x0000028bc1187530:   	hlt
  0x0000028bc1187531:   	popq	%r10
  0x0000028bc1187533:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1187537:   	testq	%r11, %r11
  0x0000028bc118753a:   	je	0x41
  0x0000028bc1187540:   	pushq	%rdi
  0x0000028bc1187541:   	pushq	%r10
  0x0000028bc1187543:   	movl	0x8(%r11), %edi
  0x0000028bc1187547:   	movabsq	$0x800000000, %r10
  0x0000028bc1187551:   	addq	%r10, %rdi
  0x0000028bc1187554:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118755e:   	cmpq	(%r10), %rdi
  0x0000028bc1187561:   	je	0x36
  0x0000028bc1187567:   	movq	0x40(%rdi), %rdi
  0x0000028bc118756b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1187575:   	cmpq	(%r10), %rdi
  0x0000028bc1187578:   	je	0x1f
  0x0000028bc118757e:   	popq	%r10
  0x0000028bc1187580:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1187581:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118758b:   	andq	$-0x10, %rsp
  0x0000028bc118758f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187599:   	callq	*%r10
  0x0000028bc118759c:   	hlt
 ;; L_ok:
  0x0000028bc118759d:   	popq	%r10
  0x0000028bc118759f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11875a0:   	movq	0x10(%r11), %r11
  0x0000028bc11875a4:   	cmpq	%r11, %r10
  0x0000028bc11875a7:   	je	0x61
  0x0000028bc11875ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11875b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11875b5:   	je	0x53
  0x0000028bc11875bb:   	cmpl	$0x28, %eax
  0x0000028bc11875be:   	jne	0x2e
  0x0000028bc11875c4:   	movq	%r11, %rax
  0x0000028bc11875c7:   	pushq	%rcx
  0x0000028bc11875c8:   	pushq	%rdi
  0x0000028bc11875c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11875d3:   	incl	(%rcx)
  0x0000028bc11875d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11875d9:   	movl	(%rdi), %ecx
  0x0000028bc11875db:   	addq	$0x8, %rdi
  0x0000028bc11875df:   	testq	%rax, %rax
  0x0000028bc11875e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11875e5:   	popq	%rdi
  0x0000028bc11875e6:   	popq	%rcx
  0x0000028bc11875e7:   	jne	0x9
  0x0000028bc11875e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11875ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11875f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11875fc:   	andq	$-0x10, %rsp
  0x0000028bc1187600:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118760a:   	callq	*%r10
  0x0000028bc118760d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118760e:   	movl	0xc(%rdi), %eax
  0x0000028bc1187611:   	shrl	$0x18, %eax
  0x0000028bc1187614:   	andl	$0xf, %eax
  0x0000028bc1187617:   	cmpl	$0x7, %eax
  0x0000028bc118761a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1187620:   	movabsq	$0x28bdc114ce0, %rcx;   {external_word}
  0x0000028bc118762a:   	andq	$-0x10, %rsp
  0x0000028bc118762e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187638:   	callq	*%r10
  0x0000028bc118763b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118763c:   	movl	0x24(%rdi), %ebx
  0x0000028bc118763f:   	pushq	%r10
  0x0000028bc1187641:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118764b:   	cmpq	(%r10), %r12
  0x0000028bc118764e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187654:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118765e:   	andq	$-0x10, %rsp
  0x0000028bc1187662:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118766c:   	callq	*%r10
  0x0000028bc118766f:   	hlt
  0x0000028bc1187670:   	popq	%r10
  0x0000028bc1187672:   	shlq	$0x3, %rbx
  0x0000028bc1187676:   	movq	0x10(%rbx), %rbx
  0x0000028bc118767a:   	testq	%rbx, %rbx
  0x0000028bc118767d:   	je	0x3
  0x0000028bc1187683:   	jmpq	*0x58(%rbx)
  0x0000028bc1187686:   	jmp	-0x52016b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118768b:   	hlt
  0x0000028bc118768c:   	hlt
  0x0000028bc118768d:   	hlt
  0x0000028bc118768e:   	hlt
  0x0000028bc118768f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1927   32     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIIL)V (native)
 total in heap  [0x0000028bc1187290,0x0000028bc1187690] = 1024
 relocation     [0x0000028bc11873f0,0x0000028bc1187480] = 144
 main code      [0x0000028bc1187480,0x0000028bc118768b] = 523
 stub code      [0x0000028bc118768b,0x0000028bc1187690] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280960} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1187480:   	testq	%rdi, %rdi
  0x0000028bc1187483:   	je	0x40
  0x0000028bc1187489:   	pushq	%rdi
  0x0000028bc118748a:   	pushq	%r10
  0x0000028bc118748c:   	movl	0x8(%rdi), %edi
  0x0000028bc118748f:   	movabsq	$0x800000000, %r10
  0x0000028bc1187499:   	addq	%r10, %rdi
  0x0000028bc118749c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11874a6:   	cmpq	(%r10), %rdi
  0x0000028bc11874a9:   	je	0x36
  0x0000028bc11874af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11874b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11874bd:   	cmpq	(%r10), %rdi
  0x0000028bc11874c0:   	je	0x1f
  0x0000028bc11874c6:   	popq	%r10
  0x0000028bc11874c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11874c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11874d3:   	andq	$-0x10, %rsp
  0x0000028bc11874d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11874e1:   	callq	*%r10
  0x0000028bc11874e4:   	hlt
 ;; L_ok:
  0x0000028bc11874e5:   	popq	%r10
  0x0000028bc11874e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11874e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11874eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc11874ef:   	movabsq	$0x800000000, %r11
  0x0000028bc11874f9:   	addq	%r11, %r10
  0x0000028bc11874fc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1187500:   	pushq	%r10
  0x0000028bc1187502:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118750c:   	cmpq	(%r10), %r12
  0x0000028bc118750f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187515:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118751f:   	andq	$-0x10, %rsp
  0x0000028bc1187523:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118752d:   	callq	*%r10
  0x0000028bc1187530:   	hlt
  0x0000028bc1187531:   	popq	%r10
  0x0000028bc1187533:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1187537:   	testq	%r11, %r11
  0x0000028bc118753a:   	je	0x41
  0x0000028bc1187540:   	pushq	%rdi
  0x0000028bc1187541:   	pushq	%r10
  0x0000028bc1187543:   	movl	0x8(%r11), %edi
  0x0000028bc1187547:   	movabsq	$0x800000000, %r10
  0x0000028bc1187551:   	addq	%r10, %rdi
  0x0000028bc1187554:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118755e:   	cmpq	(%r10), %rdi
  0x0000028bc1187561:   	je	0x36
  0x0000028bc1187567:   	movq	0x40(%rdi), %rdi
  0x0000028bc118756b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1187575:   	cmpq	(%r10), %rdi
  0x0000028bc1187578:   	je	0x1f
  0x0000028bc118757e:   	popq	%r10
  0x0000028bc1187580:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1187581:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118758b:   	andq	$-0x10, %rsp
  0x0000028bc118758f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187599:   	callq	*%r10
  0x0000028bc118759c:   	hlt
 ;; L_ok:
  0x0000028bc118759d:   	popq	%r10
  0x0000028bc118759f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11875a0:   	movq	0x10(%r11), %r11
  0x0000028bc11875a4:   	cmpq	%r11, %r10
  0x0000028bc11875a7:   	je	0x61
  0x0000028bc11875ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11875b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11875b5:   	je	0x53
  0x0000028bc11875bb:   	cmpl	$0x28, %eax
  0x0000028bc11875be:   	jne	0x2e
  0x0000028bc11875c4:   	movq	%r11, %rax
  0x0000028bc11875c7:   	pushq	%rcx
  0x0000028bc11875c8:   	pushq	%rdi
  0x0000028bc11875c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11875d3:   	incl	(%rcx)
  0x0000028bc11875d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11875d9:   	movl	(%rdi), %ecx
  0x0000028bc11875db:   	addq	$0x8, %rdi
  0x0000028bc11875df:   	testq	%rax, %rax
  0x0000028bc11875e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11875e5:   	popq	%rdi
  0x0000028bc11875e6:   	popq	%rcx
  0x0000028bc11875e7:   	jne	0x9
  0x0000028bc11875e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11875ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11875f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11875fc:   	andq	$-0x10, %rsp
  0x0000028bc1187600:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118760a:   	callq	*%r10
  0x0000028bc118760d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118760e:   	movl	0xc(%rdi), %eax
  0x0000028bc1187611:   	shrl	$0x18, %eax
  0x0000028bc1187614:   	andl	$0xf, %eax
  0x0000028bc1187617:   	cmpl	$0x7, %eax
  0x0000028bc118761a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1187620:   	movabsq	$0x28bdc114ce0, %rcx;   {external_word}
  0x0000028bc118762a:   	andq	$-0x10, %rsp
  0x0000028bc118762e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187638:   	callq	*%r10
  0x0000028bc118763b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118763c:   	movl	0x24(%rdi), %ebx
  0x0000028bc118763f:   	pushq	%r10
  0x0000028bc1187641:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118764b:   	cmpq	(%r10), %r12
  0x0000028bc118764e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187654:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118765e:   	andq	$-0x10, %rsp
  0x0000028bc1187662:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118766c:   	callq	*%r10
  0x0000028bc118766f:   	hlt
  0x0000028bc1187670:   	popq	%r10
  0x0000028bc1187672:   	shlq	$0x3, %rbx
  0x0000028bc1187676:   	movq	0x10(%rbx), %rbx
  0x0000028bc118767a:   	testq	%rbx, %rbx
  0x0000028bc118767d:   	je	0x3
  0x0000028bc1187683:   	jmpq	*0x58(%rbx)
  0x0000028bc1187686:   	jmp	-0x52016b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118768b:   	hlt
  0x0000028bc118768c:   	hlt
  0x0000028bc118768d:   	hlt
  0x0000028bc118768e:   	hlt
  0x0000028bc118768f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1933   33     n 0       java.lang.invoke.MethodHandle::invokeBasic(II)L (native)
 total in heap  [0x0000028bc1187710,0x0000028bc1187988] = 632
 relocation     [0x0000028bc1187870,0x0000028bc11878b8] = 72
 main code      [0x0000028bc11878c0,0x0000028bc1187983] = 195
 stub code      [0x0000028bc1187983,0x0000028bc1187988] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280a98} 'invokeBasic' '(II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11878c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11878c3:   	pushq	%r10
  0x0000028bc11878c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11878cf:   	cmpq	(%r10), %r12
  0x0000028bc11878d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11878d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11878e2:   	andq	$-0x10, %rsp
  0x0000028bc11878e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11878f0:   	callq	*%r10
  0x0000028bc11878f3:   	hlt
  0x0000028bc11878f4:   	popq	%r10
  0x0000028bc11878f6:   	shlq	$0x3, %rbx
  0x0000028bc11878fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11878fd:   	pushq	%r10
  0x0000028bc11878ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187909:   	cmpq	(%r10), %r12
  0x0000028bc118790c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187912:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118791c:   	andq	$-0x10, %rsp
  0x0000028bc1187920:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118792a:   	callq	*%r10
  0x0000028bc118792d:   	hlt
  0x0000028bc118792e:   	popq	%r10
  0x0000028bc1187930:   	shlq	$0x3, %rbx
  0x0000028bc1187934:   	movl	0x24(%rbx), %ebx
  0x0000028bc1187937:   	pushq	%r10
  0x0000028bc1187939:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187943:   	cmpq	(%r10), %r12
  0x0000028bc1187946:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118794c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1187956:   	andq	$-0x10, %rsp
  0x0000028bc118795a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187964:   	callq	*%r10
  0x0000028bc1187967:   	hlt
  0x0000028bc1187968:   	popq	%r10
  0x0000028bc118796a:   	shlq	$0x3, %rbx
  0x0000028bc118796e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1187972:   	testq	%rbx, %rbx
  0x0000028bc1187975:   	je	0x3
  0x0000028bc118797b:   	jmpq	*0x58(%rbx)
  0x0000028bc118797e:   	jmp	-0x520463           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1187983:   	hlt
  0x0000028bc1187984:   	hlt
  0x0000028bc1187985:   	hlt
  0x0000028bc1187986:   	hlt
  0x0000028bc1187987:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1935   33     n 0       java.lang.invoke.MethodHandle::invokeBasic(II)L (native)
 total in heap  [0x0000028bc1187710,0x0000028bc1187988] = 632
 relocation     [0x0000028bc1187870,0x0000028bc11878b8] = 72
 main code      [0x0000028bc11878c0,0x0000028bc1187983] = 195
 stub code      [0x0000028bc1187983,0x0000028bc1187988] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280a98} 'invokeBasic' '(II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11878c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11878c3:   	pushq	%r10
  0x0000028bc11878c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11878cf:   	cmpq	(%r10), %r12
  0x0000028bc11878d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11878d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11878e2:   	andq	$-0x10, %rsp
  0x0000028bc11878e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11878f0:   	callq	*%r10
  0x0000028bc11878f3:   	hlt
  0x0000028bc11878f4:   	popq	%r10
  0x0000028bc11878f6:   	shlq	$0x3, %rbx
  0x0000028bc11878fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11878fd:   	pushq	%r10
  0x0000028bc11878ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187909:   	cmpq	(%r10), %r12
  0x0000028bc118790c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187912:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118791c:   	andq	$-0x10, %rsp
  0x0000028bc1187920:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118792a:   	callq	*%r10
  0x0000028bc118792d:   	hlt
  0x0000028bc118792e:   	popq	%r10
  0x0000028bc1187930:   	shlq	$0x3, %rbx
  0x0000028bc1187934:   	movl	0x24(%rbx), %ebx
  0x0000028bc1187937:   	pushq	%r10
  0x0000028bc1187939:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187943:   	cmpq	(%r10), %r12
  0x0000028bc1187946:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118794c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1187956:   	andq	$-0x10, %rsp
  0x0000028bc118795a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187964:   	callq	*%r10
  0x0000028bc1187967:   	hlt
  0x0000028bc1187968:   	popq	%r10
  0x0000028bc118796a:   	shlq	$0x3, %rbx
  0x0000028bc118796e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1187972:   	testq	%rbx, %rbx
  0x0000028bc1187975:   	je	0x3
  0x0000028bc118797b:   	jmpq	*0x58(%rbx)
  0x0000028bc118797e:   	jmp	-0x520463           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1187983:   	hlt
  0x0000028bc1187984:   	hlt
  0x0000028bc1187985:   	hlt
  0x0000028bc1187986:   	hlt
  0x0000028bc1187987:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1937   34     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIIL)L (native)
 total in heap  [0x0000028bc1187a10,0x0000028bc1187e10] = 1024
 relocation     [0x0000028bc1187b70,0x0000028bc1187c00] = 144
 main code      [0x0000028bc1187c00,0x0000028bc1187e0b] = 523
 stub code      [0x0000028bc1187e0b,0x0000028bc1187e10] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280bd0} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1187c00:   	testq	%rdi, %rdi
  0x0000028bc1187c03:   	je	0x40
  0x0000028bc1187c09:   	pushq	%rdi
  0x0000028bc1187c0a:   	pushq	%r10
  0x0000028bc1187c0c:   	movl	0x8(%rdi), %edi
  0x0000028bc1187c0f:   	movabsq	$0x800000000, %r10
  0x0000028bc1187c19:   	addq	%r10, %rdi
  0x0000028bc1187c1c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1187c26:   	cmpq	(%r10), %rdi
  0x0000028bc1187c29:   	je	0x36
  0x0000028bc1187c2f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1187c33:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1187c3d:   	cmpq	(%r10), %rdi
  0x0000028bc1187c40:   	je	0x1f
  0x0000028bc1187c46:   	popq	%r10
  0x0000028bc1187c48:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1187c49:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1187c53:   	andq	$-0x10, %rsp
  0x0000028bc1187c57:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187c61:   	callq	*%r10
  0x0000028bc1187c64:   	hlt
 ;; L_ok:
  0x0000028bc1187c65:   	popq	%r10
  0x0000028bc1187c67:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1187c68:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1187c6b:   	movl	0x8(%rdx), %r10d
  0x0000028bc1187c6f:   	movabsq	$0x800000000, %r11
  0x0000028bc1187c79:   	addq	%r11, %r10
  0x0000028bc1187c7c:   	movl	0x18(%rdi), %r11d
  0x0000028bc1187c80:   	pushq	%r10
  0x0000028bc1187c82:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187c8c:   	cmpq	(%r10), %r12
  0x0000028bc1187c8f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187c95:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1187c9f:   	andq	$-0x10, %rsp
  0x0000028bc1187ca3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187cad:   	callq	*%r10
  0x0000028bc1187cb0:   	hlt
  0x0000028bc1187cb1:   	popq	%r10
  0x0000028bc1187cb3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1187cb7:   	testq	%r11, %r11
  0x0000028bc1187cba:   	je	0x41
  0x0000028bc1187cc0:   	pushq	%rdi
  0x0000028bc1187cc1:   	pushq	%r10
  0x0000028bc1187cc3:   	movl	0x8(%r11), %edi
  0x0000028bc1187cc7:   	movabsq	$0x800000000, %r10
  0x0000028bc1187cd1:   	addq	%r10, %rdi
  0x0000028bc1187cd4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1187cde:   	cmpq	(%r10), %rdi
  0x0000028bc1187ce1:   	je	0x36
  0x0000028bc1187ce7:   	movq	0x40(%rdi), %rdi
  0x0000028bc1187ceb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1187cf5:   	cmpq	(%r10), %rdi
  0x0000028bc1187cf8:   	je	0x1f
  0x0000028bc1187cfe:   	popq	%r10
  0x0000028bc1187d00:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1187d01:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1187d0b:   	andq	$-0x10, %rsp
  0x0000028bc1187d0f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187d19:   	callq	*%r10
  0x0000028bc1187d1c:   	hlt
 ;; L_ok:
  0x0000028bc1187d1d:   	popq	%r10
  0x0000028bc1187d1f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1187d20:   	movq	0x10(%r11), %r11
  0x0000028bc1187d24:   	cmpq	%r11, %r10
  0x0000028bc1187d27:   	je	0x61
  0x0000028bc1187d2d:   	movl	0x1c(%r11), %eax
  0x0000028bc1187d31:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1187d35:   	je	0x53
  0x0000028bc1187d3b:   	cmpl	$0x28, %eax
  0x0000028bc1187d3e:   	jne	0x2e
  0x0000028bc1187d44:   	movq	%r11, %rax
  0x0000028bc1187d47:   	pushq	%rcx
  0x0000028bc1187d48:   	pushq	%rdi
  0x0000028bc1187d49:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1187d53:   	incl	(%rcx)
  0x0000028bc1187d55:   	movq	0x30(%r10), %rdi
  0x0000028bc1187d59:   	movl	(%rdi), %ecx
  0x0000028bc1187d5b:   	addq	$0x8, %rdi
  0x0000028bc1187d5f:   	testq	%rax, %rax
  0x0000028bc1187d62:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1187d65:   	popq	%rdi
  0x0000028bc1187d66:   	popq	%rcx
  0x0000028bc1187d67:   	jne	0x9
  0x0000028bc1187d69:   	movq	%r11, 0x28(%r10)
  0x0000028bc1187d6d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1187d72:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1187d7c:   	andq	$-0x10, %rsp
  0x0000028bc1187d80:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187d8a:   	callq	*%r10
  0x0000028bc1187d8d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1187d8e:   	movl	0xc(%rdi), %eax
  0x0000028bc1187d91:   	shrl	$0x18, %eax
  0x0000028bc1187d94:   	andl	$0xf, %eax
  0x0000028bc1187d97:   	cmpl	$0x7, %eax
  0x0000028bc1187d9a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1187da0:   	movabsq	$0x28bdc114560, %rcx;   {external_word}
  0x0000028bc1187daa:   	andq	$-0x10, %rsp
  0x0000028bc1187dae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187db8:   	callq	*%r10
  0x0000028bc1187dbb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1187dbc:   	movl	0x24(%rdi), %ebx
  0x0000028bc1187dbf:   	pushq	%r10
  0x0000028bc1187dc1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187dcb:   	cmpq	(%r10), %r12
  0x0000028bc1187dce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187dd4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1187dde:   	andq	$-0x10, %rsp
  0x0000028bc1187de2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187dec:   	callq	*%r10
  0x0000028bc1187def:   	hlt
  0x0000028bc1187df0:   	popq	%r10
  0x0000028bc1187df2:   	shlq	$0x3, %rbx
  0x0000028bc1187df6:   	movq	0x10(%rbx), %rbx
  0x0000028bc1187dfa:   	testq	%rbx, %rbx
  0x0000028bc1187dfd:   	je	0x3
  0x0000028bc1187e03:   	jmpq	*0x58(%rbx)
  0x0000028bc1187e06:   	jmp	-0x5208eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1187e0b:   	hlt
  0x0000028bc1187e0c:   	hlt
  0x0000028bc1187e0d:   	hlt
  0x0000028bc1187e0e:   	hlt
  0x0000028bc1187e0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1942   34     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIIL)L (native)
 total in heap  [0x0000028bc1187a10,0x0000028bc1187e10] = 1024
 relocation     [0x0000028bc1187b70,0x0000028bc1187c00] = 144
 main code      [0x0000028bc1187c00,0x0000028bc1187e0b] = 523
 stub code      [0x0000028bc1187e0b,0x0000028bc1187e10] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280bd0} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1187c00:   	testq	%rdi, %rdi
  0x0000028bc1187c03:   	je	0x40
  0x0000028bc1187c09:   	pushq	%rdi
  0x0000028bc1187c0a:   	pushq	%r10
  0x0000028bc1187c0c:   	movl	0x8(%rdi), %edi
  0x0000028bc1187c0f:   	movabsq	$0x800000000, %r10
  0x0000028bc1187c19:   	addq	%r10, %rdi
  0x0000028bc1187c1c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1187c26:   	cmpq	(%r10), %rdi
  0x0000028bc1187c29:   	je	0x36
  0x0000028bc1187c2f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1187c33:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1187c3d:   	cmpq	(%r10), %rdi
  0x0000028bc1187c40:   	je	0x1f
  0x0000028bc1187c46:   	popq	%r10
  0x0000028bc1187c48:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1187c49:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1187c53:   	andq	$-0x10, %rsp
  0x0000028bc1187c57:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187c61:   	callq	*%r10
  0x0000028bc1187c64:   	hlt
 ;; L_ok:
  0x0000028bc1187c65:   	popq	%r10
  0x0000028bc1187c67:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1187c68:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1187c6b:   	movl	0x8(%rdx), %r10d
  0x0000028bc1187c6f:   	movabsq	$0x800000000, %r11
  0x0000028bc1187c79:   	addq	%r11, %r10
  0x0000028bc1187c7c:   	movl	0x18(%rdi), %r11d
  0x0000028bc1187c80:   	pushq	%r10
  0x0000028bc1187c82:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187c8c:   	cmpq	(%r10), %r12
  0x0000028bc1187c8f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187c95:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1187c9f:   	andq	$-0x10, %rsp
  0x0000028bc1187ca3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187cad:   	callq	*%r10
  0x0000028bc1187cb0:   	hlt
  0x0000028bc1187cb1:   	popq	%r10
  0x0000028bc1187cb3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1187cb7:   	testq	%r11, %r11
  0x0000028bc1187cba:   	je	0x41
  0x0000028bc1187cc0:   	pushq	%rdi
  0x0000028bc1187cc1:   	pushq	%r10
  0x0000028bc1187cc3:   	movl	0x8(%r11), %edi
  0x0000028bc1187cc7:   	movabsq	$0x800000000, %r10
  0x0000028bc1187cd1:   	addq	%r10, %rdi
  0x0000028bc1187cd4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1187cde:   	cmpq	(%r10), %rdi
  0x0000028bc1187ce1:   	je	0x36
  0x0000028bc1187ce7:   	movq	0x40(%rdi), %rdi
  0x0000028bc1187ceb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1187cf5:   	cmpq	(%r10), %rdi
  0x0000028bc1187cf8:   	je	0x1f
  0x0000028bc1187cfe:   	popq	%r10
  0x0000028bc1187d00:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1187d01:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1187d0b:   	andq	$-0x10, %rsp
  0x0000028bc1187d0f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187d19:   	callq	*%r10
  0x0000028bc1187d1c:   	hlt
 ;; L_ok:
  0x0000028bc1187d1d:   	popq	%r10
  0x0000028bc1187d1f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1187d20:   	movq	0x10(%r11), %r11
  0x0000028bc1187d24:   	cmpq	%r11, %r10
  0x0000028bc1187d27:   	je	0x61
  0x0000028bc1187d2d:   	movl	0x1c(%r11), %eax
  0x0000028bc1187d31:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1187d35:   	je	0x53
  0x0000028bc1187d3b:   	cmpl	$0x28, %eax
  0x0000028bc1187d3e:   	jne	0x2e
  0x0000028bc1187d44:   	movq	%r11, %rax
  0x0000028bc1187d47:   	pushq	%rcx
  0x0000028bc1187d48:   	pushq	%rdi
  0x0000028bc1187d49:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1187d53:   	incl	(%rcx)
  0x0000028bc1187d55:   	movq	0x30(%r10), %rdi
  0x0000028bc1187d59:   	movl	(%rdi), %ecx
  0x0000028bc1187d5b:   	addq	$0x8, %rdi
  0x0000028bc1187d5f:   	testq	%rax, %rax
  0x0000028bc1187d62:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1187d65:   	popq	%rdi
  0x0000028bc1187d66:   	popq	%rcx
  0x0000028bc1187d67:   	jne	0x9
  0x0000028bc1187d69:   	movq	%r11, 0x28(%r10)
  0x0000028bc1187d6d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1187d72:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1187d7c:   	andq	$-0x10, %rsp
  0x0000028bc1187d80:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187d8a:   	callq	*%r10
  0x0000028bc1187d8d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1187d8e:   	movl	0xc(%rdi), %eax
  0x0000028bc1187d91:   	shrl	$0x18, %eax
  0x0000028bc1187d94:   	andl	$0xf, %eax
  0x0000028bc1187d97:   	cmpl	$0x7, %eax
  0x0000028bc1187d9a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1187da0:   	movabsq	$0x28bdc114560, %rcx;   {external_word}
  0x0000028bc1187daa:   	andq	$-0x10, %rsp
  0x0000028bc1187dae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187db8:   	callq	*%r10
  0x0000028bc1187dbb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1187dbc:   	movl	0x24(%rdi), %ebx
  0x0000028bc1187dbf:   	pushq	%r10
  0x0000028bc1187dc1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1187dcb:   	cmpq	(%r10), %r12
  0x0000028bc1187dce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1187dd4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1187dde:   	andq	$-0x10, %rsp
  0x0000028bc1187de2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1187dec:   	callq	*%r10
  0x0000028bc1187def:   	hlt
  0x0000028bc1187df0:   	popq	%r10
  0x0000028bc1187df2:   	shlq	$0x3, %rbx
  0x0000028bc1187df6:   	movq	0x10(%rbx), %rbx
  0x0000028bc1187dfa:   	testq	%rbx, %rbx
  0x0000028bc1187dfd:   	je	0x3
  0x0000028bc1187e03:   	jmpq	*0x58(%rbx)
  0x0000028bc1187e06:   	jmp	-0x5208eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1187e0b:   	hlt
  0x0000028bc1187e0c:   	hlt
  0x0000028bc1187e0d:   	hlt
  0x0000028bc1187e0e:   	hlt
  0x0000028bc1187e0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    1950   35     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLIL)I (native)
 total in heap  [0x0000028bc1187e90,0x0000028bc1188128] = 664
 relocation     [0x0000028bc1187ff0,0x0000028bc1188038] = 72
 main code      [0x0000028bc1188040,0x0000028bc1188125] = 229
 stub code      [0x0000028bc1188125,0x0000028bc1188128] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280fb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188040:   	testq	%rdi, %rdi
  0x0000028bc1188043:   	je	0x40
  0x0000028bc1188049:   	pushq	%rdi
  0x0000028bc118804a:   	pushq	%r10
  0x0000028bc118804c:   	movl	0x8(%rdi), %edi
  0x0000028bc118804f:   	movabsq	$0x800000000, %r10
  0x0000028bc1188059:   	addq	%r10, %rdi
  0x0000028bc118805c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188066:   	cmpq	(%r10), %rdi
  0x0000028bc1188069:   	je	0x36
  0x0000028bc118806f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188073:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118807d:   	cmpq	(%r10), %rdi
  0x0000028bc1188080:   	je	0x1f
  0x0000028bc1188086:   	popq	%r10
  0x0000028bc1188088:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1188089:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188093:   	andq	$-0x10, %rsp
  0x0000028bc1188097:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11880a1:   	callq	*%r10
  0x0000028bc11880a4:   	hlt
 ;; L_ok:
  0x0000028bc11880a5:   	popq	%r10
  0x0000028bc11880a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11880a8:   	movl	0xc(%rdi), %eax
  0x0000028bc11880ab:   	shrl	$0x18, %eax
  0x0000028bc11880ae:   	andl	$0xf, %eax
  0x0000028bc11880b1:   	cmpl	$0x6, %eax
  0x0000028bc11880b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11880ba:   	movabsq	$0x28bdc114d60, %rcx;   {external_word}
  0x0000028bc11880c4:   	andq	$-0x10, %rsp
  0x0000028bc11880c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11880d2:   	callq	*%r10
  0x0000028bc11880d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11880d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc11880d9:   	pushq	%r10
  0x0000028bc11880db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11880e5:   	cmpq	(%r10), %r12
  0x0000028bc11880e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11880ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11880f8:   	andq	$-0x10, %rsp
  0x0000028bc11880fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188106:   	callq	*%r10
  0x0000028bc1188109:   	hlt
  0x0000028bc118810a:   	popq	%r10
  0x0000028bc118810c:   	shlq	$0x3, %rbx
  0x0000028bc1188110:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188114:   	testq	%rbx, %rbx
  0x0000028bc1188117:   	je	0x3
  0x0000028bc118811d:   	jmpq	*0x58(%rbx)
  0x0000028bc1188120:   	jmp	-0x520c05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1188125:   	hlt
  0x0000028bc1188126:   	hlt
  0x0000028bc1188127:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    1952   35     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLIL)I (native)
 total in heap  [0x0000028bc1187e90,0x0000028bc1188128] = 664
 relocation     [0x0000028bc1187ff0,0x0000028bc1188038] = 72
 main code      [0x0000028bc1188040,0x0000028bc1188125] = 229
 stub code      [0x0000028bc1188125,0x0000028bc1188128] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8280fb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188040:   	testq	%rdi, %rdi
  0x0000028bc1188043:   	je	0x40
  0x0000028bc1188049:   	pushq	%rdi
  0x0000028bc118804a:   	pushq	%r10
  0x0000028bc118804c:   	movl	0x8(%rdi), %edi
  0x0000028bc118804f:   	movabsq	$0x800000000, %r10
  0x0000028bc1188059:   	addq	%r10, %rdi
  0x0000028bc118805c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188066:   	cmpq	(%r10), %rdi
  0x0000028bc1188069:   	je	0x36
  0x0000028bc118806f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188073:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118807d:   	cmpq	(%r10), %rdi
  0x0000028bc1188080:   	je	0x1f
  0x0000028bc1188086:   	popq	%r10
  0x0000028bc1188088:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1188089:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188093:   	andq	$-0x10, %rsp
  0x0000028bc1188097:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11880a1:   	callq	*%r10
  0x0000028bc11880a4:   	hlt
 ;; L_ok:
  0x0000028bc11880a5:   	popq	%r10
  0x0000028bc11880a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11880a8:   	movl	0xc(%rdi), %eax
  0x0000028bc11880ab:   	shrl	$0x18, %eax
  0x0000028bc11880ae:   	andl	$0xf, %eax
  0x0000028bc11880b1:   	cmpl	$0x6, %eax
  0x0000028bc11880b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11880ba:   	movabsq	$0x28bdc114d60, %rcx;   {external_word}
  0x0000028bc11880c4:   	andq	$-0x10, %rsp
  0x0000028bc11880c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11880d2:   	callq	*%r10
  0x0000028bc11880d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11880d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc11880d9:   	pushq	%r10
  0x0000028bc11880db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11880e5:   	cmpq	(%r10), %r12
  0x0000028bc11880e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11880ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11880f8:   	andq	$-0x10, %rsp
  0x0000028bc11880fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188106:   	callq	*%r10
  0x0000028bc1188109:   	hlt
  0x0000028bc118810a:   	popq	%r10
  0x0000028bc118810c:   	shlq	$0x3, %rbx
  0x0000028bc1188110:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188114:   	testq	%rbx, %rbx
  0x0000028bc1188117:   	je	0x3
  0x0000028bc118811d:   	jmpq	*0x58(%rbx)
  0x0000028bc1188120:   	jmp	-0x520c05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1188125:   	hlt
  0x0000028bc1188126:   	hlt
  0x0000028bc1188127:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2001   36     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)V (native)
 total in heap  [0x0000028bc1188190,0x0000028bc1188428] = 664
 relocation     [0x0000028bc11882f0,0x0000028bc1188338] = 72
 main code      [0x0000028bc1188340,0x0000028bc1188428] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd82af850} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188340:   	testq	%r8, %r8
  0x0000028bc1188343:   	je	0x41
  0x0000028bc1188349:   	pushq	%rdi
  0x0000028bc118834a:   	pushq	%r10
  0x0000028bc118834c:   	movl	0x8(%r8), %edi
  0x0000028bc1188350:   	movabsq	$0x800000000, %r10
  0x0000028bc118835a:   	addq	%r10, %rdi
  0x0000028bc118835d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188367:   	cmpq	(%r10), %rdi
  0x0000028bc118836a:   	je	0x36
  0x0000028bc1188370:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188374:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118837e:   	cmpq	(%r10), %rdi
  0x0000028bc1188381:   	je	0x1f
  0x0000028bc1188387:   	popq	%r10
  0x0000028bc1188389:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118838a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188394:   	andq	$-0x10, %rsp
  0x0000028bc1188398:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11883a2:   	callq	*%r10
  0x0000028bc11883a5:   	hlt
 ;; L_ok:
  0x0000028bc11883a6:   	popq	%r10
  0x0000028bc11883a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11883a9:   	movl	0xc(%r8), %eax
  0x0000028bc11883ad:   	shrl	$0x18, %eax
  0x0000028bc11883b0:   	andl	$0xf, %eax
  0x0000028bc11883b3:   	cmpl	$0x6, %eax
  0x0000028bc11883b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11883bc:   	movabsq	$0x28bdc115360, %rcx;   {external_word}
  0x0000028bc11883c6:   	andq	$-0x10, %rsp
  0x0000028bc11883ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11883d4:   	callq	*%r10
  0x0000028bc11883d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11883d8:   	movl	0x24(%r8), %ebx
  0x0000028bc11883dc:   	pushq	%r10
  0x0000028bc11883de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11883e8:   	cmpq	(%r10), %r12
  0x0000028bc11883eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11883f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11883fb:   	andq	$-0x10, %rsp
  0x0000028bc11883ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188409:   	callq	*%r10
  0x0000028bc118840c:   	hlt
  0x0000028bc118840d:   	popq	%r10
  0x0000028bc118840f:   	shlq	$0x3, %rbx
  0x0000028bc1188413:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188417:   	testq	%rbx, %rbx
  0x0000028bc118841a:   	je	0x3
  0x0000028bc1188420:   	jmpq	*0x58(%rbx)
  0x0000028bc1188423:   	jmp	-0x520f08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2003   36     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)V (native)
 total in heap  [0x0000028bc1188190,0x0000028bc1188428] = 664
 relocation     [0x0000028bc11882f0,0x0000028bc1188338] = 72
 main code      [0x0000028bc1188340,0x0000028bc1188428] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd82af850} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188340:   	testq	%r8, %r8
  0x0000028bc1188343:   	je	0x41
  0x0000028bc1188349:   	pushq	%rdi
  0x0000028bc118834a:   	pushq	%r10
  0x0000028bc118834c:   	movl	0x8(%r8), %edi
  0x0000028bc1188350:   	movabsq	$0x800000000, %r10
  0x0000028bc118835a:   	addq	%r10, %rdi
  0x0000028bc118835d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188367:   	cmpq	(%r10), %rdi
  0x0000028bc118836a:   	je	0x36
  0x0000028bc1188370:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188374:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118837e:   	cmpq	(%r10), %rdi
  0x0000028bc1188381:   	je	0x1f
  0x0000028bc1188387:   	popq	%r10
  0x0000028bc1188389:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118838a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188394:   	andq	$-0x10, %rsp
  0x0000028bc1188398:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11883a2:   	callq	*%r10
  0x0000028bc11883a5:   	hlt
 ;; L_ok:
  0x0000028bc11883a6:   	popq	%r10
  0x0000028bc11883a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11883a9:   	movl	0xc(%r8), %eax
  0x0000028bc11883ad:   	shrl	$0x18, %eax
  0x0000028bc11883b0:   	andl	$0xf, %eax
  0x0000028bc11883b3:   	cmpl	$0x6, %eax
  0x0000028bc11883b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11883bc:   	movabsq	$0x28bdc115360, %rcx;   {external_word}
  0x0000028bc11883c6:   	andq	$-0x10, %rsp
  0x0000028bc11883ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11883d4:   	callq	*%r10
  0x0000028bc11883d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11883d8:   	movl	0x24(%r8), %ebx
  0x0000028bc11883dc:   	pushq	%r10
  0x0000028bc11883de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11883e8:   	cmpq	(%r10), %r12
  0x0000028bc11883eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11883f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11883fb:   	andq	$-0x10, %rsp
  0x0000028bc11883ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188409:   	callq	*%r10
  0x0000028bc118840c:   	hlt
  0x0000028bc118840d:   	popq	%r10
  0x0000028bc118840f:   	shlq	$0x3, %rbx
  0x0000028bc1188413:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188417:   	testq	%rbx, %rbx
  0x0000028bc118841a:   	je	0x3
  0x0000028bc1188420:   	jmpq	*0x58(%rbx)
  0x0000028bc1188423:   	jmp	-0x520f08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2007   37     n 0       java.lang.invoke.MethodHandle::linkToStatic(JJL)L (native)
 total in heap  [0x0000028bc1188490,0x0000028bc1188728] = 664
 relocation     [0x0000028bc11885f0,0x0000028bc1188638] = 72
 main code      [0x0000028bc1188640,0x0000028bc1188728] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd82af988} 'linkToStatic' '(JJLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188640:   	testq	%r9, %r9
  0x0000028bc1188643:   	je	0x41
  0x0000028bc1188649:   	pushq	%rdi
  0x0000028bc118864a:   	pushq	%r10
  0x0000028bc118864c:   	movl	0x8(%r9), %edi
  0x0000028bc1188650:   	movabsq	$0x800000000, %r10
  0x0000028bc118865a:   	addq	%r10, %rdi
  0x0000028bc118865d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188667:   	cmpq	(%r10), %rdi
  0x0000028bc118866a:   	je	0x36
  0x0000028bc1188670:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188674:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118867e:   	cmpq	(%r10), %rdi
  0x0000028bc1188681:   	je	0x1f
  0x0000028bc1188687:   	popq	%r10
  0x0000028bc1188689:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118868a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188694:   	andq	$-0x10, %rsp
  0x0000028bc1188698:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11886a2:   	callq	*%r10
  0x0000028bc11886a5:   	hlt
 ;; L_ok:
  0x0000028bc11886a6:   	popq	%r10
  0x0000028bc11886a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11886a9:   	movl	0xc(%r9), %eax
  0x0000028bc11886ad:   	shrl	$0x18, %eax
  0x0000028bc11886b0:   	andl	$0xf, %eax
  0x0000028bc11886b3:   	cmpl	$0x6, %eax
  0x0000028bc11886b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11886bc:   	movabsq	$0x28bdc1150e0, %rcx;   {external_word}
  0x0000028bc11886c6:   	andq	$-0x10, %rsp
  0x0000028bc11886ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11886d4:   	callq	*%r10
  0x0000028bc11886d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11886d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11886dc:   	pushq	%r10
  0x0000028bc11886de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11886e8:   	cmpq	(%r10), %r12
  0x0000028bc11886eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11886f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11886fb:   	andq	$-0x10, %rsp
  0x0000028bc11886ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188709:   	callq	*%r10
  0x0000028bc118870c:   	hlt
  0x0000028bc118870d:   	popq	%r10
  0x0000028bc118870f:   	shlq	$0x3, %rbx
  0x0000028bc1188713:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188717:   	testq	%rbx, %rbx
  0x0000028bc118871a:   	je	0x3
  0x0000028bc1188720:   	jmpq	*0x58(%rbx)
  0x0000028bc1188723:   	jmp	-0x521208           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2009   37     n 0       java.lang.invoke.MethodHandle::linkToStatic(JJL)L (native)
 total in heap  [0x0000028bc1188490,0x0000028bc1188728] = 664
 relocation     [0x0000028bc11885f0,0x0000028bc1188638] = 72
 main code      [0x0000028bc1188640,0x0000028bc1188728] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd82af988} 'linkToStatic' '(JJLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188640:   	testq	%r9, %r9
  0x0000028bc1188643:   	je	0x41
  0x0000028bc1188649:   	pushq	%rdi
  0x0000028bc118864a:   	pushq	%r10
  0x0000028bc118864c:   	movl	0x8(%r9), %edi
  0x0000028bc1188650:   	movabsq	$0x800000000, %r10
  0x0000028bc118865a:   	addq	%r10, %rdi
  0x0000028bc118865d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188667:   	cmpq	(%r10), %rdi
  0x0000028bc118866a:   	je	0x36
  0x0000028bc1188670:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188674:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118867e:   	cmpq	(%r10), %rdi
  0x0000028bc1188681:   	je	0x1f
  0x0000028bc1188687:   	popq	%r10
  0x0000028bc1188689:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118868a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188694:   	andq	$-0x10, %rsp
  0x0000028bc1188698:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11886a2:   	callq	*%r10
  0x0000028bc11886a5:   	hlt
 ;; L_ok:
  0x0000028bc11886a6:   	popq	%r10
  0x0000028bc11886a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11886a9:   	movl	0xc(%r9), %eax
  0x0000028bc11886ad:   	shrl	$0x18, %eax
  0x0000028bc11886b0:   	andl	$0xf, %eax
  0x0000028bc11886b3:   	cmpl	$0x6, %eax
  0x0000028bc11886b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11886bc:   	movabsq	$0x28bdc1150e0, %rcx;   {external_word}
  0x0000028bc11886c6:   	andq	$-0x10, %rsp
  0x0000028bc11886ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11886d4:   	callq	*%r10
  0x0000028bc11886d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11886d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11886dc:   	pushq	%r10
  0x0000028bc11886de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11886e8:   	cmpq	(%r10), %r12
  0x0000028bc11886eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11886f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11886fb:   	andq	$-0x10, %rsp
  0x0000028bc11886ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188709:   	callq	*%r10
  0x0000028bc118870c:   	hlt
  0x0000028bc118870d:   	popq	%r10
  0x0000028bc118870f:   	shlq	$0x3, %rbx
  0x0000028bc1188713:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188717:   	testq	%rbx, %rbx
  0x0000028bc118871a:   	je	0x3
  0x0000028bc1188720:   	jmpq	*0x58(%rbx)
  0x0000028bc1188723:   	jmp	-0x521208           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2117   38     n 0       java.lang.invoke.MethodHandle::linkToInterface(LL)J (native)
 total in heap  [0x0000028bc1188790,0x0000028bc1188b48] = 952
 relocation     [0x0000028bc11888f0,0x0000028bc1188968] = 120
 main code      [0x0000028bc1188980,0x0000028bc1188b47] = 455
 stub code      [0x0000028bc1188b47,0x0000028bc1188b48] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8383ad0} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188980:   	testq	%r8, %r8
  0x0000028bc1188983:   	je	0x41
  0x0000028bc1188989:   	pushq	%rdi
  0x0000028bc118898a:   	pushq	%r10
  0x0000028bc118898c:   	movl	0x8(%r8), %edi
  0x0000028bc1188990:   	movabsq	$0x800000000, %r10
  0x0000028bc118899a:   	addq	%r10, %rdi
  0x0000028bc118899d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11889a7:   	cmpq	(%r10), %rdi
  0x0000028bc11889aa:   	je	0x36
  0x0000028bc11889b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11889b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11889be:   	cmpq	(%r10), %rdi
  0x0000028bc11889c1:   	je	0x1f
  0x0000028bc11889c7:   	popq	%r10
  0x0000028bc11889c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11889ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11889d4:   	andq	$-0x10, %rsp
  0x0000028bc11889d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11889e2:   	callq	*%r10
  0x0000028bc11889e5:   	hlt
 ;; L_ok:
  0x0000028bc11889e6:   	popq	%r10
  0x0000028bc11889e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11889e9:   	movl	0x8(%rdx), %r10d
  0x0000028bc11889ed:   	movabsq	$0x800000000, %r11
  0x0000028bc11889f7:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc11889fa:   	movl	0xc(%r8), %eax
  0x0000028bc11889fe:   	shrl	$0x18, %eax
  0x0000028bc1188a01:   	andl	$0xf, %eax
  0x0000028bc1188a04:   	cmpl	$0x9, %eax
  0x0000028bc1188a07:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc1188a0d:   	movabsq	$0x28bdc1151e0, %rcx;   {external_word}
  0x0000028bc1188a17:   	andq	$-0x10, %rsp
  0x0000028bc1188a1b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188a25:   	callq	*%r10
  0x0000028bc1188a28:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1188a29:   	movl	0x18(%r8), %eax
  0x0000028bc1188a2d:   	pushq	%r10
  0x0000028bc1188a2f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1188a39:   	cmpq	(%r10), %r12
  0x0000028bc1188a3c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1188a42:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1188a4c:   	andq	$-0x10, %rsp
  0x0000028bc1188a50:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188a5a:   	callq	*%r10
  0x0000028bc1188a5d:   	hlt
  0x0000028bc1188a5e:   	popq	%r10
  0x0000028bc1188a60:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc1188a64:   	testq	%rax, %rax
  0x0000028bc1188a67:   	je	0x40
  0x0000028bc1188a6d:   	pushq	%rdi
  0x0000028bc1188a6e:   	pushq	%r10
  0x0000028bc1188a70:   	movl	0x8(%rax), %edi
  0x0000028bc1188a73:   	movabsq	$0x800000000, %r10
  0x0000028bc1188a7d:   	addq	%r10, %rdi
  0x0000028bc1188a80:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1188a8a:   	cmpq	(%r10), %rdi
  0x0000028bc1188a8d:   	je	0x36
  0x0000028bc1188a93:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188a97:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1188aa1:   	cmpq	(%r10), %rdi
  0x0000028bc1188aa4:   	je	0x1f
  0x0000028bc1188aaa:   	popq	%r10
  0x0000028bc1188aac:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1188aad:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1188ab7:   	andq	$-0x10, %rsp
  0x0000028bc1188abb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188ac5:   	callq	*%r10
  0x0000028bc1188ac8:   	hlt
 ;; L_ok:
  0x0000028bc1188ac9:   	popq	%r10
  0x0000028bc1188acb:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1188acc:   	movq	0x10(%rax), %rax
  0x0000028bc1188ad0:   	movq	0x10(%r8), %rbx
  0x0000028bc1188ad4:   	cmpl	$0x0, %ebx
  0x0000028bc1188ad7:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc1188add:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1188ae7:   	andq	$-0x10, %rsp
  0x0000028bc1188aeb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188af5:   	callq	*%r10
  0x0000028bc1188af8:   	hlt
  0x0000028bc1188af9:   	movl	0xa8(%r10), %r11d
  0x0000028bc1188b00:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1188b08:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc1188b0c:   	movq	(%r11), %rbx
  0x0000028bc1188b0f:   	cmpq	%rbx, %rax
  0x0000028bc1188b12:   	je	0x15
  0x0000028bc1188b14:   	testq	%rbx, %rbx
  0x0000028bc1188b17:   	je	0x25
  0x0000028bc1188b1d:   	addq	$0x10, %r11
  0x0000028bc1188b21:   	movq	(%r11), %rbx
  0x0000028bc1188b24:   	cmpq	%rbx, %rax
  0x0000028bc1188b27:   	jne	-0x15
  0x0000028bc1188b29:   	movl	0x8(%r11), %r11d
  0x0000028bc1188b2d:   	movq	(%r10,%r11), %rbx
  0x0000028bc1188b31:   	testq	%rbx, %rbx
  0x0000028bc1188b34:   	je	0x3
  0x0000028bc1188b3a:   	jmpq	*0x58(%rbx)
  0x0000028bc1188b3d:   	jmp	-0x521622           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc1188b42:   	jmp	-0x521927           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc1188b47:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2120   38     n 0       java.lang.invoke.MethodHandle::linkToInterface(LL)J (native)
 total in heap  [0x0000028bc1188790,0x0000028bc1188b48] = 952
 relocation     [0x0000028bc11888f0,0x0000028bc1188968] = 120
 main code      [0x0000028bc1188980,0x0000028bc1188b47] = 455
 stub code      [0x0000028bc1188b47,0x0000028bc1188b48] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8383ad0} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188980:   	testq	%r8, %r8
  0x0000028bc1188983:   	je	0x41
  0x0000028bc1188989:   	pushq	%rdi
  0x0000028bc118898a:   	pushq	%r10
  0x0000028bc118898c:   	movl	0x8(%r8), %edi
  0x0000028bc1188990:   	movabsq	$0x800000000, %r10
  0x0000028bc118899a:   	addq	%r10, %rdi
  0x0000028bc118899d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11889a7:   	cmpq	(%r10), %rdi
  0x0000028bc11889aa:   	je	0x36
  0x0000028bc11889b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11889b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11889be:   	cmpq	(%r10), %rdi
  0x0000028bc11889c1:   	je	0x1f
  0x0000028bc11889c7:   	popq	%r10
  0x0000028bc11889c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11889ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11889d4:   	andq	$-0x10, %rsp
  0x0000028bc11889d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11889e2:   	callq	*%r10
  0x0000028bc11889e5:   	hlt
 ;; L_ok:
  0x0000028bc11889e6:   	popq	%r10
  0x0000028bc11889e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11889e9:   	movl	0x8(%rdx), %r10d
  0x0000028bc11889ed:   	movabsq	$0x800000000, %r11
  0x0000028bc11889f7:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc11889fa:   	movl	0xc(%r8), %eax
  0x0000028bc11889fe:   	shrl	$0x18, %eax
  0x0000028bc1188a01:   	andl	$0xf, %eax
  0x0000028bc1188a04:   	cmpl	$0x9, %eax
  0x0000028bc1188a07:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc1188a0d:   	movabsq	$0x28bdc1151e0, %rcx;   {external_word}
  0x0000028bc1188a17:   	andq	$-0x10, %rsp
  0x0000028bc1188a1b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188a25:   	callq	*%r10
  0x0000028bc1188a28:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1188a29:   	movl	0x18(%r8), %eax
  0x0000028bc1188a2d:   	pushq	%r10
  0x0000028bc1188a2f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1188a39:   	cmpq	(%r10), %r12
  0x0000028bc1188a3c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1188a42:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1188a4c:   	andq	$-0x10, %rsp
  0x0000028bc1188a50:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188a5a:   	callq	*%r10
  0x0000028bc1188a5d:   	hlt
  0x0000028bc1188a5e:   	popq	%r10
  0x0000028bc1188a60:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc1188a64:   	testq	%rax, %rax
  0x0000028bc1188a67:   	je	0x40
  0x0000028bc1188a6d:   	pushq	%rdi
  0x0000028bc1188a6e:   	pushq	%r10
  0x0000028bc1188a70:   	movl	0x8(%rax), %edi
  0x0000028bc1188a73:   	movabsq	$0x800000000, %r10
  0x0000028bc1188a7d:   	addq	%r10, %rdi
  0x0000028bc1188a80:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1188a8a:   	cmpq	(%r10), %rdi
  0x0000028bc1188a8d:   	je	0x36
  0x0000028bc1188a93:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188a97:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1188aa1:   	cmpq	(%r10), %rdi
  0x0000028bc1188aa4:   	je	0x1f
  0x0000028bc1188aaa:   	popq	%r10
  0x0000028bc1188aac:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1188aad:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1188ab7:   	andq	$-0x10, %rsp
  0x0000028bc1188abb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188ac5:   	callq	*%r10
  0x0000028bc1188ac8:   	hlt
 ;; L_ok:
  0x0000028bc1188ac9:   	popq	%r10
  0x0000028bc1188acb:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1188acc:   	movq	0x10(%rax), %rax
  0x0000028bc1188ad0:   	movq	0x10(%r8), %rbx
  0x0000028bc1188ad4:   	cmpl	$0x0, %ebx
  0x0000028bc1188ad7:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc1188add:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc1188ae7:   	andq	$-0x10, %rsp
  0x0000028bc1188aeb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188af5:   	callq	*%r10
  0x0000028bc1188af8:   	hlt
  0x0000028bc1188af9:   	movl	0xa8(%r10), %r11d
  0x0000028bc1188b00:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc1188b08:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc1188b0c:   	movq	(%r11), %rbx
  0x0000028bc1188b0f:   	cmpq	%rbx, %rax
  0x0000028bc1188b12:   	je	0x15
  0x0000028bc1188b14:   	testq	%rbx, %rbx
  0x0000028bc1188b17:   	je	0x25
  0x0000028bc1188b1d:   	addq	$0x10, %r11
  0x0000028bc1188b21:   	movq	(%r11), %rbx
  0x0000028bc1188b24:   	cmpq	%rbx, %rax
  0x0000028bc1188b27:   	jne	-0x15
  0x0000028bc1188b29:   	movl	0x8(%r11), %r11d
  0x0000028bc1188b2d:   	movq	(%r10,%r11), %rbx
  0x0000028bc1188b31:   	testq	%rbx, %rbx
  0x0000028bc1188b34:   	je	0x3
  0x0000028bc1188b3a:   	jmpq	*0x58(%rbx)
  0x0000028bc1188b3d:   	jmp	-0x521622           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc1188b42:   	jmp	-0x521927           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc1188b47:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2129   39     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)L (native)
 total in heap  [0x0000028bc1188b90,0x0000028bc1188e28] = 664
 relocation     [0x0000028bc1188cf0,0x0000028bc1188d38] = 72
 main code      [0x0000028bc1188d40,0x0000028bc1188e28] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8384af8} 'linkToStatic' '(JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188d40:   	testq	%r8, %r8
  0x0000028bc1188d43:   	je	0x41
  0x0000028bc1188d49:   	pushq	%rdi
  0x0000028bc1188d4a:   	pushq	%r10
  0x0000028bc1188d4c:   	movl	0x8(%r8), %edi
  0x0000028bc1188d50:   	movabsq	$0x800000000, %r10
  0x0000028bc1188d5a:   	addq	%r10, %rdi
  0x0000028bc1188d5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188d67:   	cmpq	(%r10), %rdi
  0x0000028bc1188d6a:   	je	0x36
  0x0000028bc1188d70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188d74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188d7e:   	cmpq	(%r10), %rdi
  0x0000028bc1188d81:   	je	0x1f
  0x0000028bc1188d87:   	popq	%r10
  0x0000028bc1188d89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1188d8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188d94:   	andq	$-0x10, %rsp
  0x0000028bc1188d98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188da2:   	callq	*%r10
  0x0000028bc1188da5:   	hlt
 ;; L_ok:
  0x0000028bc1188da6:   	popq	%r10
  0x0000028bc1188da8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1188da9:   	movl	0xc(%r8), %eax
  0x0000028bc1188dad:   	shrl	$0x18, %eax
  0x0000028bc1188db0:   	andl	$0xf, %eax
  0x0000028bc1188db3:   	cmpl	$0x6, %eax
  0x0000028bc1188db6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1188dbc:   	movabsq	$0x28bdc114160, %rcx;   {external_word}
  0x0000028bc1188dc6:   	andq	$-0x10, %rsp
  0x0000028bc1188dca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188dd4:   	callq	*%r10
  0x0000028bc1188dd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1188dd8:   	movl	0x24(%r8), %ebx
  0x0000028bc1188ddc:   	pushq	%r10
  0x0000028bc1188dde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1188de8:   	cmpq	(%r10), %r12
  0x0000028bc1188deb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1188df1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1188dfb:   	andq	$-0x10, %rsp
  0x0000028bc1188dff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188e09:   	callq	*%r10
  0x0000028bc1188e0c:   	hlt
  0x0000028bc1188e0d:   	popq	%r10
  0x0000028bc1188e0f:   	shlq	$0x3, %rbx
  0x0000028bc1188e13:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188e17:   	testq	%rbx, %rbx
  0x0000028bc1188e1a:   	je	0x3
  0x0000028bc1188e20:   	jmpq	*0x58(%rbx)
  0x0000028bc1188e23:   	jmp	-0x521908           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2132   39     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)L (native)
 total in heap  [0x0000028bc1188b90,0x0000028bc1188e28] = 664
 relocation     [0x0000028bc1188cf0,0x0000028bc1188d38] = 72
 main code      [0x0000028bc1188d40,0x0000028bc1188e28] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8384af8} 'linkToStatic' '(JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1188d40:   	testq	%r8, %r8
  0x0000028bc1188d43:   	je	0x41
  0x0000028bc1188d49:   	pushq	%rdi
  0x0000028bc1188d4a:   	pushq	%r10
  0x0000028bc1188d4c:   	movl	0x8(%r8), %edi
  0x0000028bc1188d50:   	movabsq	$0x800000000, %r10
  0x0000028bc1188d5a:   	addq	%r10, %rdi
  0x0000028bc1188d5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188d67:   	cmpq	(%r10), %rdi
  0x0000028bc1188d6a:   	je	0x36
  0x0000028bc1188d70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1188d74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1188d7e:   	cmpq	(%r10), %rdi
  0x0000028bc1188d81:   	je	0x1f
  0x0000028bc1188d87:   	popq	%r10
  0x0000028bc1188d89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1188d8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1188d94:   	andq	$-0x10, %rsp
  0x0000028bc1188d98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188da2:   	callq	*%r10
  0x0000028bc1188da5:   	hlt
 ;; L_ok:
  0x0000028bc1188da6:   	popq	%r10
  0x0000028bc1188da8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1188da9:   	movl	0xc(%r8), %eax
  0x0000028bc1188dad:   	shrl	$0x18, %eax
  0x0000028bc1188db0:   	andl	$0xf, %eax
  0x0000028bc1188db3:   	cmpl	$0x6, %eax
  0x0000028bc1188db6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1188dbc:   	movabsq	$0x28bdc114160, %rcx;   {external_word}
  0x0000028bc1188dc6:   	andq	$-0x10, %rsp
  0x0000028bc1188dca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188dd4:   	callq	*%r10
  0x0000028bc1188dd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1188dd8:   	movl	0x24(%r8), %ebx
  0x0000028bc1188ddc:   	pushq	%r10
  0x0000028bc1188dde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1188de8:   	cmpq	(%r10), %r12
  0x0000028bc1188deb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1188df1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1188dfb:   	andq	$-0x10, %rsp
  0x0000028bc1188dff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1188e09:   	callq	*%r10
  0x0000028bc1188e0c:   	hlt
  0x0000028bc1188e0d:   	popq	%r10
  0x0000028bc1188e0f:   	shlq	$0x3, %rbx
  0x0000028bc1188e13:   	movq	0x10(%rbx), %rbx
  0x0000028bc1188e17:   	testq	%rbx, %rbx
  0x0000028bc1188e1a:   	je	0x3
  0x0000028bc1188e20:   	jmpq	*0x58(%rbx)
  0x0000028bc1188e23:   	jmp	-0x521908           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2139   40     n 0       java.lang.invoke.MethodHandle::linkToStatic(JLL)J (native)
 total in heap  [0x0000028bc1188e90,0x0000028bc1189128] = 664
 relocation     [0x0000028bc1188ff0,0x0000028bc1189038] = 72
 main code      [0x0000028bc1189040,0x0000028bc1189128] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8384c30} 'linkToStatic' '(JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1189040:   	testq	%r9, %r9
  0x0000028bc1189043:   	je	0x41
  0x0000028bc1189049:   	pushq	%rdi
  0x0000028bc118904a:   	pushq	%r10
  0x0000028bc118904c:   	movl	0x8(%r9), %edi
  0x0000028bc1189050:   	movabsq	$0x800000000, %r10
  0x0000028bc118905a:   	addq	%r10, %rdi
  0x0000028bc118905d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1189067:   	cmpq	(%r10), %rdi
  0x0000028bc118906a:   	je	0x36
  0x0000028bc1189070:   	movq	0x40(%rdi), %rdi
  0x0000028bc1189074:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118907e:   	cmpq	(%r10), %rdi
  0x0000028bc1189081:   	je	0x1f
  0x0000028bc1189087:   	popq	%r10
  0x0000028bc1189089:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118908a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1189094:   	andq	$-0x10, %rsp
  0x0000028bc1189098:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11890a2:   	callq	*%r10
  0x0000028bc11890a5:   	hlt
 ;; L_ok:
  0x0000028bc11890a6:   	popq	%r10
  0x0000028bc11890a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11890a9:   	movl	0xc(%r9), %eax
  0x0000028bc11890ad:   	shrl	$0x18, %eax
  0x0000028bc11890b0:   	andl	$0xf, %eax
  0x0000028bc11890b3:   	cmpl	$0x6, %eax
  0x0000028bc11890b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11890bc:   	movabsq	$0x28bdc114ae0, %rcx;   {external_word}
  0x0000028bc11890c6:   	andq	$-0x10, %rsp
  0x0000028bc11890ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11890d4:   	callq	*%r10
  0x0000028bc11890d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11890d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11890dc:   	pushq	%r10
  0x0000028bc11890de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11890e8:   	cmpq	(%r10), %r12
  0x0000028bc11890eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11890f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11890fb:   	andq	$-0x10, %rsp
  0x0000028bc11890ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189109:   	callq	*%r10
  0x0000028bc118910c:   	hlt
  0x0000028bc118910d:   	popq	%r10
  0x0000028bc118910f:   	shlq	$0x3, %rbx
  0x0000028bc1189113:   	movq	0x10(%rbx), %rbx
  0x0000028bc1189117:   	testq	%rbx, %rbx
  0x0000028bc118911a:   	je	0x3
  0x0000028bc1189120:   	jmpq	*0x58(%rbx)
  0x0000028bc1189123:   	jmp	-0x521c08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2141   40     n 0       java.lang.invoke.MethodHandle::linkToStatic(JLL)J (native)
 total in heap  [0x0000028bc1188e90,0x0000028bc1189128] = 664
 relocation     [0x0000028bc1188ff0,0x0000028bc1189038] = 72
 main code      [0x0000028bc1189040,0x0000028bc1189128] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8384c30} 'linkToStatic' '(JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1189040:   	testq	%r9, %r9
  0x0000028bc1189043:   	je	0x41
  0x0000028bc1189049:   	pushq	%rdi
  0x0000028bc118904a:   	pushq	%r10
  0x0000028bc118904c:   	movl	0x8(%r9), %edi
  0x0000028bc1189050:   	movabsq	$0x800000000, %r10
  0x0000028bc118905a:   	addq	%r10, %rdi
  0x0000028bc118905d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1189067:   	cmpq	(%r10), %rdi
  0x0000028bc118906a:   	je	0x36
  0x0000028bc1189070:   	movq	0x40(%rdi), %rdi
  0x0000028bc1189074:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118907e:   	cmpq	(%r10), %rdi
  0x0000028bc1189081:   	je	0x1f
  0x0000028bc1189087:   	popq	%r10
  0x0000028bc1189089:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118908a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1189094:   	andq	$-0x10, %rsp
  0x0000028bc1189098:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11890a2:   	callq	*%r10
  0x0000028bc11890a5:   	hlt
 ;; L_ok:
  0x0000028bc11890a6:   	popq	%r10
  0x0000028bc11890a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11890a9:   	movl	0xc(%r9), %eax
  0x0000028bc11890ad:   	shrl	$0x18, %eax
  0x0000028bc11890b0:   	andl	$0xf, %eax
  0x0000028bc11890b3:   	cmpl	$0x6, %eax
  0x0000028bc11890b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11890bc:   	movabsq	$0x28bdc114ae0, %rcx;   {external_word}
  0x0000028bc11890c6:   	andq	$-0x10, %rsp
  0x0000028bc11890ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11890d4:   	callq	*%r10
  0x0000028bc11890d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11890d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11890dc:   	pushq	%r10
  0x0000028bc11890de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11890e8:   	cmpq	(%r10), %r12
  0x0000028bc11890eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11890f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11890fb:   	andq	$-0x10, %rsp
  0x0000028bc11890ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189109:   	callq	*%r10
  0x0000028bc118910c:   	hlt
  0x0000028bc118910d:   	popq	%r10
  0x0000028bc118910f:   	shlq	$0x3, %rbx
  0x0000028bc1189113:   	movq	0x10(%rbx), %rbx
  0x0000028bc1189117:   	testq	%rbx, %rbx
  0x0000028bc118911a:   	je	0x3
  0x0000028bc1189120:   	jmpq	*0x58(%rbx)
  0x0000028bc1189123:   	jmp	-0x521c08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2146   41     n 0       java.lang.invoke.MethodHandle::invokeBasic(JL)J (native)
 total in heap  [0x0000028bc1189190,0x0000028bc1189408] = 632
 relocation     [0x0000028bc11892f0,0x0000028bc1189338] = 72
 main code      [0x0000028bc1189340,0x0000028bc1189403] = 195
 stub code      [0x0000028bc1189403,0x0000028bc1189408] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8385070} 'invokeBasic' '(JLjava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1189340:   	movl	0x14(%rdx), %ebx
  0x0000028bc1189343:   	pushq	%r10
  0x0000028bc1189345:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118934f:   	cmpq	(%r10), %r12
  0x0000028bc1189352:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189358:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189362:   	andq	$-0x10, %rsp
  0x0000028bc1189366:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189370:   	callq	*%r10
  0x0000028bc1189373:   	hlt
  0x0000028bc1189374:   	popq	%r10
  0x0000028bc1189376:   	shlq	$0x3, %rbx
  0x0000028bc118937a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118937d:   	pushq	%r10
  0x0000028bc118937f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189389:   	cmpq	(%r10), %r12
  0x0000028bc118938c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189392:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118939c:   	andq	$-0x10, %rsp
  0x0000028bc11893a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11893aa:   	callq	*%r10
  0x0000028bc11893ad:   	hlt
  0x0000028bc11893ae:   	popq	%r10
  0x0000028bc11893b0:   	shlq	$0x3, %rbx
  0x0000028bc11893b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11893b7:   	pushq	%r10
  0x0000028bc11893b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11893c3:   	cmpq	(%r10), %r12
  0x0000028bc11893c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11893cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11893d6:   	andq	$-0x10, %rsp
  0x0000028bc11893da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11893e4:   	callq	*%r10
  0x0000028bc11893e7:   	hlt
  0x0000028bc11893e8:   	popq	%r10
  0x0000028bc11893ea:   	shlq	$0x3, %rbx
  0x0000028bc11893ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11893f2:   	testq	%rbx, %rbx
  0x0000028bc11893f5:   	je	0x3
  0x0000028bc11893fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11893fe:   	jmp	-0x521ee3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1189403:   	hlt
  0x0000028bc1189404:   	hlt
  0x0000028bc1189405:   	hlt
  0x0000028bc1189406:   	hlt
  0x0000028bc1189407:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2148   41     n 0       java.lang.invoke.MethodHandle::invokeBasic(JL)J (native)
 total in heap  [0x0000028bc1189190,0x0000028bc1189408] = 632
 relocation     [0x0000028bc11892f0,0x0000028bc1189338] = 72
 main code      [0x0000028bc1189340,0x0000028bc1189403] = 195
 stub code      [0x0000028bc1189403,0x0000028bc1189408] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8385070} 'invokeBasic' '(JLjava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1189340:   	movl	0x14(%rdx), %ebx
  0x0000028bc1189343:   	pushq	%r10
  0x0000028bc1189345:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118934f:   	cmpq	(%r10), %r12
  0x0000028bc1189352:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189358:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189362:   	andq	$-0x10, %rsp
  0x0000028bc1189366:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189370:   	callq	*%r10
  0x0000028bc1189373:   	hlt
  0x0000028bc1189374:   	popq	%r10
  0x0000028bc1189376:   	shlq	$0x3, %rbx
  0x0000028bc118937a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118937d:   	pushq	%r10
  0x0000028bc118937f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189389:   	cmpq	(%r10), %r12
  0x0000028bc118938c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189392:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118939c:   	andq	$-0x10, %rsp
  0x0000028bc11893a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11893aa:   	callq	*%r10
  0x0000028bc11893ad:   	hlt
  0x0000028bc11893ae:   	popq	%r10
  0x0000028bc11893b0:   	shlq	$0x3, %rbx
  0x0000028bc11893b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11893b7:   	pushq	%r10
  0x0000028bc11893b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11893c3:   	cmpq	(%r10), %r12
  0x0000028bc11893c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11893cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11893d6:   	andq	$-0x10, %rsp
  0x0000028bc11893da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11893e4:   	callq	*%r10
  0x0000028bc11893e7:   	hlt
  0x0000028bc11893e8:   	popq	%r10
  0x0000028bc11893ea:   	shlq	$0x3, %rbx
  0x0000028bc11893ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11893f2:   	testq	%rbx, %rbx
  0x0000028bc11893f5:   	je	0x3
  0x0000028bc11893fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11893fe:   	jmp	-0x521ee3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1189403:   	hlt
  0x0000028bc1189404:   	hlt
  0x0000028bc1189405:   	hlt
  0x0000028bc1189406:   	hlt
  0x0000028bc1189407:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2150   42     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLL)J (native)
 total in heap  [0x0000028bc1189490,0x0000028bc1189890] = 1024
 relocation     [0x0000028bc11895f0,0x0000028bc1189680] = 144
 main code      [0x0000028bc1189680,0x0000028bc118988b] = 523
 stub code      [0x0000028bc118988b,0x0000028bc1189890] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83851a8} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1189680:   	testq	%rdi, %rdi
  0x0000028bc1189683:   	je	0x40
  0x0000028bc1189689:   	pushq	%rdi
  0x0000028bc118968a:   	pushq	%r10
  0x0000028bc118968c:   	movl	0x8(%rdi), %edi
  0x0000028bc118968f:   	movabsq	$0x800000000, %r10
  0x0000028bc1189699:   	addq	%r10, %rdi
  0x0000028bc118969c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11896a6:   	cmpq	(%r10), %rdi
  0x0000028bc11896a9:   	je	0x36
  0x0000028bc11896af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11896b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11896bd:   	cmpq	(%r10), %rdi
  0x0000028bc11896c0:   	je	0x1f
  0x0000028bc11896c6:   	popq	%r10
  0x0000028bc11896c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11896c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11896d3:   	andq	$-0x10, %rsp
  0x0000028bc11896d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11896e1:   	callq	*%r10
  0x0000028bc11896e4:   	hlt
 ;; L_ok:
  0x0000028bc11896e5:   	popq	%r10
  0x0000028bc11896e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11896e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11896eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc11896ef:   	movabsq	$0x800000000, %r11
  0x0000028bc11896f9:   	addq	%r11, %r10
  0x0000028bc11896fc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1189700:   	pushq	%r10
  0x0000028bc1189702:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118970c:   	cmpq	(%r10), %r12
  0x0000028bc118970f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189715:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118971f:   	andq	$-0x10, %rsp
  0x0000028bc1189723:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118972d:   	callq	*%r10
  0x0000028bc1189730:   	hlt
  0x0000028bc1189731:   	popq	%r10
  0x0000028bc1189733:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1189737:   	testq	%r11, %r11
  0x0000028bc118973a:   	je	0x41
  0x0000028bc1189740:   	pushq	%rdi
  0x0000028bc1189741:   	pushq	%r10
  0x0000028bc1189743:   	movl	0x8(%r11), %edi
  0x0000028bc1189747:   	movabsq	$0x800000000, %r10
  0x0000028bc1189751:   	addq	%r10, %rdi
  0x0000028bc1189754:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118975e:   	cmpq	(%r10), %rdi
  0x0000028bc1189761:   	je	0x36
  0x0000028bc1189767:   	movq	0x40(%rdi), %rdi
  0x0000028bc118976b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1189775:   	cmpq	(%r10), %rdi
  0x0000028bc1189778:   	je	0x1f
  0x0000028bc118977e:   	popq	%r10
  0x0000028bc1189780:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1189781:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118978b:   	andq	$-0x10, %rsp
  0x0000028bc118978f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189799:   	callq	*%r10
  0x0000028bc118979c:   	hlt
 ;; L_ok:
  0x0000028bc118979d:   	popq	%r10
  0x0000028bc118979f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11897a0:   	movq	0x10(%r11), %r11
  0x0000028bc11897a4:   	cmpq	%r11, %r10
  0x0000028bc11897a7:   	je	0x61
  0x0000028bc11897ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11897b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11897b5:   	je	0x53
  0x0000028bc11897bb:   	cmpl	$0x28, %eax
  0x0000028bc11897be:   	jne	0x2e
  0x0000028bc11897c4:   	movq	%r11, %rax
  0x0000028bc11897c7:   	pushq	%rcx
  0x0000028bc11897c8:   	pushq	%rdi
  0x0000028bc11897c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11897d3:   	incl	(%rcx)
  0x0000028bc11897d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11897d9:   	movl	(%rdi), %ecx
  0x0000028bc11897db:   	addq	$0x8, %rdi
  0x0000028bc11897df:   	testq	%rax, %rax
  0x0000028bc11897e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11897e5:   	popq	%rdi
  0x0000028bc11897e6:   	popq	%rcx
  0x0000028bc11897e7:   	jne	0x9
  0x0000028bc11897e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11897ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11897f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11897fc:   	andq	$-0x10, %rsp
  0x0000028bc1189800:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118980a:   	callq	*%r10
  0x0000028bc118980d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118980e:   	movl	0xc(%rdi), %eax
  0x0000028bc1189811:   	shrl	$0x18, %eax
  0x0000028bc1189814:   	andl	$0xf, %eax
  0x0000028bc1189817:   	cmpl	$0x7, %eax
  0x0000028bc118981a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1189820:   	movabsq	$0x28bdc115e60, %rcx;   {external_word}
  0x0000028bc118982a:   	andq	$-0x10, %rsp
  0x0000028bc118982e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189838:   	callq	*%r10
  0x0000028bc118983b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118983c:   	movl	0x24(%rdi), %ebx
  0x0000028bc118983f:   	pushq	%r10
  0x0000028bc1189841:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118984b:   	cmpq	(%r10), %r12
  0x0000028bc118984e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189854:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118985e:   	andq	$-0x10, %rsp
  0x0000028bc1189862:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118986c:   	callq	*%r10
  0x0000028bc118986f:   	hlt
  0x0000028bc1189870:   	popq	%r10
  0x0000028bc1189872:   	shlq	$0x3, %rbx
  0x0000028bc1189876:   	movq	0x10(%rbx), %rbx
  0x0000028bc118987a:   	testq	%rbx, %rbx
  0x0000028bc118987d:   	je	0x3
  0x0000028bc1189883:   	jmpq	*0x58(%rbx)
  0x0000028bc1189886:   	jmp	-0x52236b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118988b:   	hlt
  0x0000028bc118988c:   	hlt
  0x0000028bc118988d:   	hlt
  0x0000028bc118988e:   	hlt
  0x0000028bc118988f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2155   42     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLL)J (native)
 total in heap  [0x0000028bc1189490,0x0000028bc1189890] = 1024
 relocation     [0x0000028bc11895f0,0x0000028bc1189680] = 144
 main code      [0x0000028bc1189680,0x0000028bc118988b] = 523
 stub code      [0x0000028bc118988b,0x0000028bc1189890] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83851a8} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1189680:   	testq	%rdi, %rdi
  0x0000028bc1189683:   	je	0x40
  0x0000028bc1189689:   	pushq	%rdi
  0x0000028bc118968a:   	pushq	%r10
  0x0000028bc118968c:   	movl	0x8(%rdi), %edi
  0x0000028bc118968f:   	movabsq	$0x800000000, %r10
  0x0000028bc1189699:   	addq	%r10, %rdi
  0x0000028bc118969c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11896a6:   	cmpq	(%r10), %rdi
  0x0000028bc11896a9:   	je	0x36
  0x0000028bc11896af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11896b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11896bd:   	cmpq	(%r10), %rdi
  0x0000028bc11896c0:   	je	0x1f
  0x0000028bc11896c6:   	popq	%r10
  0x0000028bc11896c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11896c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11896d3:   	andq	$-0x10, %rsp
  0x0000028bc11896d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11896e1:   	callq	*%r10
  0x0000028bc11896e4:   	hlt
 ;; L_ok:
  0x0000028bc11896e5:   	popq	%r10
  0x0000028bc11896e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11896e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11896eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc11896ef:   	movabsq	$0x800000000, %r11
  0x0000028bc11896f9:   	addq	%r11, %r10
  0x0000028bc11896fc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1189700:   	pushq	%r10
  0x0000028bc1189702:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118970c:   	cmpq	(%r10), %r12
  0x0000028bc118970f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189715:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118971f:   	andq	$-0x10, %rsp
  0x0000028bc1189723:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118972d:   	callq	*%r10
  0x0000028bc1189730:   	hlt
  0x0000028bc1189731:   	popq	%r10
  0x0000028bc1189733:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1189737:   	testq	%r11, %r11
  0x0000028bc118973a:   	je	0x41
  0x0000028bc1189740:   	pushq	%rdi
  0x0000028bc1189741:   	pushq	%r10
  0x0000028bc1189743:   	movl	0x8(%r11), %edi
  0x0000028bc1189747:   	movabsq	$0x800000000, %r10
  0x0000028bc1189751:   	addq	%r10, %rdi
  0x0000028bc1189754:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118975e:   	cmpq	(%r10), %rdi
  0x0000028bc1189761:   	je	0x36
  0x0000028bc1189767:   	movq	0x40(%rdi), %rdi
  0x0000028bc118976b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1189775:   	cmpq	(%r10), %rdi
  0x0000028bc1189778:   	je	0x1f
  0x0000028bc118977e:   	popq	%r10
  0x0000028bc1189780:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1189781:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118978b:   	andq	$-0x10, %rsp
  0x0000028bc118978f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189799:   	callq	*%r10
  0x0000028bc118979c:   	hlt
 ;; L_ok:
  0x0000028bc118979d:   	popq	%r10
  0x0000028bc118979f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11897a0:   	movq	0x10(%r11), %r11
  0x0000028bc11897a4:   	cmpq	%r11, %r10
  0x0000028bc11897a7:   	je	0x61
  0x0000028bc11897ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11897b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11897b5:   	je	0x53
  0x0000028bc11897bb:   	cmpl	$0x28, %eax
  0x0000028bc11897be:   	jne	0x2e
  0x0000028bc11897c4:   	movq	%r11, %rax
  0x0000028bc11897c7:   	pushq	%rcx
  0x0000028bc11897c8:   	pushq	%rdi
  0x0000028bc11897c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11897d3:   	incl	(%rcx)
  0x0000028bc11897d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11897d9:   	movl	(%rdi), %ecx
  0x0000028bc11897db:   	addq	$0x8, %rdi
  0x0000028bc11897df:   	testq	%rax, %rax
  0x0000028bc11897e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11897e5:   	popq	%rdi
  0x0000028bc11897e6:   	popq	%rcx
  0x0000028bc11897e7:   	jne	0x9
  0x0000028bc11897e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11897ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11897f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11897fc:   	andq	$-0x10, %rsp
  0x0000028bc1189800:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118980a:   	callq	*%r10
  0x0000028bc118980d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118980e:   	movl	0xc(%rdi), %eax
  0x0000028bc1189811:   	shrl	$0x18, %eax
  0x0000028bc1189814:   	andl	$0xf, %eax
  0x0000028bc1189817:   	cmpl	$0x7, %eax
  0x0000028bc118981a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1189820:   	movabsq	$0x28bdc115e60, %rcx;   {external_word}
  0x0000028bc118982a:   	andq	$-0x10, %rsp
  0x0000028bc118982e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189838:   	callq	*%r10
  0x0000028bc118983b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118983c:   	movl	0x24(%rdi), %ebx
  0x0000028bc118983f:   	pushq	%r10
  0x0000028bc1189841:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118984b:   	cmpq	(%r10), %r12
  0x0000028bc118984e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189854:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118985e:   	andq	$-0x10, %rsp
  0x0000028bc1189862:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118986c:   	callq	*%r10
  0x0000028bc118986f:   	hlt
  0x0000028bc1189870:   	popq	%r10
  0x0000028bc1189872:   	shlq	$0x3, %rbx
  0x0000028bc1189876:   	movq	0x10(%rbx), %rbx
  0x0000028bc118987a:   	testq	%rbx, %rbx
  0x0000028bc118987d:   	je	0x3
  0x0000028bc1189883:   	jmpq	*0x58(%rbx)
  0x0000028bc1189886:   	jmp	-0x52236b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118988b:   	hlt
  0x0000028bc118988c:   	hlt
  0x0000028bc118988d:   	hlt
  0x0000028bc118988e:   	hlt
  0x0000028bc118988f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2170   43     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (native)
 total in heap  [0x0000028bc1189910,0x0000028bc1189ba8] = 664
 relocation     [0x0000028bc1189a70,0x0000028bc1189ab8] = 72
 main code      [0x0000028bc1189ac0,0x0000028bc1189ba5] = 229
 stub code      [0x0000028bc1189ba5,0x0000028bc1189ba8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8388c68} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1189ac0:   	testq	%rsi, %rsi
  0x0000028bc1189ac3:   	je	0x40
  0x0000028bc1189ac9:   	pushq	%rdi
  0x0000028bc1189aca:   	pushq	%r10
  0x0000028bc1189acc:   	movl	0x8(%rsi), %edi
  0x0000028bc1189acf:   	movabsq	$0x800000000, %r10
  0x0000028bc1189ad9:   	addq	%r10, %rdi
  0x0000028bc1189adc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1189ae6:   	cmpq	(%r10), %rdi
  0x0000028bc1189ae9:   	je	0x36
  0x0000028bc1189aef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1189af3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1189afd:   	cmpq	(%r10), %rdi
  0x0000028bc1189b00:   	je	0x1f
  0x0000028bc1189b06:   	popq	%r10
  0x0000028bc1189b08:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1189b09:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1189b13:   	andq	$-0x10, %rsp
  0x0000028bc1189b17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189b21:   	callq	*%r10
  0x0000028bc1189b24:   	hlt
 ;; L_ok:
  0x0000028bc1189b25:   	popq	%r10
  0x0000028bc1189b27:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1189b28:   	movl	0xc(%rsi), %eax
  0x0000028bc1189b2b:   	shrl	$0x18, %eax
  0x0000028bc1189b2e:   	andl	$0xf, %eax
  0x0000028bc1189b31:   	cmpl	$0x6, %eax
  0x0000028bc1189b34:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1189b3a:   	movabsq	$0x28bdc115860, %rcx;   {external_word}
  0x0000028bc1189b44:   	andq	$-0x10, %rsp
  0x0000028bc1189b48:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189b52:   	callq	*%r10
  0x0000028bc1189b55:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1189b56:   	movl	0x24(%rsi), %ebx
  0x0000028bc1189b59:   	pushq	%r10
  0x0000028bc1189b5b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189b65:   	cmpq	(%r10), %r12
  0x0000028bc1189b68:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189b6e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189b78:   	andq	$-0x10, %rsp
  0x0000028bc1189b7c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189b86:   	callq	*%r10
  0x0000028bc1189b89:   	hlt
  0x0000028bc1189b8a:   	popq	%r10
  0x0000028bc1189b8c:   	shlq	$0x3, %rbx
  0x0000028bc1189b90:   	movq	0x10(%rbx), %rbx
  0x0000028bc1189b94:   	testq	%rbx, %rbx
  0x0000028bc1189b97:   	je	0x3
  0x0000028bc1189b9d:   	jmpq	*0x58(%rbx)
  0x0000028bc1189ba0:   	jmp	-0x522685           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1189ba5:   	hlt
  0x0000028bc1189ba6:   	hlt
  0x0000028bc1189ba7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2173   43     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (native)
 total in heap  [0x0000028bc1189910,0x0000028bc1189ba8] = 664
 relocation     [0x0000028bc1189a70,0x0000028bc1189ab8] = 72
 main code      [0x0000028bc1189ac0,0x0000028bc1189ba5] = 229
 stub code      [0x0000028bc1189ba5,0x0000028bc1189ba8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8388c68} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1189ac0:   	testq	%rsi, %rsi
  0x0000028bc1189ac3:   	je	0x40
  0x0000028bc1189ac9:   	pushq	%rdi
  0x0000028bc1189aca:   	pushq	%r10
  0x0000028bc1189acc:   	movl	0x8(%rsi), %edi
  0x0000028bc1189acf:   	movabsq	$0x800000000, %r10
  0x0000028bc1189ad9:   	addq	%r10, %rdi
  0x0000028bc1189adc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1189ae6:   	cmpq	(%r10), %rdi
  0x0000028bc1189ae9:   	je	0x36
  0x0000028bc1189aef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1189af3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1189afd:   	cmpq	(%r10), %rdi
  0x0000028bc1189b00:   	je	0x1f
  0x0000028bc1189b06:   	popq	%r10
  0x0000028bc1189b08:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1189b09:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1189b13:   	andq	$-0x10, %rsp
  0x0000028bc1189b17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189b21:   	callq	*%r10
  0x0000028bc1189b24:   	hlt
 ;; L_ok:
  0x0000028bc1189b25:   	popq	%r10
  0x0000028bc1189b27:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1189b28:   	movl	0xc(%rsi), %eax
  0x0000028bc1189b2b:   	shrl	$0x18, %eax
  0x0000028bc1189b2e:   	andl	$0xf, %eax
  0x0000028bc1189b31:   	cmpl	$0x6, %eax
  0x0000028bc1189b34:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1189b3a:   	movabsq	$0x28bdc115860, %rcx;   {external_word}
  0x0000028bc1189b44:   	andq	$-0x10, %rsp
  0x0000028bc1189b48:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189b52:   	callq	*%r10
  0x0000028bc1189b55:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1189b56:   	movl	0x24(%rsi), %ebx
  0x0000028bc1189b59:   	pushq	%r10
  0x0000028bc1189b5b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189b65:   	cmpq	(%r10), %r12
  0x0000028bc1189b68:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189b6e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189b78:   	andq	$-0x10, %rsp
  0x0000028bc1189b7c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189b86:   	callq	*%r10
  0x0000028bc1189b89:   	hlt
  0x0000028bc1189b8a:   	popq	%r10
  0x0000028bc1189b8c:   	shlq	$0x3, %rbx
  0x0000028bc1189b90:   	movq	0x10(%rbx), %rbx
  0x0000028bc1189b94:   	testq	%rbx, %rbx
  0x0000028bc1189b97:   	je	0x3
  0x0000028bc1189b9d:   	jmpq	*0x58(%rbx)
  0x0000028bc1189ba0:   	jmp	-0x522685           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1189ba5:   	hlt
  0x0000028bc1189ba6:   	hlt
  0x0000028bc1189ba7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2178   44     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (native)
 total in heap  [0x0000028bc1189c10,0x0000028bc1189e88] = 632
 relocation     [0x0000028bc1189d70,0x0000028bc1189db8] = 72
 main code      [0x0000028bc1189dc0,0x0000028bc1189e83] = 195
 stub code      [0x0000028bc1189e83,0x0000028bc1189e88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8388e60} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1189dc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc1189dc3:   	pushq	%r10
  0x0000028bc1189dc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189dcf:   	cmpq	(%r10), %r12
  0x0000028bc1189dd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189dd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189de2:   	andq	$-0x10, %rsp
  0x0000028bc1189de6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189df0:   	callq	*%r10
  0x0000028bc1189df3:   	hlt
  0x0000028bc1189df4:   	popq	%r10
  0x0000028bc1189df6:   	shlq	$0x3, %rbx
  0x0000028bc1189dfa:   	movl	0x28(%rbx), %ebx
  0x0000028bc1189dfd:   	pushq	%r10
  0x0000028bc1189dff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189e09:   	cmpq	(%r10), %r12
  0x0000028bc1189e0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189e12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189e1c:   	andq	$-0x10, %rsp
  0x0000028bc1189e20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189e2a:   	callq	*%r10
  0x0000028bc1189e2d:   	hlt
  0x0000028bc1189e2e:   	popq	%r10
  0x0000028bc1189e30:   	shlq	$0x3, %rbx
  0x0000028bc1189e34:   	movl	0x24(%rbx), %ebx
  0x0000028bc1189e37:   	pushq	%r10
  0x0000028bc1189e39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189e43:   	cmpq	(%r10), %r12
  0x0000028bc1189e46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189e4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189e56:   	andq	$-0x10, %rsp
  0x0000028bc1189e5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189e64:   	callq	*%r10
  0x0000028bc1189e67:   	hlt
  0x0000028bc1189e68:   	popq	%r10
  0x0000028bc1189e6a:   	shlq	$0x3, %rbx
  0x0000028bc1189e6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1189e72:   	testq	%rbx, %rbx
  0x0000028bc1189e75:   	je	0x3
  0x0000028bc1189e7b:   	jmpq	*0x58(%rbx)
  0x0000028bc1189e7e:   	jmp	-0x522963           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1189e83:   	hlt
  0x0000028bc1189e84:   	hlt
  0x0000028bc1189e85:   	hlt
  0x0000028bc1189e86:   	hlt
  0x0000028bc1189e87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2180   44     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (native)
 total in heap  [0x0000028bc1189c10,0x0000028bc1189e88] = 632
 relocation     [0x0000028bc1189d70,0x0000028bc1189db8] = 72
 main code      [0x0000028bc1189dc0,0x0000028bc1189e83] = 195
 stub code      [0x0000028bc1189e83,0x0000028bc1189e88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8388e60} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1189dc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc1189dc3:   	pushq	%r10
  0x0000028bc1189dc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189dcf:   	cmpq	(%r10), %r12
  0x0000028bc1189dd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189dd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189de2:   	andq	$-0x10, %rsp
  0x0000028bc1189de6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189df0:   	callq	*%r10
  0x0000028bc1189df3:   	hlt
  0x0000028bc1189df4:   	popq	%r10
  0x0000028bc1189df6:   	shlq	$0x3, %rbx
  0x0000028bc1189dfa:   	movl	0x28(%rbx), %ebx
  0x0000028bc1189dfd:   	pushq	%r10
  0x0000028bc1189dff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189e09:   	cmpq	(%r10), %r12
  0x0000028bc1189e0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189e12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189e1c:   	andq	$-0x10, %rsp
  0x0000028bc1189e20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189e2a:   	callq	*%r10
  0x0000028bc1189e2d:   	hlt
  0x0000028bc1189e2e:   	popq	%r10
  0x0000028bc1189e30:   	shlq	$0x3, %rbx
  0x0000028bc1189e34:   	movl	0x24(%rbx), %ebx
  0x0000028bc1189e37:   	pushq	%r10
  0x0000028bc1189e39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1189e43:   	cmpq	(%r10), %r12
  0x0000028bc1189e46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1189e4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1189e56:   	andq	$-0x10, %rsp
  0x0000028bc1189e5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1189e64:   	callq	*%r10
  0x0000028bc1189e67:   	hlt
  0x0000028bc1189e68:   	popq	%r10
  0x0000028bc1189e6a:   	shlq	$0x3, %rbx
  0x0000028bc1189e6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1189e72:   	testq	%rbx, %rbx
  0x0000028bc1189e75:   	je	0x3
  0x0000028bc1189e7b:   	jmpq	*0x58(%rbx)
  0x0000028bc1189e7e:   	jmp	-0x522963           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1189e83:   	hlt
  0x0000028bc1189e84:   	hlt
  0x0000028bc1189e85:   	hlt
  0x0000028bc1189e86:   	hlt
  0x0000028bc1189e87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2252   45     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLL)L (native)
 total in heap  [0x0000028bc1189f10,0x0000028bc118a1a8] = 664
 relocation     [0x0000028bc118a070,0x0000028bc118a0b8] = 72
 main code      [0x0000028bc118a0c0,0x0000028bc118a1a5] = 229
 stub code      [0x0000028bc118a1a5,0x0000028bc118a1a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c3230} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118a0c0:   	testq	%rcx, %rcx
  0x0000028bc118a0c3:   	je	0x40
  0x0000028bc118a0c9:   	pushq	%rdi
  0x0000028bc118a0ca:   	pushq	%r10
  0x0000028bc118a0cc:   	movl	0x8(%rcx), %edi
  0x0000028bc118a0cf:   	movabsq	$0x800000000, %r10
  0x0000028bc118a0d9:   	addq	%r10, %rdi
  0x0000028bc118a0dc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a0e6:   	cmpq	(%r10), %rdi
  0x0000028bc118a0e9:   	je	0x36
  0x0000028bc118a0ef:   	movq	0x40(%rdi), %rdi
  0x0000028bc118a0f3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a0fd:   	cmpq	(%r10), %rdi
  0x0000028bc118a100:   	je	0x1f
  0x0000028bc118a106:   	popq	%r10
  0x0000028bc118a108:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118a109:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118a113:   	andq	$-0x10, %rsp
  0x0000028bc118a117:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a121:   	callq	*%r10
  0x0000028bc118a124:   	hlt
 ;; L_ok:
  0x0000028bc118a125:   	popq	%r10
  0x0000028bc118a127:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118a128:   	movl	0xc(%rcx), %eax
  0x0000028bc118a12b:   	shrl	$0x18, %eax
  0x0000028bc118a12e:   	andl	$0xf, %eax
  0x0000028bc118a131:   	cmpl	$0x6, %eax
  0x0000028bc118a134:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118a13a:   	movabsq	$0x28bdc115960, %rcx;   {external_word}
  0x0000028bc118a144:   	andq	$-0x10, %rsp
  0x0000028bc118a148:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a152:   	callq	*%r10
  0x0000028bc118a155:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118a156:   	movl	0x24(%rcx), %ebx
  0x0000028bc118a159:   	pushq	%r10
  0x0000028bc118a15b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a165:   	cmpq	(%r10), %r12
  0x0000028bc118a168:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a16e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a178:   	andq	$-0x10, %rsp
  0x0000028bc118a17c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a186:   	callq	*%r10
  0x0000028bc118a189:   	hlt
  0x0000028bc118a18a:   	popq	%r10
  0x0000028bc118a18c:   	shlq	$0x3, %rbx
  0x0000028bc118a190:   	movq	0x10(%rbx), %rbx
  0x0000028bc118a194:   	testq	%rbx, %rbx
  0x0000028bc118a197:   	je	0x3
  0x0000028bc118a19d:   	jmpq	*0x58(%rbx)
  0x0000028bc118a1a0:   	jmp	-0x522c85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118a1a5:   	hlt
  0x0000028bc118a1a6:   	hlt
  0x0000028bc118a1a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2255   45     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLL)L (native)
 total in heap  [0x0000028bc1189f10,0x0000028bc118a1a8] = 664
 relocation     [0x0000028bc118a070,0x0000028bc118a0b8] = 72
 main code      [0x0000028bc118a0c0,0x0000028bc118a1a5] = 229
 stub code      [0x0000028bc118a1a5,0x0000028bc118a1a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c3230} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118a0c0:   	testq	%rcx, %rcx
  0x0000028bc118a0c3:   	je	0x40
  0x0000028bc118a0c9:   	pushq	%rdi
  0x0000028bc118a0ca:   	pushq	%r10
  0x0000028bc118a0cc:   	movl	0x8(%rcx), %edi
  0x0000028bc118a0cf:   	movabsq	$0x800000000, %r10
  0x0000028bc118a0d9:   	addq	%r10, %rdi
  0x0000028bc118a0dc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a0e6:   	cmpq	(%r10), %rdi
  0x0000028bc118a0e9:   	je	0x36
  0x0000028bc118a0ef:   	movq	0x40(%rdi), %rdi
  0x0000028bc118a0f3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a0fd:   	cmpq	(%r10), %rdi
  0x0000028bc118a100:   	je	0x1f
  0x0000028bc118a106:   	popq	%r10
  0x0000028bc118a108:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118a109:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118a113:   	andq	$-0x10, %rsp
  0x0000028bc118a117:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a121:   	callq	*%r10
  0x0000028bc118a124:   	hlt
 ;; L_ok:
  0x0000028bc118a125:   	popq	%r10
  0x0000028bc118a127:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118a128:   	movl	0xc(%rcx), %eax
  0x0000028bc118a12b:   	shrl	$0x18, %eax
  0x0000028bc118a12e:   	andl	$0xf, %eax
  0x0000028bc118a131:   	cmpl	$0x6, %eax
  0x0000028bc118a134:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118a13a:   	movabsq	$0x28bdc115960, %rcx;   {external_word}
  0x0000028bc118a144:   	andq	$-0x10, %rsp
  0x0000028bc118a148:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a152:   	callq	*%r10
  0x0000028bc118a155:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118a156:   	movl	0x24(%rcx), %ebx
  0x0000028bc118a159:   	pushq	%r10
  0x0000028bc118a15b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a165:   	cmpq	(%r10), %r12
  0x0000028bc118a168:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a16e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a178:   	andq	$-0x10, %rsp
  0x0000028bc118a17c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a186:   	callq	*%r10
  0x0000028bc118a189:   	hlt
  0x0000028bc118a18a:   	popq	%r10
  0x0000028bc118a18c:   	shlq	$0x3, %rbx
  0x0000028bc118a190:   	movq	0x10(%rbx), %rbx
  0x0000028bc118a194:   	testq	%rbx, %rbx
  0x0000028bc118a197:   	je	0x3
  0x0000028bc118a19d:   	jmpq	*0x58(%rbx)
  0x0000028bc118a1a0:   	jmp	-0x522c85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118a1a5:   	hlt
  0x0000028bc118a1a6:   	hlt
  0x0000028bc118a1a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2261   46     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)V (native)
 total in heap  [0x0000028bc118a210,0x0000028bc118a610] = 1024
 relocation     [0x0000028bc118a370,0x0000028bc118a400] = 144
 main code      [0x0000028bc118a400,0x0000028bc118a60b] = 523
 stub code      [0x0000028bc118a60b,0x0000028bc118a610] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c3bb8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118a400:   	testq	%rsi, %rsi
  0x0000028bc118a403:   	je	0x40
  0x0000028bc118a409:   	pushq	%rdi
  0x0000028bc118a40a:   	pushq	%r10
  0x0000028bc118a40c:   	movl	0x8(%rsi), %edi
  0x0000028bc118a40f:   	movabsq	$0x800000000, %r10
  0x0000028bc118a419:   	addq	%r10, %rdi
  0x0000028bc118a41c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a426:   	cmpq	(%r10), %rdi
  0x0000028bc118a429:   	je	0x36
  0x0000028bc118a42f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118a433:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a43d:   	cmpq	(%r10), %rdi
  0x0000028bc118a440:   	je	0x1f
  0x0000028bc118a446:   	popq	%r10
  0x0000028bc118a448:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118a449:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118a453:   	andq	$-0x10, %rsp
  0x0000028bc118a457:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a461:   	callq	*%r10
  0x0000028bc118a464:   	hlt
 ;; L_ok:
  0x0000028bc118a465:   	popq	%r10
  0x0000028bc118a467:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118a468:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118a46b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118a46f:   	movabsq	$0x800000000, %r11
  0x0000028bc118a479:   	addq	%r11, %r10
  0x0000028bc118a47c:   	movl	0x18(%rsi), %r11d
  0x0000028bc118a480:   	pushq	%r10
  0x0000028bc118a482:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a48c:   	cmpq	(%r10), %r12
  0x0000028bc118a48f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a495:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a49f:   	andq	$-0x10, %rsp
  0x0000028bc118a4a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a4ad:   	callq	*%r10
  0x0000028bc118a4b0:   	hlt
  0x0000028bc118a4b1:   	popq	%r10
  0x0000028bc118a4b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118a4b7:   	testq	%r11, %r11
  0x0000028bc118a4ba:   	je	0x41
  0x0000028bc118a4c0:   	pushq	%rdi
  0x0000028bc118a4c1:   	pushq	%r10
  0x0000028bc118a4c3:   	movl	0x8(%r11), %edi
  0x0000028bc118a4c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118a4d1:   	addq	%r10, %rdi
  0x0000028bc118a4d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118a4de:   	cmpq	(%r10), %rdi
  0x0000028bc118a4e1:   	je	0x36
  0x0000028bc118a4e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118a4eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118a4f5:   	cmpq	(%r10), %rdi
  0x0000028bc118a4f8:   	je	0x1f
  0x0000028bc118a4fe:   	popq	%r10
  0x0000028bc118a500:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118a501:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118a50b:   	andq	$-0x10, %rsp
  0x0000028bc118a50f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a519:   	callq	*%r10
  0x0000028bc118a51c:   	hlt
 ;; L_ok:
  0x0000028bc118a51d:   	popq	%r10
  0x0000028bc118a51f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118a520:   	movq	0x10(%r11), %r11
  0x0000028bc118a524:   	cmpq	%r11, %r10
  0x0000028bc118a527:   	je	0x61
  0x0000028bc118a52d:   	movl	0x1c(%r11), %eax
  0x0000028bc118a531:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118a535:   	je	0x53
  0x0000028bc118a53b:   	cmpl	$0x28, %eax
  0x0000028bc118a53e:   	jne	0x2e
  0x0000028bc118a544:   	movq	%r11, %rax
  0x0000028bc118a547:   	pushq	%rcx
  0x0000028bc118a548:   	pushq	%rdi
  0x0000028bc118a549:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118a553:   	incl	(%rcx)
  0x0000028bc118a555:   	movq	0x30(%r10), %rdi
  0x0000028bc118a559:   	movl	(%rdi), %ecx
  0x0000028bc118a55b:   	addq	$0x8, %rdi
  0x0000028bc118a55f:   	testq	%rax, %rax
  0x0000028bc118a562:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118a565:   	popq	%rdi
  0x0000028bc118a566:   	popq	%rcx
  0x0000028bc118a567:   	jne	0x9
  0x0000028bc118a569:   	movq	%r11, 0x28(%r10)
  0x0000028bc118a56d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118a572:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118a57c:   	andq	$-0x10, %rsp
  0x0000028bc118a580:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a58a:   	callq	*%r10
  0x0000028bc118a58d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118a58e:   	movl	0xc(%rsi), %eax
  0x0000028bc118a591:   	shrl	$0x18, %eax
  0x0000028bc118a594:   	andl	$0xf, %eax
  0x0000028bc118a597:   	cmpl	$0x7, %eax
  0x0000028bc118a59a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118a5a0:   	movabsq	$0x28bdc115ae0, %rcx;   {external_word}
  0x0000028bc118a5aa:   	andq	$-0x10, %rsp
  0x0000028bc118a5ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a5b8:   	callq	*%r10
  0x0000028bc118a5bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118a5bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc118a5bf:   	pushq	%r10
  0x0000028bc118a5c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a5cb:   	cmpq	(%r10), %r12
  0x0000028bc118a5ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a5d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a5de:   	andq	$-0x10, %rsp
  0x0000028bc118a5e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a5ec:   	callq	*%r10
  0x0000028bc118a5ef:   	hlt
  0x0000028bc118a5f0:   	popq	%r10
  0x0000028bc118a5f2:   	shlq	$0x3, %rbx
  0x0000028bc118a5f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118a5fa:   	testq	%rbx, %rbx
  0x0000028bc118a5fd:   	je	0x3
  0x0000028bc118a603:   	jmpq	*0x58(%rbx)
  0x0000028bc118a606:   	jmp	-0x5230eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118a60b:   	hlt
  0x0000028bc118a60c:   	hlt
  0x0000028bc118a60d:   	hlt
  0x0000028bc118a60e:   	hlt
  0x0000028bc118a60f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2271   46     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)V (native)
 total in heap  [0x0000028bc118a210,0x0000028bc118a610] = 1024
 relocation     [0x0000028bc118a370,0x0000028bc118a400] = 144
 main code      [0x0000028bc118a400,0x0000028bc118a60b] = 523
 stub code      [0x0000028bc118a60b,0x0000028bc118a610] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c3bb8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118a400:   	testq	%rsi, %rsi
  0x0000028bc118a403:   	je	0x40
  0x0000028bc118a409:   	pushq	%rdi
  0x0000028bc118a40a:   	pushq	%r10
  0x0000028bc118a40c:   	movl	0x8(%rsi), %edi
  0x0000028bc118a40f:   	movabsq	$0x800000000, %r10
  0x0000028bc118a419:   	addq	%r10, %rdi
  0x0000028bc118a41c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a426:   	cmpq	(%r10), %rdi
  0x0000028bc118a429:   	je	0x36
  0x0000028bc118a42f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118a433:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118a43d:   	cmpq	(%r10), %rdi
  0x0000028bc118a440:   	je	0x1f
  0x0000028bc118a446:   	popq	%r10
  0x0000028bc118a448:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118a449:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118a453:   	andq	$-0x10, %rsp
  0x0000028bc118a457:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a461:   	callq	*%r10
  0x0000028bc118a464:   	hlt
 ;; L_ok:
  0x0000028bc118a465:   	popq	%r10
  0x0000028bc118a467:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118a468:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118a46b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118a46f:   	movabsq	$0x800000000, %r11
  0x0000028bc118a479:   	addq	%r11, %r10
  0x0000028bc118a47c:   	movl	0x18(%rsi), %r11d
  0x0000028bc118a480:   	pushq	%r10
  0x0000028bc118a482:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a48c:   	cmpq	(%r10), %r12
  0x0000028bc118a48f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a495:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a49f:   	andq	$-0x10, %rsp
  0x0000028bc118a4a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a4ad:   	callq	*%r10
  0x0000028bc118a4b0:   	hlt
  0x0000028bc118a4b1:   	popq	%r10
  0x0000028bc118a4b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118a4b7:   	testq	%r11, %r11
  0x0000028bc118a4ba:   	je	0x41
  0x0000028bc118a4c0:   	pushq	%rdi
  0x0000028bc118a4c1:   	pushq	%r10
  0x0000028bc118a4c3:   	movl	0x8(%r11), %edi
  0x0000028bc118a4c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118a4d1:   	addq	%r10, %rdi
  0x0000028bc118a4d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118a4de:   	cmpq	(%r10), %rdi
  0x0000028bc118a4e1:   	je	0x36
  0x0000028bc118a4e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118a4eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118a4f5:   	cmpq	(%r10), %rdi
  0x0000028bc118a4f8:   	je	0x1f
  0x0000028bc118a4fe:   	popq	%r10
  0x0000028bc118a500:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118a501:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118a50b:   	andq	$-0x10, %rsp
  0x0000028bc118a50f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a519:   	callq	*%r10
  0x0000028bc118a51c:   	hlt
 ;; L_ok:
  0x0000028bc118a51d:   	popq	%r10
  0x0000028bc118a51f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118a520:   	movq	0x10(%r11), %r11
  0x0000028bc118a524:   	cmpq	%r11, %r10
  0x0000028bc118a527:   	je	0x61
  0x0000028bc118a52d:   	movl	0x1c(%r11), %eax
  0x0000028bc118a531:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118a535:   	je	0x53
  0x0000028bc118a53b:   	cmpl	$0x28, %eax
  0x0000028bc118a53e:   	jne	0x2e
  0x0000028bc118a544:   	movq	%r11, %rax
  0x0000028bc118a547:   	pushq	%rcx
  0x0000028bc118a548:   	pushq	%rdi
  0x0000028bc118a549:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118a553:   	incl	(%rcx)
  0x0000028bc118a555:   	movq	0x30(%r10), %rdi
  0x0000028bc118a559:   	movl	(%rdi), %ecx
  0x0000028bc118a55b:   	addq	$0x8, %rdi
  0x0000028bc118a55f:   	testq	%rax, %rax
  0x0000028bc118a562:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118a565:   	popq	%rdi
  0x0000028bc118a566:   	popq	%rcx
  0x0000028bc118a567:   	jne	0x9
  0x0000028bc118a569:   	movq	%r11, 0x28(%r10)
  0x0000028bc118a56d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118a572:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118a57c:   	andq	$-0x10, %rsp
  0x0000028bc118a580:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a58a:   	callq	*%r10
  0x0000028bc118a58d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118a58e:   	movl	0xc(%rsi), %eax
  0x0000028bc118a591:   	shrl	$0x18, %eax
  0x0000028bc118a594:   	andl	$0xf, %eax
  0x0000028bc118a597:   	cmpl	$0x7, %eax
  0x0000028bc118a59a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118a5a0:   	movabsq	$0x28bdc115ae0, %rcx;   {external_word}
  0x0000028bc118a5aa:   	andq	$-0x10, %rsp
  0x0000028bc118a5ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a5b8:   	callq	*%r10
  0x0000028bc118a5bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118a5bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc118a5bf:   	pushq	%r10
  0x0000028bc118a5c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a5cb:   	cmpq	(%r10), %r12
  0x0000028bc118a5ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a5d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a5de:   	andq	$-0x10, %rsp
  0x0000028bc118a5e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a5ec:   	callq	*%r10
  0x0000028bc118a5ef:   	hlt
  0x0000028bc118a5f0:   	popq	%r10
  0x0000028bc118a5f2:   	shlq	$0x3, %rbx
  0x0000028bc118a5f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118a5fa:   	testq	%rbx, %rbx
  0x0000028bc118a5fd:   	je	0x3
  0x0000028bc118a603:   	jmpq	*0x58(%rbx)
  0x0000028bc118a606:   	jmp	-0x5230eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118a60b:   	hlt
  0x0000028bc118a60c:   	hlt
  0x0000028bc118a60d:   	hlt
  0x0000028bc118a60e:   	hlt
  0x0000028bc118a60f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2285   47     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLL)L (native)
 total in heap  [0x0000028bc118a690,0x0000028bc118a908] = 632
 relocation     [0x0000028bc118a7f0,0x0000028bc118a838] = 72
 main code      [0x0000028bc118a840,0x0000028bc118a903] = 195
 stub code      [0x0000028bc118a903,0x0000028bc118a908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c4548} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118a840:   	movl	0x14(%rdx), %ebx
  0x0000028bc118a843:   	pushq	%r10
  0x0000028bc118a845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a84f:   	cmpq	(%r10), %r12
  0x0000028bc118a852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a862:   	andq	$-0x10, %rsp
  0x0000028bc118a866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a870:   	callq	*%r10
  0x0000028bc118a873:   	hlt
  0x0000028bc118a874:   	popq	%r10
  0x0000028bc118a876:   	shlq	$0x3, %rbx
  0x0000028bc118a87a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118a87d:   	pushq	%r10
  0x0000028bc118a87f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a889:   	cmpq	(%r10), %r12
  0x0000028bc118a88c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a89c:   	andq	$-0x10, %rsp
  0x0000028bc118a8a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a8aa:   	callq	*%r10
  0x0000028bc118a8ad:   	hlt
  0x0000028bc118a8ae:   	popq	%r10
  0x0000028bc118a8b0:   	shlq	$0x3, %rbx
  0x0000028bc118a8b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118a8b7:   	pushq	%r10
  0x0000028bc118a8b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a8c3:   	cmpq	(%r10), %r12
  0x0000028bc118a8c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a8cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a8d6:   	andq	$-0x10, %rsp
  0x0000028bc118a8da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a8e4:   	callq	*%r10
  0x0000028bc118a8e7:   	hlt
  0x0000028bc118a8e8:   	popq	%r10
  0x0000028bc118a8ea:   	shlq	$0x3, %rbx
  0x0000028bc118a8ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118a8f2:   	testq	%rbx, %rbx
  0x0000028bc118a8f5:   	je	0x3
  0x0000028bc118a8fb:   	jmpq	*0x58(%rbx)
  0x0000028bc118a8fe:   	jmp	-0x5233e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118a903:   	hlt
  0x0000028bc118a904:   	hlt
  0x0000028bc118a905:   	hlt
  0x0000028bc118a906:   	hlt
  0x0000028bc118a907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2287   47     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLL)L (native)
 total in heap  [0x0000028bc118a690,0x0000028bc118a908] = 632
 relocation     [0x0000028bc118a7f0,0x0000028bc118a838] = 72
 main code      [0x0000028bc118a840,0x0000028bc118a903] = 195
 stub code      [0x0000028bc118a903,0x0000028bc118a908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c4548} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118a840:   	movl	0x14(%rdx), %ebx
  0x0000028bc118a843:   	pushq	%r10
  0x0000028bc118a845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a84f:   	cmpq	(%r10), %r12
  0x0000028bc118a852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a862:   	andq	$-0x10, %rsp
  0x0000028bc118a866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a870:   	callq	*%r10
  0x0000028bc118a873:   	hlt
  0x0000028bc118a874:   	popq	%r10
  0x0000028bc118a876:   	shlq	$0x3, %rbx
  0x0000028bc118a87a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118a87d:   	pushq	%r10
  0x0000028bc118a87f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a889:   	cmpq	(%r10), %r12
  0x0000028bc118a88c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a89c:   	andq	$-0x10, %rsp
  0x0000028bc118a8a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a8aa:   	callq	*%r10
  0x0000028bc118a8ad:   	hlt
  0x0000028bc118a8ae:   	popq	%r10
  0x0000028bc118a8b0:   	shlq	$0x3, %rbx
  0x0000028bc118a8b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118a8b7:   	pushq	%r10
  0x0000028bc118a8b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118a8c3:   	cmpq	(%r10), %r12
  0x0000028bc118a8c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118a8cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118a8d6:   	andq	$-0x10, %rsp
  0x0000028bc118a8da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118a8e4:   	callq	*%r10
  0x0000028bc118a8e7:   	hlt
  0x0000028bc118a8e8:   	popq	%r10
  0x0000028bc118a8ea:   	shlq	$0x3, %rbx
  0x0000028bc118a8ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118a8f2:   	testq	%rbx, %rbx
  0x0000028bc118a8f5:   	je	0x3
  0x0000028bc118a8fb:   	jmpq	*0x58(%rbx)
  0x0000028bc118a8fe:   	jmp	-0x5233e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118a903:   	hlt
  0x0000028bc118a904:   	hlt
  0x0000028bc118a905:   	hlt
  0x0000028bc118a906:   	hlt
  0x0000028bc118a907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2290   48     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)L (native)
 total in heap  [0x0000028bc118a990,0x0000028bc118ad90] = 1024
 relocation     [0x0000028bc118aaf0,0x0000028bc118ab80] = 144
 main code      [0x0000028bc118ab80,0x0000028bc118ad8b] = 523
 stub code      [0x0000028bc118ad8b,0x0000028bc118ad90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c4680} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118ab80:   	testq	%rsi, %rsi
  0x0000028bc118ab83:   	je	0x40
  0x0000028bc118ab89:   	pushq	%rdi
  0x0000028bc118ab8a:   	pushq	%r10
  0x0000028bc118ab8c:   	movl	0x8(%rsi), %edi
  0x0000028bc118ab8f:   	movabsq	$0x800000000, %r10
  0x0000028bc118ab99:   	addq	%r10, %rdi
  0x0000028bc118ab9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118aba6:   	cmpq	(%r10), %rdi
  0x0000028bc118aba9:   	je	0x36
  0x0000028bc118abaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc118abb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118abbd:   	cmpq	(%r10), %rdi
  0x0000028bc118abc0:   	je	0x1f
  0x0000028bc118abc6:   	popq	%r10
  0x0000028bc118abc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118abc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118abd3:   	andq	$-0x10, %rsp
  0x0000028bc118abd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118abe1:   	callq	*%r10
  0x0000028bc118abe4:   	hlt
 ;; L_ok:
  0x0000028bc118abe5:   	popq	%r10
  0x0000028bc118abe7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118abe8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118abeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc118abef:   	movabsq	$0x800000000, %r11
  0x0000028bc118abf9:   	addq	%r11, %r10
  0x0000028bc118abfc:   	movl	0x18(%rsi), %r11d
  0x0000028bc118ac00:   	pushq	%r10
  0x0000028bc118ac02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ac0c:   	cmpq	(%r10), %r12
  0x0000028bc118ac0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ac15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ac1f:   	andq	$-0x10, %rsp
  0x0000028bc118ac23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ac2d:   	callq	*%r10
  0x0000028bc118ac30:   	hlt
  0x0000028bc118ac31:   	popq	%r10
  0x0000028bc118ac33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118ac37:   	testq	%r11, %r11
  0x0000028bc118ac3a:   	je	0x41
  0x0000028bc118ac40:   	pushq	%rdi
  0x0000028bc118ac41:   	pushq	%r10
  0x0000028bc118ac43:   	movl	0x8(%r11), %edi
  0x0000028bc118ac47:   	movabsq	$0x800000000, %r10
  0x0000028bc118ac51:   	addq	%r10, %rdi
  0x0000028bc118ac54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ac5e:   	cmpq	(%r10), %rdi
  0x0000028bc118ac61:   	je	0x36
  0x0000028bc118ac67:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ac6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ac75:   	cmpq	(%r10), %rdi
  0x0000028bc118ac78:   	je	0x1f
  0x0000028bc118ac7e:   	popq	%r10
  0x0000028bc118ac80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118ac81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118ac8b:   	andq	$-0x10, %rsp
  0x0000028bc118ac8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ac99:   	callq	*%r10
  0x0000028bc118ac9c:   	hlt
 ;; L_ok:
  0x0000028bc118ac9d:   	popq	%r10
  0x0000028bc118ac9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118aca0:   	movq	0x10(%r11), %r11
  0x0000028bc118aca4:   	cmpq	%r11, %r10
  0x0000028bc118aca7:   	je	0x61
  0x0000028bc118acad:   	movl	0x1c(%r11), %eax
  0x0000028bc118acb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118acb5:   	je	0x53
  0x0000028bc118acbb:   	cmpl	$0x28, %eax
  0x0000028bc118acbe:   	jne	0x2e
  0x0000028bc118acc4:   	movq	%r11, %rax
  0x0000028bc118acc7:   	pushq	%rcx
  0x0000028bc118acc8:   	pushq	%rdi
  0x0000028bc118acc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118acd3:   	incl	(%rcx)
  0x0000028bc118acd5:   	movq	0x30(%r10), %rdi
  0x0000028bc118acd9:   	movl	(%rdi), %ecx
  0x0000028bc118acdb:   	addq	$0x8, %rdi
  0x0000028bc118acdf:   	testq	%rax, %rax
  0x0000028bc118ace2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118ace5:   	popq	%rdi
  0x0000028bc118ace6:   	popq	%rcx
  0x0000028bc118ace7:   	jne	0x9
  0x0000028bc118ace9:   	movq	%r11, 0x28(%r10)
  0x0000028bc118aced:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118acf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118acfc:   	andq	$-0x10, %rsp
  0x0000028bc118ad00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ad0a:   	callq	*%r10
  0x0000028bc118ad0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118ad0e:   	movl	0xc(%rsi), %eax
  0x0000028bc118ad11:   	shrl	$0x18, %eax
  0x0000028bc118ad14:   	andl	$0xf, %eax
  0x0000028bc118ad17:   	cmpl	$0x7, %eax
  0x0000028bc118ad1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118ad20:   	movabsq	$0x28bdc115be0, %rcx;   {external_word}
  0x0000028bc118ad2a:   	andq	$-0x10, %rsp
  0x0000028bc118ad2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ad38:   	callq	*%r10
  0x0000028bc118ad3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ad3c:   	movl	0x24(%rsi), %ebx
  0x0000028bc118ad3f:   	pushq	%r10
  0x0000028bc118ad41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ad4b:   	cmpq	(%r10), %r12
  0x0000028bc118ad4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ad54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ad5e:   	andq	$-0x10, %rsp
  0x0000028bc118ad62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ad6c:   	callq	*%r10
  0x0000028bc118ad6f:   	hlt
  0x0000028bc118ad70:   	popq	%r10
  0x0000028bc118ad72:   	shlq	$0x3, %rbx
  0x0000028bc118ad76:   	movq	0x10(%rbx), %rbx
  0x0000028bc118ad7a:   	testq	%rbx, %rbx
  0x0000028bc118ad7d:   	je	0x3
  0x0000028bc118ad83:   	jmpq	*0x58(%rbx)
  0x0000028bc118ad86:   	jmp	-0x52386b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118ad8b:   	hlt
  0x0000028bc118ad8c:   	hlt
  0x0000028bc118ad8d:   	hlt
  0x0000028bc118ad8e:   	hlt
  0x0000028bc118ad8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2294   48     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)L (native)
 total in heap  [0x0000028bc118a990,0x0000028bc118ad90] = 1024
 relocation     [0x0000028bc118aaf0,0x0000028bc118ab80] = 144
 main code      [0x0000028bc118ab80,0x0000028bc118ad8b] = 523
 stub code      [0x0000028bc118ad8b,0x0000028bc118ad90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c4680} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118ab80:   	testq	%rsi, %rsi
  0x0000028bc118ab83:   	je	0x40
  0x0000028bc118ab89:   	pushq	%rdi
  0x0000028bc118ab8a:   	pushq	%r10
  0x0000028bc118ab8c:   	movl	0x8(%rsi), %edi
  0x0000028bc118ab8f:   	movabsq	$0x800000000, %r10
  0x0000028bc118ab99:   	addq	%r10, %rdi
  0x0000028bc118ab9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118aba6:   	cmpq	(%r10), %rdi
  0x0000028bc118aba9:   	je	0x36
  0x0000028bc118abaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc118abb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118abbd:   	cmpq	(%r10), %rdi
  0x0000028bc118abc0:   	je	0x1f
  0x0000028bc118abc6:   	popq	%r10
  0x0000028bc118abc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118abc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118abd3:   	andq	$-0x10, %rsp
  0x0000028bc118abd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118abe1:   	callq	*%r10
  0x0000028bc118abe4:   	hlt
 ;; L_ok:
  0x0000028bc118abe5:   	popq	%r10
  0x0000028bc118abe7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118abe8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118abeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc118abef:   	movabsq	$0x800000000, %r11
  0x0000028bc118abf9:   	addq	%r11, %r10
  0x0000028bc118abfc:   	movl	0x18(%rsi), %r11d
  0x0000028bc118ac00:   	pushq	%r10
  0x0000028bc118ac02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ac0c:   	cmpq	(%r10), %r12
  0x0000028bc118ac0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ac15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ac1f:   	andq	$-0x10, %rsp
  0x0000028bc118ac23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ac2d:   	callq	*%r10
  0x0000028bc118ac30:   	hlt
  0x0000028bc118ac31:   	popq	%r10
  0x0000028bc118ac33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118ac37:   	testq	%r11, %r11
  0x0000028bc118ac3a:   	je	0x41
  0x0000028bc118ac40:   	pushq	%rdi
  0x0000028bc118ac41:   	pushq	%r10
  0x0000028bc118ac43:   	movl	0x8(%r11), %edi
  0x0000028bc118ac47:   	movabsq	$0x800000000, %r10
  0x0000028bc118ac51:   	addq	%r10, %rdi
  0x0000028bc118ac54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ac5e:   	cmpq	(%r10), %rdi
  0x0000028bc118ac61:   	je	0x36
  0x0000028bc118ac67:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ac6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ac75:   	cmpq	(%r10), %rdi
  0x0000028bc118ac78:   	je	0x1f
  0x0000028bc118ac7e:   	popq	%r10
  0x0000028bc118ac80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118ac81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118ac8b:   	andq	$-0x10, %rsp
  0x0000028bc118ac8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ac99:   	callq	*%r10
  0x0000028bc118ac9c:   	hlt
 ;; L_ok:
  0x0000028bc118ac9d:   	popq	%r10
  0x0000028bc118ac9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118aca0:   	movq	0x10(%r11), %r11
  0x0000028bc118aca4:   	cmpq	%r11, %r10
  0x0000028bc118aca7:   	je	0x61
  0x0000028bc118acad:   	movl	0x1c(%r11), %eax
  0x0000028bc118acb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118acb5:   	je	0x53
  0x0000028bc118acbb:   	cmpl	$0x28, %eax
  0x0000028bc118acbe:   	jne	0x2e
  0x0000028bc118acc4:   	movq	%r11, %rax
  0x0000028bc118acc7:   	pushq	%rcx
  0x0000028bc118acc8:   	pushq	%rdi
  0x0000028bc118acc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118acd3:   	incl	(%rcx)
  0x0000028bc118acd5:   	movq	0x30(%r10), %rdi
  0x0000028bc118acd9:   	movl	(%rdi), %ecx
  0x0000028bc118acdb:   	addq	$0x8, %rdi
  0x0000028bc118acdf:   	testq	%rax, %rax
  0x0000028bc118ace2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118ace5:   	popq	%rdi
  0x0000028bc118ace6:   	popq	%rcx
  0x0000028bc118ace7:   	jne	0x9
  0x0000028bc118ace9:   	movq	%r11, 0x28(%r10)
  0x0000028bc118aced:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118acf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118acfc:   	andq	$-0x10, %rsp
  0x0000028bc118ad00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ad0a:   	callq	*%r10
  0x0000028bc118ad0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118ad0e:   	movl	0xc(%rsi), %eax
  0x0000028bc118ad11:   	shrl	$0x18, %eax
  0x0000028bc118ad14:   	andl	$0xf, %eax
  0x0000028bc118ad17:   	cmpl	$0x7, %eax
  0x0000028bc118ad1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118ad20:   	movabsq	$0x28bdc115be0, %rcx;   {external_word}
  0x0000028bc118ad2a:   	andq	$-0x10, %rsp
  0x0000028bc118ad2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ad38:   	callq	*%r10
  0x0000028bc118ad3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ad3c:   	movl	0x24(%rsi), %ebx
  0x0000028bc118ad3f:   	pushq	%r10
  0x0000028bc118ad41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ad4b:   	cmpq	(%r10), %r12
  0x0000028bc118ad4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ad54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ad5e:   	andq	$-0x10, %rsp
  0x0000028bc118ad62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ad6c:   	callq	*%r10
  0x0000028bc118ad6f:   	hlt
  0x0000028bc118ad70:   	popq	%r10
  0x0000028bc118ad72:   	shlq	$0x3, %rbx
  0x0000028bc118ad76:   	movq	0x10(%rbx), %rbx
  0x0000028bc118ad7a:   	testq	%rbx, %rbx
  0x0000028bc118ad7d:   	je	0x3
  0x0000028bc118ad83:   	jmpq	*0x58(%rbx)
  0x0000028bc118ad86:   	jmp	-0x52386b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118ad8b:   	hlt
  0x0000028bc118ad8c:   	hlt
  0x0000028bc118ad8d:   	hlt
  0x0000028bc118ad8e:   	hlt
  0x0000028bc118ad8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2315   49     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLJ)L (native)
 total in heap  [0x0000028bc118ae10,0x0000028bc118b088] = 632
 relocation     [0x0000028bc118af70,0x0000028bc118afb8] = 72
 main code      [0x0000028bc118afc0,0x0000028bc118b083] = 195
 stub code      [0x0000028bc118b083,0x0000028bc118b088] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c5fa0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118afc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118afc3:   	pushq	%r10
  0x0000028bc118afc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118afcf:   	cmpq	(%r10), %r12
  0x0000028bc118afd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118afd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118afe2:   	andq	$-0x10, %rsp
  0x0000028bc118afe6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118aff0:   	callq	*%r10
  0x0000028bc118aff3:   	hlt
  0x0000028bc118aff4:   	popq	%r10
  0x0000028bc118aff6:   	shlq	$0x3, %rbx
  0x0000028bc118affa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118affd:   	pushq	%r10
  0x0000028bc118afff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b009:   	cmpq	(%r10), %r12
  0x0000028bc118b00c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b012:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b01c:   	andq	$-0x10, %rsp
  0x0000028bc118b020:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b02a:   	callq	*%r10
  0x0000028bc118b02d:   	hlt
  0x0000028bc118b02e:   	popq	%r10
  0x0000028bc118b030:   	shlq	$0x3, %rbx
  0x0000028bc118b034:   	movl	0x24(%rbx), %ebx
  0x0000028bc118b037:   	pushq	%r10
  0x0000028bc118b039:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b043:   	cmpq	(%r10), %r12
  0x0000028bc118b046:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b04c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b056:   	andq	$-0x10, %rsp
  0x0000028bc118b05a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b064:   	callq	*%r10
  0x0000028bc118b067:   	hlt
  0x0000028bc118b068:   	popq	%r10
  0x0000028bc118b06a:   	shlq	$0x3, %rbx
  0x0000028bc118b06e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118b072:   	testq	%rbx, %rbx
  0x0000028bc118b075:   	je	0x3
  0x0000028bc118b07b:   	jmpq	*0x58(%rbx)
  0x0000028bc118b07e:   	jmp	-0x523b63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118b083:   	hlt
  0x0000028bc118b084:   	hlt
  0x0000028bc118b085:   	hlt
  0x0000028bc118b086:   	hlt
  0x0000028bc118b087:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2317   49     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLJ)L (native)
 total in heap  [0x0000028bc118ae10,0x0000028bc118b088] = 632
 relocation     [0x0000028bc118af70,0x0000028bc118afb8] = 72
 main code      [0x0000028bc118afc0,0x0000028bc118b083] = 195
 stub code      [0x0000028bc118b083,0x0000028bc118b088] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c5fa0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118afc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118afc3:   	pushq	%r10
  0x0000028bc118afc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118afcf:   	cmpq	(%r10), %r12
  0x0000028bc118afd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118afd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118afe2:   	andq	$-0x10, %rsp
  0x0000028bc118afe6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118aff0:   	callq	*%r10
  0x0000028bc118aff3:   	hlt
  0x0000028bc118aff4:   	popq	%r10
  0x0000028bc118aff6:   	shlq	$0x3, %rbx
  0x0000028bc118affa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118affd:   	pushq	%r10
  0x0000028bc118afff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b009:   	cmpq	(%r10), %r12
  0x0000028bc118b00c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b012:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b01c:   	andq	$-0x10, %rsp
  0x0000028bc118b020:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b02a:   	callq	*%r10
  0x0000028bc118b02d:   	hlt
  0x0000028bc118b02e:   	popq	%r10
  0x0000028bc118b030:   	shlq	$0x3, %rbx
  0x0000028bc118b034:   	movl	0x24(%rbx), %ebx
  0x0000028bc118b037:   	pushq	%r10
  0x0000028bc118b039:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b043:   	cmpq	(%r10), %r12
  0x0000028bc118b046:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b04c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b056:   	andq	$-0x10, %rsp
  0x0000028bc118b05a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b064:   	callq	*%r10
  0x0000028bc118b067:   	hlt
  0x0000028bc118b068:   	popq	%r10
  0x0000028bc118b06a:   	shlq	$0x3, %rbx
  0x0000028bc118b06e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118b072:   	testq	%rbx, %rbx
  0x0000028bc118b075:   	je	0x3
  0x0000028bc118b07b:   	jmpq	*0x58(%rbx)
  0x0000028bc118b07e:   	jmp	-0x523b63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118b083:   	hlt
  0x0000028bc118b084:   	hlt
  0x0000028bc118b085:   	hlt
  0x0000028bc118b086:   	hlt
  0x0000028bc118b087:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2320   50     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLJL)L (native)
 total in heap  [0x0000028bc118b110,0x0000028bc118b510] = 1024
 relocation     [0x0000028bc118b270,0x0000028bc118b300] = 144
 main code      [0x0000028bc118b300,0x0000028bc118b50b] = 523
 stub code      [0x0000028bc118b50b,0x0000028bc118b510] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c60d8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = long
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118b300:   	testq	%rsi, %rsi
  0x0000028bc118b303:   	je	0x40
  0x0000028bc118b309:   	pushq	%rdi
  0x0000028bc118b30a:   	pushq	%r10
  0x0000028bc118b30c:   	movl	0x8(%rsi), %edi
  0x0000028bc118b30f:   	movabsq	$0x800000000, %r10
  0x0000028bc118b319:   	addq	%r10, %rdi
  0x0000028bc118b31c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b326:   	cmpq	(%r10), %rdi
  0x0000028bc118b329:   	je	0x36
  0x0000028bc118b32f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118b333:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b33d:   	cmpq	(%r10), %rdi
  0x0000028bc118b340:   	je	0x1f
  0x0000028bc118b346:   	popq	%r10
  0x0000028bc118b348:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118b349:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118b353:   	andq	$-0x10, %rsp
  0x0000028bc118b357:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b361:   	callq	*%r10
  0x0000028bc118b364:   	hlt
 ;; L_ok:
  0x0000028bc118b365:   	popq	%r10
  0x0000028bc118b367:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118b368:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118b36b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118b36f:   	movabsq	$0x800000000, %r11
  0x0000028bc118b379:   	addq	%r11, %r10
  0x0000028bc118b37c:   	movl	0x18(%rsi), %r11d
  0x0000028bc118b380:   	pushq	%r10
  0x0000028bc118b382:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b38c:   	cmpq	(%r10), %r12
  0x0000028bc118b38f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b395:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b39f:   	andq	$-0x10, %rsp
  0x0000028bc118b3a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b3ad:   	callq	*%r10
  0x0000028bc118b3b0:   	hlt
  0x0000028bc118b3b1:   	popq	%r10
  0x0000028bc118b3b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118b3b7:   	testq	%r11, %r11
  0x0000028bc118b3ba:   	je	0x41
  0x0000028bc118b3c0:   	pushq	%rdi
  0x0000028bc118b3c1:   	pushq	%r10
  0x0000028bc118b3c3:   	movl	0x8(%r11), %edi
  0x0000028bc118b3c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118b3d1:   	addq	%r10, %rdi
  0x0000028bc118b3d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118b3de:   	cmpq	(%r10), %rdi
  0x0000028bc118b3e1:   	je	0x36
  0x0000028bc118b3e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118b3eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118b3f5:   	cmpq	(%r10), %rdi
  0x0000028bc118b3f8:   	je	0x1f
  0x0000028bc118b3fe:   	popq	%r10
  0x0000028bc118b400:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118b401:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118b40b:   	andq	$-0x10, %rsp
  0x0000028bc118b40f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b419:   	callq	*%r10
  0x0000028bc118b41c:   	hlt
 ;; L_ok:
  0x0000028bc118b41d:   	popq	%r10
  0x0000028bc118b41f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118b420:   	movq	0x10(%r11), %r11
  0x0000028bc118b424:   	cmpq	%r11, %r10
  0x0000028bc118b427:   	je	0x61
  0x0000028bc118b42d:   	movl	0x1c(%r11), %eax
  0x0000028bc118b431:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118b435:   	je	0x53
  0x0000028bc118b43b:   	cmpl	$0x28, %eax
  0x0000028bc118b43e:   	jne	0x2e
  0x0000028bc118b444:   	movq	%r11, %rax
  0x0000028bc118b447:   	pushq	%rcx
  0x0000028bc118b448:   	pushq	%rdi
  0x0000028bc118b449:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118b453:   	incl	(%rcx)
  0x0000028bc118b455:   	movq	0x30(%r10), %rdi
  0x0000028bc118b459:   	movl	(%rdi), %ecx
  0x0000028bc118b45b:   	addq	$0x8, %rdi
  0x0000028bc118b45f:   	testq	%rax, %rax
  0x0000028bc118b462:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118b465:   	popq	%rdi
  0x0000028bc118b466:   	popq	%rcx
  0x0000028bc118b467:   	jne	0x9
  0x0000028bc118b469:   	movq	%r11, 0x28(%r10)
  0x0000028bc118b46d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118b472:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118b47c:   	andq	$-0x10, %rsp
  0x0000028bc118b480:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b48a:   	callq	*%r10
  0x0000028bc118b48d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118b48e:   	movl	0xc(%rsi), %eax
  0x0000028bc118b491:   	shrl	$0x18, %eax
  0x0000028bc118b494:   	andl	$0xf, %eax
  0x0000028bc118b497:   	cmpl	$0x7, %eax
  0x0000028bc118b49a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118b4a0:   	movabsq	$0x28bdc115ee0, %rcx;   {external_word}
  0x0000028bc118b4aa:   	andq	$-0x10, %rsp
  0x0000028bc118b4ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b4b8:   	callq	*%r10
  0x0000028bc118b4bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118b4bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc118b4bf:   	pushq	%r10
  0x0000028bc118b4c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b4cb:   	cmpq	(%r10), %r12
  0x0000028bc118b4ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b4d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b4de:   	andq	$-0x10, %rsp
  0x0000028bc118b4e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b4ec:   	callq	*%r10
  0x0000028bc118b4ef:   	hlt
  0x0000028bc118b4f0:   	popq	%r10
  0x0000028bc118b4f2:   	shlq	$0x3, %rbx
  0x0000028bc118b4f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118b4fa:   	testq	%rbx, %rbx
  0x0000028bc118b4fd:   	je	0x3
  0x0000028bc118b503:   	jmpq	*0x58(%rbx)
  0x0000028bc118b506:   	jmp	-0x523feb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118b50b:   	hlt
  0x0000028bc118b50c:   	hlt
  0x0000028bc118b50d:   	hlt
  0x0000028bc118b50e:   	hlt
  0x0000028bc118b50f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2324   50     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLJL)L (native)
 total in heap  [0x0000028bc118b110,0x0000028bc118b510] = 1024
 relocation     [0x0000028bc118b270,0x0000028bc118b300] = 144
 main code      [0x0000028bc118b300,0x0000028bc118b50b] = 523
 stub code      [0x0000028bc118b50b,0x0000028bc118b510] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c60d8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = long
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118b300:   	testq	%rsi, %rsi
  0x0000028bc118b303:   	je	0x40
  0x0000028bc118b309:   	pushq	%rdi
  0x0000028bc118b30a:   	pushq	%r10
  0x0000028bc118b30c:   	movl	0x8(%rsi), %edi
  0x0000028bc118b30f:   	movabsq	$0x800000000, %r10
  0x0000028bc118b319:   	addq	%r10, %rdi
  0x0000028bc118b31c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b326:   	cmpq	(%r10), %rdi
  0x0000028bc118b329:   	je	0x36
  0x0000028bc118b32f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118b333:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b33d:   	cmpq	(%r10), %rdi
  0x0000028bc118b340:   	je	0x1f
  0x0000028bc118b346:   	popq	%r10
  0x0000028bc118b348:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118b349:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118b353:   	andq	$-0x10, %rsp
  0x0000028bc118b357:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b361:   	callq	*%r10
  0x0000028bc118b364:   	hlt
 ;; L_ok:
  0x0000028bc118b365:   	popq	%r10
  0x0000028bc118b367:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118b368:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118b36b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118b36f:   	movabsq	$0x800000000, %r11
  0x0000028bc118b379:   	addq	%r11, %r10
  0x0000028bc118b37c:   	movl	0x18(%rsi), %r11d
  0x0000028bc118b380:   	pushq	%r10
  0x0000028bc118b382:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b38c:   	cmpq	(%r10), %r12
  0x0000028bc118b38f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b395:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b39f:   	andq	$-0x10, %rsp
  0x0000028bc118b3a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b3ad:   	callq	*%r10
  0x0000028bc118b3b0:   	hlt
  0x0000028bc118b3b1:   	popq	%r10
  0x0000028bc118b3b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118b3b7:   	testq	%r11, %r11
  0x0000028bc118b3ba:   	je	0x41
  0x0000028bc118b3c0:   	pushq	%rdi
  0x0000028bc118b3c1:   	pushq	%r10
  0x0000028bc118b3c3:   	movl	0x8(%r11), %edi
  0x0000028bc118b3c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118b3d1:   	addq	%r10, %rdi
  0x0000028bc118b3d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118b3de:   	cmpq	(%r10), %rdi
  0x0000028bc118b3e1:   	je	0x36
  0x0000028bc118b3e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118b3eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118b3f5:   	cmpq	(%r10), %rdi
  0x0000028bc118b3f8:   	je	0x1f
  0x0000028bc118b3fe:   	popq	%r10
  0x0000028bc118b400:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118b401:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118b40b:   	andq	$-0x10, %rsp
  0x0000028bc118b40f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b419:   	callq	*%r10
  0x0000028bc118b41c:   	hlt
 ;; L_ok:
  0x0000028bc118b41d:   	popq	%r10
  0x0000028bc118b41f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118b420:   	movq	0x10(%r11), %r11
  0x0000028bc118b424:   	cmpq	%r11, %r10
  0x0000028bc118b427:   	je	0x61
  0x0000028bc118b42d:   	movl	0x1c(%r11), %eax
  0x0000028bc118b431:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118b435:   	je	0x53
  0x0000028bc118b43b:   	cmpl	$0x28, %eax
  0x0000028bc118b43e:   	jne	0x2e
  0x0000028bc118b444:   	movq	%r11, %rax
  0x0000028bc118b447:   	pushq	%rcx
  0x0000028bc118b448:   	pushq	%rdi
  0x0000028bc118b449:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118b453:   	incl	(%rcx)
  0x0000028bc118b455:   	movq	0x30(%r10), %rdi
  0x0000028bc118b459:   	movl	(%rdi), %ecx
  0x0000028bc118b45b:   	addq	$0x8, %rdi
  0x0000028bc118b45f:   	testq	%rax, %rax
  0x0000028bc118b462:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118b465:   	popq	%rdi
  0x0000028bc118b466:   	popq	%rcx
  0x0000028bc118b467:   	jne	0x9
  0x0000028bc118b469:   	movq	%r11, 0x28(%r10)
  0x0000028bc118b46d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118b472:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118b47c:   	andq	$-0x10, %rsp
  0x0000028bc118b480:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b48a:   	callq	*%r10
  0x0000028bc118b48d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118b48e:   	movl	0xc(%rsi), %eax
  0x0000028bc118b491:   	shrl	$0x18, %eax
  0x0000028bc118b494:   	andl	$0xf, %eax
  0x0000028bc118b497:   	cmpl	$0x7, %eax
  0x0000028bc118b49a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118b4a0:   	movabsq	$0x28bdc115ee0, %rcx;   {external_word}
  0x0000028bc118b4aa:   	andq	$-0x10, %rsp
  0x0000028bc118b4ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b4b8:   	callq	*%r10
  0x0000028bc118b4bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118b4bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc118b4bf:   	pushq	%r10
  0x0000028bc118b4c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b4cb:   	cmpq	(%r10), %r12
  0x0000028bc118b4ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b4d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b4de:   	andq	$-0x10, %rsp
  0x0000028bc118b4e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b4ec:   	callq	*%r10
  0x0000028bc118b4ef:   	hlt
  0x0000028bc118b4f0:   	popq	%r10
  0x0000028bc118b4f2:   	shlq	$0x3, %rbx
  0x0000028bc118b4f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118b4fa:   	testq	%rbx, %rbx
  0x0000028bc118b4fd:   	je	0x3
  0x0000028bc118b503:   	jmpq	*0x58(%rbx)
  0x0000028bc118b506:   	jmp	-0x523feb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118b50b:   	hlt
  0x0000028bc118b50c:   	hlt
  0x0000028bc118b50d:   	hlt
  0x0000028bc118b50e:   	hlt
  0x0000028bc118b50f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2336   51     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLJL)J (native)
 total in heap  [0x0000028bc118b590,0x0000028bc118b828] = 664
 relocation     [0x0000028bc118b6f0,0x0000028bc118b738] = 72
 main code      [0x0000028bc118b740,0x0000028bc118b825] = 229
 stub code      [0x0000028bc118b825,0x0000028bc118b828] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c6d50} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = long
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118b740:   	testq	%rdi, %rdi
  0x0000028bc118b743:   	je	0x40
  0x0000028bc118b749:   	pushq	%rdi
  0x0000028bc118b74a:   	pushq	%r10
  0x0000028bc118b74c:   	movl	0x8(%rdi), %edi
  0x0000028bc118b74f:   	movabsq	$0x800000000, %r10
  0x0000028bc118b759:   	addq	%r10, %rdi
  0x0000028bc118b75c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b766:   	cmpq	(%r10), %rdi
  0x0000028bc118b769:   	je	0x36
  0x0000028bc118b76f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118b773:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b77d:   	cmpq	(%r10), %rdi
  0x0000028bc118b780:   	je	0x1f
  0x0000028bc118b786:   	popq	%r10
  0x0000028bc118b788:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118b789:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118b793:   	andq	$-0x10, %rsp
  0x0000028bc118b797:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b7a1:   	callq	*%r10
  0x0000028bc118b7a4:   	hlt
 ;; L_ok:
  0x0000028bc118b7a5:   	popq	%r10
  0x0000028bc118b7a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118b7a8:   	movl	0xc(%rdi), %eax
  0x0000028bc118b7ab:   	shrl	$0x18, %eax
  0x0000028bc118b7ae:   	andl	$0xf, %eax
  0x0000028bc118b7b1:   	cmpl	$0x6, %eax
  0x0000028bc118b7b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118b7ba:   	movabsq	$0x28bdc1140e0, %rcx;   {external_word}
  0x0000028bc118b7c4:   	andq	$-0x10, %rsp
  0x0000028bc118b7c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b7d2:   	callq	*%r10
  0x0000028bc118b7d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118b7d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc118b7d9:   	pushq	%r10
  0x0000028bc118b7db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b7e5:   	cmpq	(%r10), %r12
  0x0000028bc118b7e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b7ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b7f8:   	andq	$-0x10, %rsp
  0x0000028bc118b7fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b806:   	callq	*%r10
  0x0000028bc118b809:   	hlt
  0x0000028bc118b80a:   	popq	%r10
  0x0000028bc118b80c:   	shlq	$0x3, %rbx
  0x0000028bc118b810:   	movq	0x10(%rbx), %rbx
  0x0000028bc118b814:   	testq	%rbx, %rbx
  0x0000028bc118b817:   	je	0x3
  0x0000028bc118b81d:   	jmpq	*0x58(%rbx)
  0x0000028bc118b820:   	jmp	-0x524305           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118b825:   	hlt
  0x0000028bc118b826:   	hlt
  0x0000028bc118b827:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2338   51     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLJL)J (native)
 total in heap  [0x0000028bc118b590,0x0000028bc118b828] = 664
 relocation     [0x0000028bc118b6f0,0x0000028bc118b738] = 72
 main code      [0x0000028bc118b740,0x0000028bc118b825] = 229
 stub code      [0x0000028bc118b825,0x0000028bc118b828] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c6d50} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = long
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118b740:   	testq	%rdi, %rdi
  0x0000028bc118b743:   	je	0x40
  0x0000028bc118b749:   	pushq	%rdi
  0x0000028bc118b74a:   	pushq	%r10
  0x0000028bc118b74c:   	movl	0x8(%rdi), %edi
  0x0000028bc118b74f:   	movabsq	$0x800000000, %r10
  0x0000028bc118b759:   	addq	%r10, %rdi
  0x0000028bc118b75c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b766:   	cmpq	(%r10), %rdi
  0x0000028bc118b769:   	je	0x36
  0x0000028bc118b76f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118b773:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118b77d:   	cmpq	(%r10), %rdi
  0x0000028bc118b780:   	je	0x1f
  0x0000028bc118b786:   	popq	%r10
  0x0000028bc118b788:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118b789:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118b793:   	andq	$-0x10, %rsp
  0x0000028bc118b797:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b7a1:   	callq	*%r10
  0x0000028bc118b7a4:   	hlt
 ;; L_ok:
  0x0000028bc118b7a5:   	popq	%r10
  0x0000028bc118b7a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118b7a8:   	movl	0xc(%rdi), %eax
  0x0000028bc118b7ab:   	shrl	$0x18, %eax
  0x0000028bc118b7ae:   	andl	$0xf, %eax
  0x0000028bc118b7b1:   	cmpl	$0x6, %eax
  0x0000028bc118b7b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118b7ba:   	movabsq	$0x28bdc1140e0, %rcx;   {external_word}
  0x0000028bc118b7c4:   	andq	$-0x10, %rsp
  0x0000028bc118b7c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b7d2:   	callq	*%r10
  0x0000028bc118b7d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118b7d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc118b7d9:   	pushq	%r10
  0x0000028bc118b7db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118b7e5:   	cmpq	(%r10), %r12
  0x0000028bc118b7e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118b7ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118b7f8:   	andq	$-0x10, %rsp
  0x0000028bc118b7fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118b806:   	callq	*%r10
  0x0000028bc118b809:   	hlt
  0x0000028bc118b80a:   	popq	%r10
  0x0000028bc118b80c:   	shlq	$0x3, %rbx
  0x0000028bc118b810:   	movq	0x10(%rbx), %rbx
  0x0000028bc118b814:   	testq	%rbx, %rbx
  0x0000028bc118b817:   	je	0x3
  0x0000028bc118b81d:   	jmpq	*0x58(%rbx)
  0x0000028bc118b820:   	jmp	-0x524305           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118b825:   	hlt
  0x0000028bc118b826:   	hlt
  0x0000028bc118b827:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2343   52     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLJ)J (native)
 total in heap  [0x0000028bc118b890,0x0000028bc118bb08] = 632
 relocation     [0x0000028bc118b9f0,0x0000028bc118ba38] = 72
 main code      [0x0000028bc118ba40,0x0000028bc118bb03] = 195
 stub code      [0x0000028bc118bb03,0x0000028bc118bb08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7ad0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;J)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118ba40:   	movl	0x14(%rdx), %ebx
  0x0000028bc118ba43:   	pushq	%r10
  0x0000028bc118ba45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ba4f:   	cmpq	(%r10), %r12
  0x0000028bc118ba52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ba58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ba62:   	andq	$-0x10, %rsp
  0x0000028bc118ba66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ba70:   	callq	*%r10
  0x0000028bc118ba73:   	hlt
  0x0000028bc118ba74:   	popq	%r10
  0x0000028bc118ba76:   	shlq	$0x3, %rbx
  0x0000028bc118ba7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118ba7d:   	pushq	%r10
  0x0000028bc118ba7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ba89:   	cmpq	(%r10), %r12
  0x0000028bc118ba8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ba92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ba9c:   	andq	$-0x10, %rsp
  0x0000028bc118baa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118baaa:   	callq	*%r10
  0x0000028bc118baad:   	hlt
  0x0000028bc118baae:   	popq	%r10
  0x0000028bc118bab0:   	shlq	$0x3, %rbx
  0x0000028bc118bab4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118bab7:   	pushq	%r10
  0x0000028bc118bab9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118bac3:   	cmpq	(%r10), %r12
  0x0000028bc118bac6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118bacc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118bad6:   	andq	$-0x10, %rsp
  0x0000028bc118bada:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bae4:   	callq	*%r10
  0x0000028bc118bae7:   	hlt
  0x0000028bc118bae8:   	popq	%r10
  0x0000028bc118baea:   	shlq	$0x3, %rbx
  0x0000028bc118baee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118baf2:   	testq	%rbx, %rbx
  0x0000028bc118baf5:   	je	0x3
  0x0000028bc118bafb:   	jmpq	*0x58(%rbx)
  0x0000028bc118bafe:   	jmp	-0x5245e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118bb03:   	hlt
  0x0000028bc118bb04:   	hlt
  0x0000028bc118bb05:   	hlt
  0x0000028bc118bb06:   	hlt
  0x0000028bc118bb07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2346   52     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLJ)J (native)
 total in heap  [0x0000028bc118b890,0x0000028bc118bb08] = 632
 relocation     [0x0000028bc118b9f0,0x0000028bc118ba38] = 72
 main code      [0x0000028bc118ba40,0x0000028bc118bb03] = 195
 stub code      [0x0000028bc118bb03,0x0000028bc118bb08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7ad0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;J)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118ba40:   	movl	0x14(%rdx), %ebx
  0x0000028bc118ba43:   	pushq	%r10
  0x0000028bc118ba45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ba4f:   	cmpq	(%r10), %r12
  0x0000028bc118ba52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ba58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ba62:   	andq	$-0x10, %rsp
  0x0000028bc118ba66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ba70:   	callq	*%r10
  0x0000028bc118ba73:   	hlt
  0x0000028bc118ba74:   	popq	%r10
  0x0000028bc118ba76:   	shlq	$0x3, %rbx
  0x0000028bc118ba7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118ba7d:   	pushq	%r10
  0x0000028bc118ba7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ba89:   	cmpq	(%r10), %r12
  0x0000028bc118ba8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ba92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ba9c:   	andq	$-0x10, %rsp
  0x0000028bc118baa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118baaa:   	callq	*%r10
  0x0000028bc118baad:   	hlt
  0x0000028bc118baae:   	popq	%r10
  0x0000028bc118bab0:   	shlq	$0x3, %rbx
  0x0000028bc118bab4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118bab7:   	pushq	%r10
  0x0000028bc118bab9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118bac3:   	cmpq	(%r10), %r12
  0x0000028bc118bac6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118bacc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118bad6:   	andq	$-0x10, %rsp
  0x0000028bc118bada:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bae4:   	callq	*%r10
  0x0000028bc118bae7:   	hlt
  0x0000028bc118bae8:   	popq	%r10
  0x0000028bc118baea:   	shlq	$0x3, %rbx
  0x0000028bc118baee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118baf2:   	testq	%rbx, %rbx
  0x0000028bc118baf5:   	je	0x3
  0x0000028bc118bafb:   	jmpq	*0x58(%rbx)
  0x0000028bc118bafe:   	jmp	-0x5245e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118bb03:   	hlt
  0x0000028bc118bb04:   	hlt
  0x0000028bc118bb05:   	hlt
  0x0000028bc118bb06:   	hlt
  0x0000028bc118bb07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2349   53     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLJL)J (native)
 total in heap  [0x0000028bc118bb90,0x0000028bc118bf90] = 1024
 relocation     [0x0000028bc118bcf0,0x0000028bc118bd80] = 144
 main code      [0x0000028bc118bd80,0x0000028bc118bf8b] = 523
 stub code      [0x0000028bc118bf8b,0x0000028bc118bf90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7c08} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = long
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118bd80:   	testq	%rsi, %rsi
  0x0000028bc118bd83:   	je	0x40
  0x0000028bc118bd89:   	pushq	%rdi
  0x0000028bc118bd8a:   	pushq	%r10
  0x0000028bc118bd8c:   	movl	0x8(%rsi), %edi
  0x0000028bc118bd8f:   	movabsq	$0x800000000, %r10
  0x0000028bc118bd99:   	addq	%r10, %rdi
  0x0000028bc118bd9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118bda6:   	cmpq	(%r10), %rdi
  0x0000028bc118bda9:   	je	0x36
  0x0000028bc118bdaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc118bdb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118bdbd:   	cmpq	(%r10), %rdi
  0x0000028bc118bdc0:   	je	0x1f
  0x0000028bc118bdc6:   	popq	%r10
  0x0000028bc118bdc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118bdc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118bdd3:   	andq	$-0x10, %rsp
  0x0000028bc118bdd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bde1:   	callq	*%r10
  0x0000028bc118bde4:   	hlt
 ;; L_ok:
  0x0000028bc118bde5:   	popq	%r10
  0x0000028bc118bde7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118bde8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118bdeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc118bdef:   	movabsq	$0x800000000, %r11
  0x0000028bc118bdf9:   	addq	%r11, %r10
  0x0000028bc118bdfc:   	movl	0x18(%rsi), %r11d
  0x0000028bc118be00:   	pushq	%r10
  0x0000028bc118be02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118be0c:   	cmpq	(%r10), %r12
  0x0000028bc118be0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118be15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118be1f:   	andq	$-0x10, %rsp
  0x0000028bc118be23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118be2d:   	callq	*%r10
  0x0000028bc118be30:   	hlt
  0x0000028bc118be31:   	popq	%r10
  0x0000028bc118be33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118be37:   	testq	%r11, %r11
  0x0000028bc118be3a:   	je	0x41
  0x0000028bc118be40:   	pushq	%rdi
  0x0000028bc118be41:   	pushq	%r10
  0x0000028bc118be43:   	movl	0x8(%r11), %edi
  0x0000028bc118be47:   	movabsq	$0x800000000, %r10
  0x0000028bc118be51:   	addq	%r10, %rdi
  0x0000028bc118be54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118be5e:   	cmpq	(%r10), %rdi
  0x0000028bc118be61:   	je	0x36
  0x0000028bc118be67:   	movq	0x40(%rdi), %rdi
  0x0000028bc118be6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118be75:   	cmpq	(%r10), %rdi
  0x0000028bc118be78:   	je	0x1f
  0x0000028bc118be7e:   	popq	%r10
  0x0000028bc118be80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118be81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118be8b:   	andq	$-0x10, %rsp
  0x0000028bc118be8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118be99:   	callq	*%r10
  0x0000028bc118be9c:   	hlt
 ;; L_ok:
  0x0000028bc118be9d:   	popq	%r10
  0x0000028bc118be9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118bea0:   	movq	0x10(%r11), %r11
  0x0000028bc118bea4:   	cmpq	%r11, %r10
  0x0000028bc118bea7:   	je	0x61
  0x0000028bc118bead:   	movl	0x1c(%r11), %eax
  0x0000028bc118beb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118beb5:   	je	0x53
  0x0000028bc118bebb:   	cmpl	$0x28, %eax
  0x0000028bc118bebe:   	jne	0x2e
  0x0000028bc118bec4:   	movq	%r11, %rax
  0x0000028bc118bec7:   	pushq	%rcx
  0x0000028bc118bec8:   	pushq	%rdi
  0x0000028bc118bec9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118bed3:   	incl	(%rcx)
  0x0000028bc118bed5:   	movq	0x30(%r10), %rdi
  0x0000028bc118bed9:   	movl	(%rdi), %ecx
  0x0000028bc118bedb:   	addq	$0x8, %rdi
  0x0000028bc118bedf:   	testq	%rax, %rax
  0x0000028bc118bee2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118bee5:   	popq	%rdi
  0x0000028bc118bee6:   	popq	%rcx
  0x0000028bc118bee7:   	jne	0x9
  0x0000028bc118bee9:   	movq	%r11, 0x28(%r10)
  0x0000028bc118beed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118bef2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118befc:   	andq	$-0x10, %rsp
  0x0000028bc118bf00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bf0a:   	callq	*%r10
  0x0000028bc118bf0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118bf0e:   	movl	0xc(%rsi), %eax
  0x0000028bc118bf11:   	shrl	$0x18, %eax
  0x0000028bc118bf14:   	andl	$0xf, %eax
  0x0000028bc118bf17:   	cmpl	$0x7, %eax
  0x0000028bc118bf1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118bf20:   	movabsq	$0x28bb7e96ba0, %rcx;   {external_word}
  0x0000028bc118bf2a:   	andq	$-0x10, %rsp
  0x0000028bc118bf2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bf38:   	callq	*%r10
  0x0000028bc118bf3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118bf3c:   	movl	0x24(%rsi), %ebx
  0x0000028bc118bf3f:   	pushq	%r10
  0x0000028bc118bf41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118bf4b:   	cmpq	(%r10), %r12
  0x0000028bc118bf4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118bf54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118bf5e:   	andq	$-0x10, %rsp
  0x0000028bc118bf62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bf6c:   	callq	*%r10
  0x0000028bc118bf6f:   	hlt
  0x0000028bc118bf70:   	popq	%r10
  0x0000028bc118bf72:   	shlq	$0x3, %rbx
  0x0000028bc118bf76:   	movq	0x10(%rbx), %rbx
  0x0000028bc118bf7a:   	testq	%rbx, %rbx
  0x0000028bc118bf7d:   	je	0x3
  0x0000028bc118bf83:   	jmpq	*0x58(%rbx)
  0x0000028bc118bf86:   	jmp	-0x524a6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118bf8b:   	hlt
  0x0000028bc118bf8c:   	hlt
  0x0000028bc118bf8d:   	hlt
  0x0000028bc118bf8e:   	hlt
  0x0000028bc118bf8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2353   53     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLJL)J (native)
 total in heap  [0x0000028bc118bb90,0x0000028bc118bf90] = 1024
 relocation     [0x0000028bc118bcf0,0x0000028bc118bd80] = 144
 main code      [0x0000028bc118bd80,0x0000028bc118bf8b] = 523
 stub code      [0x0000028bc118bf8b,0x0000028bc118bf90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7c08} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = long
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118bd80:   	testq	%rsi, %rsi
  0x0000028bc118bd83:   	je	0x40
  0x0000028bc118bd89:   	pushq	%rdi
  0x0000028bc118bd8a:   	pushq	%r10
  0x0000028bc118bd8c:   	movl	0x8(%rsi), %edi
  0x0000028bc118bd8f:   	movabsq	$0x800000000, %r10
  0x0000028bc118bd99:   	addq	%r10, %rdi
  0x0000028bc118bd9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118bda6:   	cmpq	(%r10), %rdi
  0x0000028bc118bda9:   	je	0x36
  0x0000028bc118bdaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc118bdb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118bdbd:   	cmpq	(%r10), %rdi
  0x0000028bc118bdc0:   	je	0x1f
  0x0000028bc118bdc6:   	popq	%r10
  0x0000028bc118bdc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118bdc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118bdd3:   	andq	$-0x10, %rsp
  0x0000028bc118bdd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bde1:   	callq	*%r10
  0x0000028bc118bde4:   	hlt
 ;; L_ok:
  0x0000028bc118bde5:   	popq	%r10
  0x0000028bc118bde7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118bde8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118bdeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc118bdef:   	movabsq	$0x800000000, %r11
  0x0000028bc118bdf9:   	addq	%r11, %r10
  0x0000028bc118bdfc:   	movl	0x18(%rsi), %r11d
  0x0000028bc118be00:   	pushq	%r10
  0x0000028bc118be02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118be0c:   	cmpq	(%r10), %r12
  0x0000028bc118be0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118be15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118be1f:   	andq	$-0x10, %rsp
  0x0000028bc118be23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118be2d:   	callq	*%r10
  0x0000028bc118be30:   	hlt
  0x0000028bc118be31:   	popq	%r10
  0x0000028bc118be33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118be37:   	testq	%r11, %r11
  0x0000028bc118be3a:   	je	0x41
  0x0000028bc118be40:   	pushq	%rdi
  0x0000028bc118be41:   	pushq	%r10
  0x0000028bc118be43:   	movl	0x8(%r11), %edi
  0x0000028bc118be47:   	movabsq	$0x800000000, %r10
  0x0000028bc118be51:   	addq	%r10, %rdi
  0x0000028bc118be54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118be5e:   	cmpq	(%r10), %rdi
  0x0000028bc118be61:   	je	0x36
  0x0000028bc118be67:   	movq	0x40(%rdi), %rdi
  0x0000028bc118be6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118be75:   	cmpq	(%r10), %rdi
  0x0000028bc118be78:   	je	0x1f
  0x0000028bc118be7e:   	popq	%r10
  0x0000028bc118be80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118be81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118be8b:   	andq	$-0x10, %rsp
  0x0000028bc118be8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118be99:   	callq	*%r10
  0x0000028bc118be9c:   	hlt
 ;; L_ok:
  0x0000028bc118be9d:   	popq	%r10
  0x0000028bc118be9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118bea0:   	movq	0x10(%r11), %r11
  0x0000028bc118bea4:   	cmpq	%r11, %r10
  0x0000028bc118bea7:   	je	0x61
  0x0000028bc118bead:   	movl	0x1c(%r11), %eax
  0x0000028bc118beb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118beb5:   	je	0x53
  0x0000028bc118bebb:   	cmpl	$0x28, %eax
  0x0000028bc118bebe:   	jne	0x2e
  0x0000028bc118bec4:   	movq	%r11, %rax
  0x0000028bc118bec7:   	pushq	%rcx
  0x0000028bc118bec8:   	pushq	%rdi
  0x0000028bc118bec9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118bed3:   	incl	(%rcx)
  0x0000028bc118bed5:   	movq	0x30(%r10), %rdi
  0x0000028bc118bed9:   	movl	(%rdi), %ecx
  0x0000028bc118bedb:   	addq	$0x8, %rdi
  0x0000028bc118bedf:   	testq	%rax, %rax
  0x0000028bc118bee2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118bee5:   	popq	%rdi
  0x0000028bc118bee6:   	popq	%rcx
  0x0000028bc118bee7:   	jne	0x9
  0x0000028bc118bee9:   	movq	%r11, 0x28(%r10)
  0x0000028bc118beed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118bef2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118befc:   	andq	$-0x10, %rsp
  0x0000028bc118bf00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bf0a:   	callq	*%r10
  0x0000028bc118bf0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118bf0e:   	movl	0xc(%rsi), %eax
  0x0000028bc118bf11:   	shrl	$0x18, %eax
  0x0000028bc118bf14:   	andl	$0xf, %eax
  0x0000028bc118bf17:   	cmpl	$0x7, %eax
  0x0000028bc118bf1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118bf20:   	movabsq	$0x28bb7e96ba0, %rcx;   {external_word}
  0x0000028bc118bf2a:   	andq	$-0x10, %rsp
  0x0000028bc118bf2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bf38:   	callq	*%r10
  0x0000028bc118bf3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118bf3c:   	movl	0x24(%rsi), %ebx
  0x0000028bc118bf3f:   	pushq	%r10
  0x0000028bc118bf41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118bf4b:   	cmpq	(%r10), %r12
  0x0000028bc118bf4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118bf54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118bf5e:   	andq	$-0x10, %rsp
  0x0000028bc118bf62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118bf6c:   	callq	*%r10
  0x0000028bc118bf6f:   	hlt
  0x0000028bc118bf70:   	popq	%r10
  0x0000028bc118bf72:   	shlq	$0x3, %rbx
  0x0000028bc118bf76:   	movq	0x10(%rbx), %rbx
  0x0000028bc118bf7a:   	testq	%rbx, %rbx
  0x0000028bc118bf7d:   	je	0x3
  0x0000028bc118bf83:   	jmpq	*0x58(%rbx)
  0x0000028bc118bf86:   	jmp	-0x524a6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118bf8b:   	hlt
  0x0000028bc118bf8c:   	hlt
  0x0000028bc118bf8d:   	hlt
  0x0000028bc118bf8e:   	hlt
  0x0000028bc118bf8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2361   54     n 0       java.lang.invoke.MethodHandle::invokeBasic(J)L (native)
 total in heap  [0x0000028bc118c010,0x0000028bc118c288] = 632
 relocation     [0x0000028bc118c170,0x0000028bc118c1b8] = 72
 main code      [0x0000028bc118c1c0,0x0000028bc118c283] = 195
 stub code      [0x0000028bc118c283,0x0000028bc118c288] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7e00} 'invokeBasic' '(J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118c1c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118c1c3:   	pushq	%r10
  0x0000028bc118c1c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c1cf:   	cmpq	(%r10), %r12
  0x0000028bc118c1d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c1d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c1e2:   	andq	$-0x10, %rsp
  0x0000028bc118c1e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c1f0:   	callq	*%r10
  0x0000028bc118c1f3:   	hlt
  0x0000028bc118c1f4:   	popq	%r10
  0x0000028bc118c1f6:   	shlq	$0x3, %rbx
  0x0000028bc118c1fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118c1fd:   	pushq	%r10
  0x0000028bc118c1ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c209:   	cmpq	(%r10), %r12
  0x0000028bc118c20c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c212:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c21c:   	andq	$-0x10, %rsp
  0x0000028bc118c220:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c22a:   	callq	*%r10
  0x0000028bc118c22d:   	hlt
  0x0000028bc118c22e:   	popq	%r10
  0x0000028bc118c230:   	shlq	$0x3, %rbx
  0x0000028bc118c234:   	movl	0x24(%rbx), %ebx
  0x0000028bc118c237:   	pushq	%r10
  0x0000028bc118c239:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c243:   	cmpq	(%r10), %r12
  0x0000028bc118c246:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c24c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c256:   	andq	$-0x10, %rsp
  0x0000028bc118c25a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c264:   	callq	*%r10
  0x0000028bc118c267:   	hlt
  0x0000028bc118c268:   	popq	%r10
  0x0000028bc118c26a:   	shlq	$0x3, %rbx
  0x0000028bc118c26e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118c272:   	testq	%rbx, %rbx
  0x0000028bc118c275:   	je	0x3
  0x0000028bc118c27b:   	jmpq	*0x58(%rbx)
  0x0000028bc118c27e:   	jmp	-0x524d63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118c283:   	hlt
  0x0000028bc118c284:   	hlt
  0x0000028bc118c285:   	hlt
  0x0000028bc118c286:   	hlt
  0x0000028bc118c287:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2363   54     n 0       java.lang.invoke.MethodHandle::invokeBasic(J)L (native)
 total in heap  [0x0000028bc118c010,0x0000028bc118c288] = 632
 relocation     [0x0000028bc118c170,0x0000028bc118c1b8] = 72
 main code      [0x0000028bc118c1c0,0x0000028bc118c283] = 195
 stub code      [0x0000028bc118c283,0x0000028bc118c288] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7e00} 'invokeBasic' '(J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118c1c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118c1c3:   	pushq	%r10
  0x0000028bc118c1c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c1cf:   	cmpq	(%r10), %r12
  0x0000028bc118c1d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c1d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c1e2:   	andq	$-0x10, %rsp
  0x0000028bc118c1e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c1f0:   	callq	*%r10
  0x0000028bc118c1f3:   	hlt
  0x0000028bc118c1f4:   	popq	%r10
  0x0000028bc118c1f6:   	shlq	$0x3, %rbx
  0x0000028bc118c1fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118c1fd:   	pushq	%r10
  0x0000028bc118c1ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c209:   	cmpq	(%r10), %r12
  0x0000028bc118c20c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c212:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c21c:   	andq	$-0x10, %rsp
  0x0000028bc118c220:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c22a:   	callq	*%r10
  0x0000028bc118c22d:   	hlt
  0x0000028bc118c22e:   	popq	%r10
  0x0000028bc118c230:   	shlq	$0x3, %rbx
  0x0000028bc118c234:   	movl	0x24(%rbx), %ebx
  0x0000028bc118c237:   	pushq	%r10
  0x0000028bc118c239:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c243:   	cmpq	(%r10), %r12
  0x0000028bc118c246:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c24c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c256:   	andq	$-0x10, %rsp
  0x0000028bc118c25a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c264:   	callq	*%r10
  0x0000028bc118c267:   	hlt
  0x0000028bc118c268:   	popq	%r10
  0x0000028bc118c26a:   	shlq	$0x3, %rbx
  0x0000028bc118c26e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118c272:   	testq	%rbx, %rbx
  0x0000028bc118c275:   	je	0x3
  0x0000028bc118c27b:   	jmpq	*0x58(%rbx)
  0x0000028bc118c27e:   	jmp	-0x524d63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118c283:   	hlt
  0x0000028bc118c284:   	hlt
  0x0000028bc118c285:   	hlt
  0x0000028bc118c286:   	hlt
  0x0000028bc118c287:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2366   55     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJL)L (native)
 total in heap  [0x0000028bc118c310,0x0000028bc118c710] = 1024
 relocation     [0x0000028bc118c470,0x0000028bc118c500] = 144
 main code      [0x0000028bc118c500,0x0000028bc118c70e] = 526
 stub code      [0x0000028bc118c70e,0x0000028bc118c710] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7f38} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118c500:   	testq	%r9, %r9
  0x0000028bc118c503:   	je	0x41
  0x0000028bc118c509:   	pushq	%rdi
  0x0000028bc118c50a:   	pushq	%r10
  0x0000028bc118c50c:   	movl	0x8(%r9), %edi
  0x0000028bc118c510:   	movabsq	$0x800000000, %r10
  0x0000028bc118c51a:   	addq	%r10, %rdi
  0x0000028bc118c51d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c527:   	cmpq	(%r10), %rdi
  0x0000028bc118c52a:   	je	0x36
  0x0000028bc118c530:   	movq	0x40(%rdi), %rdi
  0x0000028bc118c534:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c53e:   	cmpq	(%r10), %rdi
  0x0000028bc118c541:   	je	0x1f
  0x0000028bc118c547:   	popq	%r10
  0x0000028bc118c549:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118c54a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118c554:   	andq	$-0x10, %rsp
  0x0000028bc118c558:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c562:   	callq	*%r10
  0x0000028bc118c565:   	hlt
 ;; L_ok:
  0x0000028bc118c566:   	popq	%r10
  0x0000028bc118c568:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118c569:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118c56c:   	movl	0x8(%rdx), %r10d
  0x0000028bc118c570:   	movabsq	$0x800000000, %r11
  0x0000028bc118c57a:   	addq	%r11, %r10
  0x0000028bc118c57d:   	movl	0x18(%r9), %r11d
  0x0000028bc118c581:   	pushq	%r10
  0x0000028bc118c583:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c58d:   	cmpq	(%r10), %r12
  0x0000028bc118c590:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c596:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c5a0:   	andq	$-0x10, %rsp
  0x0000028bc118c5a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c5ae:   	callq	*%r10
  0x0000028bc118c5b1:   	hlt
  0x0000028bc118c5b2:   	popq	%r10
  0x0000028bc118c5b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118c5b8:   	testq	%r11, %r11
  0x0000028bc118c5bb:   	je	0x41
  0x0000028bc118c5c1:   	pushq	%rdi
  0x0000028bc118c5c2:   	pushq	%r10
  0x0000028bc118c5c4:   	movl	0x8(%r11), %edi
  0x0000028bc118c5c8:   	movabsq	$0x800000000, %r10
  0x0000028bc118c5d2:   	addq	%r10, %rdi
  0x0000028bc118c5d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118c5df:   	cmpq	(%r10), %rdi
  0x0000028bc118c5e2:   	je	0x36
  0x0000028bc118c5e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc118c5ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118c5f6:   	cmpq	(%r10), %rdi
  0x0000028bc118c5f9:   	je	0x1f
  0x0000028bc118c5ff:   	popq	%r10
  0x0000028bc118c601:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118c602:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118c60c:   	andq	$-0x10, %rsp
  0x0000028bc118c610:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c61a:   	callq	*%r10
  0x0000028bc118c61d:   	hlt
 ;; L_ok:
  0x0000028bc118c61e:   	popq	%r10
  0x0000028bc118c620:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118c621:   	movq	0x10(%r11), %r11
  0x0000028bc118c625:   	cmpq	%r11, %r10
  0x0000028bc118c628:   	je	0x61
  0x0000028bc118c62e:   	movl	0x1c(%r11), %eax
  0x0000028bc118c632:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118c636:   	je	0x53
  0x0000028bc118c63c:   	cmpl	$0x28, %eax
  0x0000028bc118c63f:   	jne	0x2e
  0x0000028bc118c645:   	movq	%r11, %rax
  0x0000028bc118c648:   	pushq	%rcx
  0x0000028bc118c649:   	pushq	%rdi
  0x0000028bc118c64a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118c654:   	incl	(%rcx)
  0x0000028bc118c656:   	movq	0x30(%r10), %rdi
  0x0000028bc118c65a:   	movl	(%rdi), %ecx
  0x0000028bc118c65c:   	addq	$0x8, %rdi
  0x0000028bc118c660:   	testq	%rax, %rax
  0x0000028bc118c663:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118c666:   	popq	%rdi
  0x0000028bc118c667:   	popq	%rcx
  0x0000028bc118c668:   	jne	0x9
  0x0000028bc118c66a:   	movq	%r11, 0x28(%r10)
  0x0000028bc118c66e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118c673:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118c67d:   	andq	$-0x10, %rsp
  0x0000028bc118c681:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c68b:   	callq	*%r10
  0x0000028bc118c68e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118c68f:   	movl	0xc(%r9), %eax
  0x0000028bc118c693:   	shrl	$0x18, %eax
  0x0000028bc118c696:   	andl	$0xf, %eax
  0x0000028bc118c699:   	cmpl	$0x7, %eax
  0x0000028bc118c69c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118c6a2:   	movabsq	$0x28bdc210b10, %rcx;   {external_word}
  0x0000028bc118c6ac:   	andq	$-0x10, %rsp
  0x0000028bc118c6b0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c6ba:   	callq	*%r10
  0x0000028bc118c6bd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118c6be:   	movl	0x24(%r9), %ebx
  0x0000028bc118c6c2:   	pushq	%r10
  0x0000028bc118c6c4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c6ce:   	cmpq	(%r10), %r12
  0x0000028bc118c6d1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c6d7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c6e1:   	andq	$-0x10, %rsp
  0x0000028bc118c6e5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c6ef:   	callq	*%r10
  0x0000028bc118c6f2:   	hlt
  0x0000028bc118c6f3:   	popq	%r10
  0x0000028bc118c6f5:   	shlq	$0x3, %rbx
  0x0000028bc118c6f9:   	movq	0x10(%rbx), %rbx
  0x0000028bc118c6fd:   	testq	%rbx, %rbx
  0x0000028bc118c700:   	je	0x3
  0x0000028bc118c706:   	jmpq	*0x58(%rbx)
  0x0000028bc118c709:   	jmp	-0x5251ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118c70e:   	hlt
  0x0000028bc118c70f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2371   55     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJL)L (native)
 total in heap  [0x0000028bc118c310,0x0000028bc118c710] = 1024
 relocation     [0x0000028bc118c470,0x0000028bc118c500] = 144
 main code      [0x0000028bc118c500,0x0000028bc118c70e] = 526
 stub code      [0x0000028bc118c70e,0x0000028bc118c710] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83c7f38} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118c500:   	testq	%r9, %r9
  0x0000028bc118c503:   	je	0x41
  0x0000028bc118c509:   	pushq	%rdi
  0x0000028bc118c50a:   	pushq	%r10
  0x0000028bc118c50c:   	movl	0x8(%r9), %edi
  0x0000028bc118c510:   	movabsq	$0x800000000, %r10
  0x0000028bc118c51a:   	addq	%r10, %rdi
  0x0000028bc118c51d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c527:   	cmpq	(%r10), %rdi
  0x0000028bc118c52a:   	je	0x36
  0x0000028bc118c530:   	movq	0x40(%rdi), %rdi
  0x0000028bc118c534:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c53e:   	cmpq	(%r10), %rdi
  0x0000028bc118c541:   	je	0x1f
  0x0000028bc118c547:   	popq	%r10
  0x0000028bc118c549:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118c54a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118c554:   	andq	$-0x10, %rsp
  0x0000028bc118c558:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c562:   	callq	*%r10
  0x0000028bc118c565:   	hlt
 ;; L_ok:
  0x0000028bc118c566:   	popq	%r10
  0x0000028bc118c568:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118c569:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118c56c:   	movl	0x8(%rdx), %r10d
  0x0000028bc118c570:   	movabsq	$0x800000000, %r11
  0x0000028bc118c57a:   	addq	%r11, %r10
  0x0000028bc118c57d:   	movl	0x18(%r9), %r11d
  0x0000028bc118c581:   	pushq	%r10
  0x0000028bc118c583:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c58d:   	cmpq	(%r10), %r12
  0x0000028bc118c590:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c596:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c5a0:   	andq	$-0x10, %rsp
  0x0000028bc118c5a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c5ae:   	callq	*%r10
  0x0000028bc118c5b1:   	hlt
  0x0000028bc118c5b2:   	popq	%r10
  0x0000028bc118c5b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118c5b8:   	testq	%r11, %r11
  0x0000028bc118c5bb:   	je	0x41
  0x0000028bc118c5c1:   	pushq	%rdi
  0x0000028bc118c5c2:   	pushq	%r10
  0x0000028bc118c5c4:   	movl	0x8(%r11), %edi
  0x0000028bc118c5c8:   	movabsq	$0x800000000, %r10
  0x0000028bc118c5d2:   	addq	%r10, %rdi
  0x0000028bc118c5d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118c5df:   	cmpq	(%r10), %rdi
  0x0000028bc118c5e2:   	je	0x36
  0x0000028bc118c5e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc118c5ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118c5f6:   	cmpq	(%r10), %rdi
  0x0000028bc118c5f9:   	je	0x1f
  0x0000028bc118c5ff:   	popq	%r10
  0x0000028bc118c601:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118c602:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118c60c:   	andq	$-0x10, %rsp
  0x0000028bc118c610:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c61a:   	callq	*%r10
  0x0000028bc118c61d:   	hlt
 ;; L_ok:
  0x0000028bc118c61e:   	popq	%r10
  0x0000028bc118c620:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118c621:   	movq	0x10(%r11), %r11
  0x0000028bc118c625:   	cmpq	%r11, %r10
  0x0000028bc118c628:   	je	0x61
  0x0000028bc118c62e:   	movl	0x1c(%r11), %eax
  0x0000028bc118c632:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118c636:   	je	0x53
  0x0000028bc118c63c:   	cmpl	$0x28, %eax
  0x0000028bc118c63f:   	jne	0x2e
  0x0000028bc118c645:   	movq	%r11, %rax
  0x0000028bc118c648:   	pushq	%rcx
  0x0000028bc118c649:   	pushq	%rdi
  0x0000028bc118c64a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118c654:   	incl	(%rcx)
  0x0000028bc118c656:   	movq	0x30(%r10), %rdi
  0x0000028bc118c65a:   	movl	(%rdi), %ecx
  0x0000028bc118c65c:   	addq	$0x8, %rdi
  0x0000028bc118c660:   	testq	%rax, %rax
  0x0000028bc118c663:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118c666:   	popq	%rdi
  0x0000028bc118c667:   	popq	%rcx
  0x0000028bc118c668:   	jne	0x9
  0x0000028bc118c66a:   	movq	%r11, 0x28(%r10)
  0x0000028bc118c66e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118c673:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118c67d:   	andq	$-0x10, %rsp
  0x0000028bc118c681:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c68b:   	callq	*%r10
  0x0000028bc118c68e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118c68f:   	movl	0xc(%r9), %eax
  0x0000028bc118c693:   	shrl	$0x18, %eax
  0x0000028bc118c696:   	andl	$0xf, %eax
  0x0000028bc118c699:   	cmpl	$0x7, %eax
  0x0000028bc118c69c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118c6a2:   	movabsq	$0x28bdc210b10, %rcx;   {external_word}
  0x0000028bc118c6ac:   	andq	$-0x10, %rsp
  0x0000028bc118c6b0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c6ba:   	callq	*%r10
  0x0000028bc118c6bd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118c6be:   	movl	0x24(%r9), %ebx
  0x0000028bc118c6c2:   	pushq	%r10
  0x0000028bc118c6c4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118c6ce:   	cmpq	(%r10), %r12
  0x0000028bc118c6d1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118c6d7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118c6e1:   	andq	$-0x10, %rsp
  0x0000028bc118c6e5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c6ef:   	callq	*%r10
  0x0000028bc118c6f2:   	hlt
  0x0000028bc118c6f3:   	popq	%r10
  0x0000028bc118c6f5:   	shlq	$0x3, %rbx
  0x0000028bc118c6f9:   	movq	0x10(%rbx), %rbx
  0x0000028bc118c6fd:   	testq	%rbx, %rbx
  0x0000028bc118c700:   	je	0x3
  0x0000028bc118c706:   	jmpq	*0x58(%rbx)
  0x0000028bc118c709:   	jmp	-0x5251ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118c70e:   	hlt
  0x0000028bc118c70f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2390   56     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLIL)L (native)
 total in heap  [0x0000028bc118c790,0x0000028bc118cb48] = 952
 relocation     [0x0000028bc118c8f0,0x0000028bc118c968] = 120
 main code      [0x0000028bc118c980,0x0000028bc118cb44] = 452
 stub code      [0x0000028bc118cb44,0x0000028bc118cb48] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83cb230} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118c980:   	testq	%rdi, %rdi
  0x0000028bc118c983:   	je	0x40
  0x0000028bc118c989:   	pushq	%rdi
  0x0000028bc118c98a:   	pushq	%r10
  0x0000028bc118c98c:   	movl	0x8(%rdi), %edi
  0x0000028bc118c98f:   	movabsq	$0x800000000, %r10
  0x0000028bc118c999:   	addq	%r10, %rdi
  0x0000028bc118c99c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c9a6:   	cmpq	(%r10), %rdi
  0x0000028bc118c9a9:   	je	0x36
  0x0000028bc118c9af:   	movq	0x40(%rdi), %rdi
  0x0000028bc118c9b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c9bd:   	cmpq	(%r10), %rdi
  0x0000028bc118c9c0:   	je	0x1f
  0x0000028bc118c9c6:   	popq	%r10
  0x0000028bc118c9c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118c9c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118c9d3:   	andq	$-0x10, %rsp
  0x0000028bc118c9d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c9e1:   	callq	*%r10
  0x0000028bc118c9e4:   	hlt
 ;; L_ok:
  0x0000028bc118c9e5:   	popq	%r10
  0x0000028bc118c9e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118c9e8:   	movl	0x8(%rdx), %r10d
  0x0000028bc118c9ec:   	movabsq	$0x800000000, %r11
  0x0000028bc118c9f6:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118c9f9:   	movl	0xc(%rdi), %eax
  0x0000028bc118c9fc:   	shrl	$0x18, %eax
  0x0000028bc118c9ff:   	andl	$0xf, %eax
  0x0000028bc118ca02:   	cmpl	$0x9, %eax
  0x0000028bc118ca05:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118ca0b:   	movabsq	$0x28bdc210b90, %rcx;   {external_word}
  0x0000028bc118ca15:   	andq	$-0x10, %rsp
  0x0000028bc118ca19:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ca23:   	callq	*%r10
  0x0000028bc118ca26:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ca27:   	movl	0x18(%rdi), %eax
  0x0000028bc118ca2a:   	pushq	%r10
  0x0000028bc118ca2c:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ca36:   	cmpq	(%r10), %r12
  0x0000028bc118ca39:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ca3f:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ca49:   	andq	$-0x10, %rsp
  0x0000028bc118ca4d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ca57:   	callq	*%r10
  0x0000028bc118ca5a:   	hlt
  0x0000028bc118ca5b:   	popq	%r10
  0x0000028bc118ca5d:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc118ca61:   	testq	%rax, %rax
  0x0000028bc118ca64:   	je	0x40
  0x0000028bc118ca6a:   	pushq	%rdi
  0x0000028bc118ca6b:   	pushq	%r10
  0x0000028bc118ca6d:   	movl	0x8(%rax), %edi
  0x0000028bc118ca70:   	movabsq	$0x800000000, %r10
  0x0000028bc118ca7a:   	addq	%r10, %rdi
  0x0000028bc118ca7d:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ca87:   	cmpq	(%r10), %rdi
  0x0000028bc118ca8a:   	je	0x36
  0x0000028bc118ca90:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ca94:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ca9e:   	cmpq	(%r10), %rdi
  0x0000028bc118caa1:   	je	0x1f
  0x0000028bc118caa7:   	popq	%r10
  0x0000028bc118caa9:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118caaa:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118cab4:   	andq	$-0x10, %rsp
  0x0000028bc118cab8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cac2:   	callq	*%r10
  0x0000028bc118cac5:   	hlt
 ;; L_ok:
  0x0000028bc118cac6:   	popq	%r10
  0x0000028bc118cac8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118cac9:   	movq	0x10(%rax), %rax
  0x0000028bc118cacd:   	movq	0x10(%rdi), %rbx
  0x0000028bc118cad1:   	cmpl	$0x0, %ebx
  0x0000028bc118cad4:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118cada:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc118cae4:   	andq	$-0x10, %rsp
  0x0000028bc118cae8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118caf2:   	callq	*%r10
  0x0000028bc118caf5:   	hlt
  0x0000028bc118caf6:   	movl	0xa8(%r10), %r11d
  0x0000028bc118cafd:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc118cb05:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118cb09:   	movq	(%r11), %rbx
  0x0000028bc118cb0c:   	cmpq	%rbx, %rax
  0x0000028bc118cb0f:   	je	0x15
  0x0000028bc118cb11:   	testq	%rbx, %rbx
  0x0000028bc118cb14:   	je	0x25
  0x0000028bc118cb1a:   	addq	$0x10, %r11
  0x0000028bc118cb1e:   	movq	(%r11), %rbx
  0x0000028bc118cb21:   	cmpq	%rbx, %rax
  0x0000028bc118cb24:   	jne	-0x15
  0x0000028bc118cb26:   	movl	0x8(%r11), %r11d
  0x0000028bc118cb2a:   	movq	(%r10,%r11), %rbx
  0x0000028bc118cb2e:   	testq	%rbx, %rbx
  0x0000028bc118cb31:   	je	0x3
  0x0000028bc118cb37:   	jmpq	*0x58(%rbx)
  0x0000028bc118cb3a:   	jmp	-0x52561f           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc118cb3f:   	jmp	-0x525924           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc118cb44:   	hlt
  0x0000028bc118cb45:   	hlt
  0x0000028bc118cb46:   	hlt
  0x0000028bc118cb47:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2394   56     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLIL)L (native)
 total in heap  [0x0000028bc118c790,0x0000028bc118cb48] = 952
 relocation     [0x0000028bc118c8f0,0x0000028bc118c968] = 120
 main code      [0x0000028bc118c980,0x0000028bc118cb44] = 452
 stub code      [0x0000028bc118cb44,0x0000028bc118cb48] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83cb230} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118c980:   	testq	%rdi, %rdi
  0x0000028bc118c983:   	je	0x40
  0x0000028bc118c989:   	pushq	%rdi
  0x0000028bc118c98a:   	pushq	%r10
  0x0000028bc118c98c:   	movl	0x8(%rdi), %edi
  0x0000028bc118c98f:   	movabsq	$0x800000000, %r10
  0x0000028bc118c999:   	addq	%r10, %rdi
  0x0000028bc118c99c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c9a6:   	cmpq	(%r10), %rdi
  0x0000028bc118c9a9:   	je	0x36
  0x0000028bc118c9af:   	movq	0x40(%rdi), %rdi
  0x0000028bc118c9b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118c9bd:   	cmpq	(%r10), %rdi
  0x0000028bc118c9c0:   	je	0x1f
  0x0000028bc118c9c6:   	popq	%r10
  0x0000028bc118c9c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118c9c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118c9d3:   	andq	$-0x10, %rsp
  0x0000028bc118c9d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118c9e1:   	callq	*%r10
  0x0000028bc118c9e4:   	hlt
 ;; L_ok:
  0x0000028bc118c9e5:   	popq	%r10
  0x0000028bc118c9e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118c9e8:   	movl	0x8(%rdx), %r10d
  0x0000028bc118c9ec:   	movabsq	$0x800000000, %r11
  0x0000028bc118c9f6:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118c9f9:   	movl	0xc(%rdi), %eax
  0x0000028bc118c9fc:   	shrl	$0x18, %eax
  0x0000028bc118c9ff:   	andl	$0xf, %eax
  0x0000028bc118ca02:   	cmpl	$0x9, %eax
  0x0000028bc118ca05:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118ca0b:   	movabsq	$0x28bdc210b90, %rcx;   {external_word}
  0x0000028bc118ca15:   	andq	$-0x10, %rsp
  0x0000028bc118ca19:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ca23:   	callq	*%r10
  0x0000028bc118ca26:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ca27:   	movl	0x18(%rdi), %eax
  0x0000028bc118ca2a:   	pushq	%r10
  0x0000028bc118ca2c:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ca36:   	cmpq	(%r10), %r12
  0x0000028bc118ca39:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ca3f:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ca49:   	andq	$-0x10, %rsp
  0x0000028bc118ca4d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ca57:   	callq	*%r10
  0x0000028bc118ca5a:   	hlt
  0x0000028bc118ca5b:   	popq	%r10
  0x0000028bc118ca5d:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc118ca61:   	testq	%rax, %rax
  0x0000028bc118ca64:   	je	0x40
  0x0000028bc118ca6a:   	pushq	%rdi
  0x0000028bc118ca6b:   	pushq	%r10
  0x0000028bc118ca6d:   	movl	0x8(%rax), %edi
  0x0000028bc118ca70:   	movabsq	$0x800000000, %r10
  0x0000028bc118ca7a:   	addq	%r10, %rdi
  0x0000028bc118ca7d:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ca87:   	cmpq	(%r10), %rdi
  0x0000028bc118ca8a:   	je	0x36
  0x0000028bc118ca90:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ca94:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ca9e:   	cmpq	(%r10), %rdi
  0x0000028bc118caa1:   	je	0x1f
  0x0000028bc118caa7:   	popq	%r10
  0x0000028bc118caa9:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118caaa:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118cab4:   	andq	$-0x10, %rsp
  0x0000028bc118cab8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cac2:   	callq	*%r10
  0x0000028bc118cac5:   	hlt
 ;; L_ok:
  0x0000028bc118cac6:   	popq	%r10
  0x0000028bc118cac8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118cac9:   	movq	0x10(%rax), %rax
  0x0000028bc118cacd:   	movq	0x10(%rdi), %rbx
  0x0000028bc118cad1:   	cmpl	$0x0, %ebx
  0x0000028bc118cad4:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118cada:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc118cae4:   	andq	$-0x10, %rsp
  0x0000028bc118cae8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118caf2:   	callq	*%r10
  0x0000028bc118caf5:   	hlt
  0x0000028bc118caf6:   	movl	0xa8(%r10), %r11d
  0x0000028bc118cafd:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc118cb05:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118cb09:   	movq	(%r11), %rbx
  0x0000028bc118cb0c:   	cmpq	%rbx, %rax
  0x0000028bc118cb0f:   	je	0x15
  0x0000028bc118cb11:   	testq	%rbx, %rbx
  0x0000028bc118cb14:   	je	0x25
  0x0000028bc118cb1a:   	addq	$0x10, %r11
  0x0000028bc118cb1e:   	movq	(%r11), %rbx
  0x0000028bc118cb21:   	cmpq	%rbx, %rax
  0x0000028bc118cb24:   	jne	-0x15
  0x0000028bc118cb26:   	movl	0x8(%r11), %r11d
  0x0000028bc118cb2a:   	movq	(%r10,%r11), %rbx
  0x0000028bc118cb2e:   	testq	%rbx, %rbx
  0x0000028bc118cb31:   	je	0x3
  0x0000028bc118cb37:   	jmpq	*0x58(%rbx)
  0x0000028bc118cb3a:   	jmp	-0x52561f           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc118cb3f:   	jmp	-0x525924           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc118cb44:   	hlt
  0x0000028bc118cb45:   	hlt
  0x0000028bc118cb46:   	hlt
  0x0000028bc118cb47:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2404   57     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLLL)L (native)
 total in heap  [0x0000028bc118cb90,0x0000028bc118cf48] = 952
 relocation     [0x0000028bc118ccf0,0x0000028bc118cd68] = 120
 main code      [0x0000028bc118cd80,0x0000028bc118cf44] = 452
 stub code      [0x0000028bc118cf44,0x0000028bc118cf48] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83cc178} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118cd80:   	testq	%rdi, %rdi
  0x0000028bc118cd83:   	je	0x40
  0x0000028bc118cd89:   	pushq	%rdi
  0x0000028bc118cd8a:   	pushq	%r10
  0x0000028bc118cd8c:   	movl	0x8(%rdi), %edi
  0x0000028bc118cd8f:   	movabsq	$0x800000000, %r10
  0x0000028bc118cd99:   	addq	%r10, %rdi
  0x0000028bc118cd9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118cda6:   	cmpq	(%r10), %rdi
  0x0000028bc118cda9:   	je	0x36
  0x0000028bc118cdaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc118cdb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118cdbd:   	cmpq	(%r10), %rdi
  0x0000028bc118cdc0:   	je	0x1f
  0x0000028bc118cdc6:   	popq	%r10
  0x0000028bc118cdc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118cdc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118cdd3:   	andq	$-0x10, %rsp
  0x0000028bc118cdd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cde1:   	callq	*%r10
  0x0000028bc118cde4:   	hlt
 ;; L_ok:
  0x0000028bc118cde5:   	popq	%r10
  0x0000028bc118cde7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118cde8:   	movl	0x8(%rdx), %r10d
  0x0000028bc118cdec:   	movabsq	$0x800000000, %r11
  0x0000028bc118cdf6:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118cdf9:   	movl	0xc(%rdi), %eax
  0x0000028bc118cdfc:   	shrl	$0x18, %eax
  0x0000028bc118cdff:   	andl	$0xf, %eax
  0x0000028bc118ce02:   	cmpl	$0x9, %eax
  0x0000028bc118ce05:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118ce0b:   	movabsq	$0x28bdc20f710, %rcx;   {external_word}
  0x0000028bc118ce15:   	andq	$-0x10, %rsp
  0x0000028bc118ce19:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ce23:   	callq	*%r10
  0x0000028bc118ce26:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ce27:   	movl	0x18(%rdi), %eax
  0x0000028bc118ce2a:   	pushq	%r10
  0x0000028bc118ce2c:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ce36:   	cmpq	(%r10), %r12
  0x0000028bc118ce39:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ce3f:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ce49:   	andq	$-0x10, %rsp
  0x0000028bc118ce4d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ce57:   	callq	*%r10
  0x0000028bc118ce5a:   	hlt
  0x0000028bc118ce5b:   	popq	%r10
  0x0000028bc118ce5d:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc118ce61:   	testq	%rax, %rax
  0x0000028bc118ce64:   	je	0x40
  0x0000028bc118ce6a:   	pushq	%rdi
  0x0000028bc118ce6b:   	pushq	%r10
  0x0000028bc118ce6d:   	movl	0x8(%rax), %edi
  0x0000028bc118ce70:   	movabsq	$0x800000000, %r10
  0x0000028bc118ce7a:   	addq	%r10, %rdi
  0x0000028bc118ce7d:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ce87:   	cmpq	(%r10), %rdi
  0x0000028bc118ce8a:   	je	0x36
  0x0000028bc118ce90:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ce94:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ce9e:   	cmpq	(%r10), %rdi
  0x0000028bc118cea1:   	je	0x1f
  0x0000028bc118cea7:   	popq	%r10
  0x0000028bc118cea9:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118ceaa:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118ceb4:   	andq	$-0x10, %rsp
  0x0000028bc118ceb8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cec2:   	callq	*%r10
  0x0000028bc118cec5:   	hlt
 ;; L_ok:
  0x0000028bc118cec6:   	popq	%r10
  0x0000028bc118cec8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118cec9:   	movq	0x10(%rax), %rax
  0x0000028bc118cecd:   	movq	0x10(%rdi), %rbx
  0x0000028bc118ced1:   	cmpl	$0x0, %ebx
  0x0000028bc118ced4:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118ceda:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc118cee4:   	andq	$-0x10, %rsp
  0x0000028bc118cee8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cef2:   	callq	*%r10
  0x0000028bc118cef5:   	hlt
  0x0000028bc118cef6:   	movl	0xa8(%r10), %r11d
  0x0000028bc118cefd:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc118cf05:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118cf09:   	movq	(%r11), %rbx
  0x0000028bc118cf0c:   	cmpq	%rbx, %rax
  0x0000028bc118cf0f:   	je	0x15
  0x0000028bc118cf11:   	testq	%rbx, %rbx
  0x0000028bc118cf14:   	je	0x25
  0x0000028bc118cf1a:   	addq	$0x10, %r11
  0x0000028bc118cf1e:   	movq	(%r11), %rbx
  0x0000028bc118cf21:   	cmpq	%rbx, %rax
  0x0000028bc118cf24:   	jne	-0x15
  0x0000028bc118cf26:   	movl	0x8(%r11), %r11d
  0x0000028bc118cf2a:   	movq	(%r10,%r11), %rbx
  0x0000028bc118cf2e:   	testq	%rbx, %rbx
  0x0000028bc118cf31:   	je	0x3
  0x0000028bc118cf37:   	jmpq	*0x58(%rbx)
  0x0000028bc118cf3a:   	jmp	-0x525a1f           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc118cf3f:   	jmp	-0x525d24           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc118cf44:   	hlt
  0x0000028bc118cf45:   	hlt
  0x0000028bc118cf46:   	hlt
  0x0000028bc118cf47:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2409   57     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLLL)L (native)
 total in heap  [0x0000028bc118cb90,0x0000028bc118cf48] = 952
 relocation     [0x0000028bc118ccf0,0x0000028bc118cd68] = 120
 main code      [0x0000028bc118cd80,0x0000028bc118cf44] = 452
 stub code      [0x0000028bc118cf44,0x0000028bc118cf48] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83cc178} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118cd80:   	testq	%rdi, %rdi
  0x0000028bc118cd83:   	je	0x40
  0x0000028bc118cd89:   	pushq	%rdi
  0x0000028bc118cd8a:   	pushq	%r10
  0x0000028bc118cd8c:   	movl	0x8(%rdi), %edi
  0x0000028bc118cd8f:   	movabsq	$0x800000000, %r10
  0x0000028bc118cd99:   	addq	%r10, %rdi
  0x0000028bc118cd9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118cda6:   	cmpq	(%r10), %rdi
  0x0000028bc118cda9:   	je	0x36
  0x0000028bc118cdaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc118cdb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118cdbd:   	cmpq	(%r10), %rdi
  0x0000028bc118cdc0:   	je	0x1f
  0x0000028bc118cdc6:   	popq	%r10
  0x0000028bc118cdc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118cdc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118cdd3:   	andq	$-0x10, %rsp
  0x0000028bc118cdd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cde1:   	callq	*%r10
  0x0000028bc118cde4:   	hlt
 ;; L_ok:
  0x0000028bc118cde5:   	popq	%r10
  0x0000028bc118cde7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118cde8:   	movl	0x8(%rdx), %r10d
  0x0000028bc118cdec:   	movabsq	$0x800000000, %r11
  0x0000028bc118cdf6:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118cdf9:   	movl	0xc(%rdi), %eax
  0x0000028bc118cdfc:   	shrl	$0x18, %eax
  0x0000028bc118cdff:   	andl	$0xf, %eax
  0x0000028bc118ce02:   	cmpl	$0x9, %eax
  0x0000028bc118ce05:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118ce0b:   	movabsq	$0x28bdc20f710, %rcx;   {external_word}
  0x0000028bc118ce15:   	andq	$-0x10, %rsp
  0x0000028bc118ce19:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ce23:   	callq	*%r10
  0x0000028bc118ce26:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ce27:   	movl	0x18(%rdi), %eax
  0x0000028bc118ce2a:   	pushq	%r10
  0x0000028bc118ce2c:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ce36:   	cmpq	(%r10), %r12
  0x0000028bc118ce39:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ce3f:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ce49:   	andq	$-0x10, %rsp
  0x0000028bc118ce4d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ce57:   	callq	*%r10
  0x0000028bc118ce5a:   	hlt
  0x0000028bc118ce5b:   	popq	%r10
  0x0000028bc118ce5d:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc118ce61:   	testq	%rax, %rax
  0x0000028bc118ce64:   	je	0x40
  0x0000028bc118ce6a:   	pushq	%rdi
  0x0000028bc118ce6b:   	pushq	%r10
  0x0000028bc118ce6d:   	movl	0x8(%rax), %edi
  0x0000028bc118ce70:   	movabsq	$0x800000000, %r10
  0x0000028bc118ce7a:   	addq	%r10, %rdi
  0x0000028bc118ce7d:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ce87:   	cmpq	(%r10), %rdi
  0x0000028bc118ce8a:   	je	0x36
  0x0000028bc118ce90:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ce94:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118ce9e:   	cmpq	(%r10), %rdi
  0x0000028bc118cea1:   	je	0x1f
  0x0000028bc118cea7:   	popq	%r10
  0x0000028bc118cea9:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118ceaa:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118ceb4:   	andq	$-0x10, %rsp
  0x0000028bc118ceb8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cec2:   	callq	*%r10
  0x0000028bc118cec5:   	hlt
 ;; L_ok:
  0x0000028bc118cec6:   	popq	%r10
  0x0000028bc118cec8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118cec9:   	movq	0x10(%rax), %rax
  0x0000028bc118cecd:   	movq	0x10(%rdi), %rbx
  0x0000028bc118ced1:   	cmpl	$0x0, %ebx
  0x0000028bc118ced4:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118ceda:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc118cee4:   	andq	$-0x10, %rsp
  0x0000028bc118cee8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118cef2:   	callq	*%r10
  0x0000028bc118cef5:   	hlt
  0x0000028bc118cef6:   	movl	0xa8(%r10), %r11d
  0x0000028bc118cefd:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc118cf05:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118cf09:   	movq	(%r11), %rbx
  0x0000028bc118cf0c:   	cmpq	%rbx, %rax
  0x0000028bc118cf0f:   	je	0x15
  0x0000028bc118cf11:   	testq	%rbx, %rbx
  0x0000028bc118cf14:   	je	0x25
  0x0000028bc118cf1a:   	addq	$0x10, %r11
  0x0000028bc118cf1e:   	movq	(%r11), %rbx
  0x0000028bc118cf21:   	cmpq	%rbx, %rax
  0x0000028bc118cf24:   	jne	-0x15
  0x0000028bc118cf26:   	movl	0x8(%r11), %r11d
  0x0000028bc118cf2a:   	movq	(%r10,%r11), %rbx
  0x0000028bc118cf2e:   	testq	%rbx, %rbx
  0x0000028bc118cf31:   	je	0x3
  0x0000028bc118cf37:   	jmpq	*0x58(%rbx)
  0x0000028bc118cf3a:   	jmp	-0x525a1f           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc118cf3f:   	jmp	-0x525d24           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc118cf44:   	hlt
  0x0000028bc118cf45:   	hlt
  0x0000028bc118cf46:   	hlt
  0x0000028bc118cf47:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2419   58     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)V (native)
 total in heap  [0x0000028bc118cf90,0x0000028bc118d228] = 664
 relocation     [0x0000028bc118d0f0,0x0000028bc118d138] = 72
 main code      [0x0000028bc118d140,0x0000028bc118d225] = 229
 stub code      [0x0000028bc118d225,0x0000028bc118d228] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83ccdc0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118d140:   	testq	%rdi, %rdi
  0x0000028bc118d143:   	je	0x40
  0x0000028bc118d149:   	pushq	%rdi
  0x0000028bc118d14a:   	pushq	%r10
  0x0000028bc118d14c:   	movl	0x8(%rdi), %edi
  0x0000028bc118d14f:   	movabsq	$0x800000000, %r10
  0x0000028bc118d159:   	addq	%r10, %rdi
  0x0000028bc118d15c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d166:   	cmpq	(%r10), %rdi
  0x0000028bc118d169:   	je	0x36
  0x0000028bc118d16f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118d173:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d17d:   	cmpq	(%r10), %rdi
  0x0000028bc118d180:   	je	0x1f
  0x0000028bc118d186:   	popq	%r10
  0x0000028bc118d188:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118d189:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118d193:   	andq	$-0x10, %rsp
  0x0000028bc118d197:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d1a1:   	callq	*%r10
  0x0000028bc118d1a4:   	hlt
 ;; L_ok:
  0x0000028bc118d1a5:   	popq	%r10
  0x0000028bc118d1a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118d1a8:   	movl	0xc(%rdi), %eax
  0x0000028bc118d1ab:   	shrl	$0x18, %eax
  0x0000028bc118d1ae:   	andl	$0xf, %eax
  0x0000028bc118d1b1:   	cmpl	$0x6, %eax
  0x0000028bc118d1b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118d1ba:   	movabsq	$0x28bdc210610, %rcx;   {external_word}
  0x0000028bc118d1c4:   	andq	$-0x10, %rsp
  0x0000028bc118d1c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d1d2:   	callq	*%r10
  0x0000028bc118d1d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118d1d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc118d1d9:   	pushq	%r10
  0x0000028bc118d1db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d1e5:   	cmpq	(%r10), %r12
  0x0000028bc118d1e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d1ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d1f8:   	andq	$-0x10, %rsp
  0x0000028bc118d1fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d206:   	callq	*%r10
  0x0000028bc118d209:   	hlt
  0x0000028bc118d20a:   	popq	%r10
  0x0000028bc118d20c:   	shlq	$0x3, %rbx
  0x0000028bc118d210:   	movq	0x10(%rbx), %rbx
  0x0000028bc118d214:   	testq	%rbx, %rbx
  0x0000028bc118d217:   	je	0x3
  0x0000028bc118d21d:   	jmpq	*0x58(%rbx)
  0x0000028bc118d220:   	jmp	-0x525d05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118d225:   	hlt
  0x0000028bc118d226:   	hlt
  0x0000028bc118d227:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2422   58     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)V (native)
 total in heap  [0x0000028bc118cf90,0x0000028bc118d228] = 664
 relocation     [0x0000028bc118d0f0,0x0000028bc118d138] = 72
 main code      [0x0000028bc118d140,0x0000028bc118d225] = 229
 stub code      [0x0000028bc118d225,0x0000028bc118d228] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83ccdc0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118d140:   	testq	%rdi, %rdi
  0x0000028bc118d143:   	je	0x40
  0x0000028bc118d149:   	pushq	%rdi
  0x0000028bc118d14a:   	pushq	%r10
  0x0000028bc118d14c:   	movl	0x8(%rdi), %edi
  0x0000028bc118d14f:   	movabsq	$0x800000000, %r10
  0x0000028bc118d159:   	addq	%r10, %rdi
  0x0000028bc118d15c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d166:   	cmpq	(%r10), %rdi
  0x0000028bc118d169:   	je	0x36
  0x0000028bc118d16f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118d173:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d17d:   	cmpq	(%r10), %rdi
  0x0000028bc118d180:   	je	0x1f
  0x0000028bc118d186:   	popq	%r10
  0x0000028bc118d188:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118d189:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118d193:   	andq	$-0x10, %rsp
  0x0000028bc118d197:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d1a1:   	callq	*%r10
  0x0000028bc118d1a4:   	hlt
 ;; L_ok:
  0x0000028bc118d1a5:   	popq	%r10
  0x0000028bc118d1a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118d1a8:   	movl	0xc(%rdi), %eax
  0x0000028bc118d1ab:   	shrl	$0x18, %eax
  0x0000028bc118d1ae:   	andl	$0xf, %eax
  0x0000028bc118d1b1:   	cmpl	$0x6, %eax
  0x0000028bc118d1b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118d1ba:   	movabsq	$0x28bdc210610, %rcx;   {external_word}
  0x0000028bc118d1c4:   	andq	$-0x10, %rsp
  0x0000028bc118d1c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d1d2:   	callq	*%r10
  0x0000028bc118d1d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118d1d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc118d1d9:   	pushq	%r10
  0x0000028bc118d1db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d1e5:   	cmpq	(%r10), %r12
  0x0000028bc118d1e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d1ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d1f8:   	andq	$-0x10, %rsp
  0x0000028bc118d1fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d206:   	callq	*%r10
  0x0000028bc118d209:   	hlt
  0x0000028bc118d20a:   	popq	%r10
  0x0000028bc118d20c:   	shlq	$0x3, %rbx
  0x0000028bc118d210:   	movq	0x10(%rbx), %rbx
  0x0000028bc118d214:   	testq	%rbx, %rbx
  0x0000028bc118d217:   	je	0x3
  0x0000028bc118d21d:   	jmpq	*0x58(%rbx)
  0x0000028bc118d220:   	jmp	-0x525d05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118d225:   	hlt
  0x0000028bc118d226:   	hlt
  0x0000028bc118d227:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2431   59     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLDL)L (native)
 total in heap  [0x0000028bc118d290,0x0000028bc118d648] = 952
 relocation     [0x0000028bc118d3f0,0x0000028bc118d468] = 120
 main code      [0x0000028bc118d480,0x0000028bc118d647] = 455
 stub code      [0x0000028bc118d647,0x0000028bc118d648] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83cd6f0} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    xmm0:xmm0   = double
  # parm3:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118d480:   	testq	%r9, %r9
  0x0000028bc118d483:   	je	0x41
  0x0000028bc118d489:   	pushq	%rdi
  0x0000028bc118d48a:   	pushq	%r10
  0x0000028bc118d48c:   	movl	0x8(%r9), %edi
  0x0000028bc118d490:   	movabsq	$0x800000000, %r10
  0x0000028bc118d49a:   	addq	%r10, %rdi
  0x0000028bc118d49d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d4a7:   	cmpq	(%r10), %rdi
  0x0000028bc118d4aa:   	je	0x36
  0x0000028bc118d4b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc118d4b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d4be:   	cmpq	(%r10), %rdi
  0x0000028bc118d4c1:   	je	0x1f
  0x0000028bc118d4c7:   	popq	%r10
  0x0000028bc118d4c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118d4ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118d4d4:   	andq	$-0x10, %rsp
  0x0000028bc118d4d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d4e2:   	callq	*%r10
  0x0000028bc118d4e5:   	hlt
 ;; L_ok:
  0x0000028bc118d4e6:   	popq	%r10
  0x0000028bc118d4e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118d4e9:   	movl	0x8(%rdx), %r10d
  0x0000028bc118d4ed:   	movabsq	$0x800000000, %r11
  0x0000028bc118d4f7:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118d4fa:   	movl	0xc(%r9), %eax
  0x0000028bc118d4fe:   	shrl	$0x18, %eax
  0x0000028bc118d501:   	andl	$0xf, %eax
  0x0000028bc118d504:   	cmpl	$0x9, %eax
  0x0000028bc118d507:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118d50d:   	movabsq	$0x28bdc20f110, %rcx;   {external_word}
  0x0000028bc118d517:   	andq	$-0x10, %rsp
  0x0000028bc118d51b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d525:   	callq	*%r10
  0x0000028bc118d528:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118d529:   	movl	0x18(%r9), %eax
  0x0000028bc118d52d:   	pushq	%r10
  0x0000028bc118d52f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d539:   	cmpq	(%r10), %r12
  0x0000028bc118d53c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d542:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d54c:   	andq	$-0x10, %rsp
  0x0000028bc118d550:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d55a:   	callq	*%r10
  0x0000028bc118d55d:   	hlt
  0x0000028bc118d55e:   	popq	%r10
  0x0000028bc118d560:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc118d564:   	testq	%rax, %rax
  0x0000028bc118d567:   	je	0x40
  0x0000028bc118d56d:   	pushq	%rdi
  0x0000028bc118d56e:   	pushq	%r10
  0x0000028bc118d570:   	movl	0x8(%rax), %edi
  0x0000028bc118d573:   	movabsq	$0x800000000, %r10
  0x0000028bc118d57d:   	addq	%r10, %rdi
  0x0000028bc118d580:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118d58a:   	cmpq	(%r10), %rdi
  0x0000028bc118d58d:   	je	0x36
  0x0000028bc118d593:   	movq	0x40(%rdi), %rdi
  0x0000028bc118d597:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118d5a1:   	cmpq	(%r10), %rdi
  0x0000028bc118d5a4:   	je	0x1f
  0x0000028bc118d5aa:   	popq	%r10
  0x0000028bc118d5ac:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118d5ad:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118d5b7:   	andq	$-0x10, %rsp
  0x0000028bc118d5bb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d5c5:   	callq	*%r10
  0x0000028bc118d5c8:   	hlt
 ;; L_ok:
  0x0000028bc118d5c9:   	popq	%r10
  0x0000028bc118d5cb:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118d5cc:   	movq	0x10(%rax), %rax
  0x0000028bc118d5d0:   	movq	0x10(%r9), %rbx
  0x0000028bc118d5d4:   	cmpl	$0x0, %ebx
  0x0000028bc118d5d7:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118d5dd:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc118d5e7:   	andq	$-0x10, %rsp
  0x0000028bc118d5eb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d5f5:   	callq	*%r10
  0x0000028bc118d5f8:   	hlt
  0x0000028bc118d5f9:   	movl	0xa8(%r10), %r11d
  0x0000028bc118d600:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc118d608:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118d60c:   	movq	(%r11), %rbx
  0x0000028bc118d60f:   	cmpq	%rbx, %rax
  0x0000028bc118d612:   	je	0x15
  0x0000028bc118d614:   	testq	%rbx, %rbx
  0x0000028bc118d617:   	je	0x25
  0x0000028bc118d61d:   	addq	$0x10, %r11
  0x0000028bc118d621:   	movq	(%r11), %rbx
  0x0000028bc118d624:   	cmpq	%rbx, %rax
  0x0000028bc118d627:   	jne	-0x15
  0x0000028bc118d629:   	movl	0x8(%r11), %r11d
  0x0000028bc118d62d:   	movq	(%r10,%r11), %rbx
  0x0000028bc118d631:   	testq	%rbx, %rbx
  0x0000028bc118d634:   	je	0x3
  0x0000028bc118d63a:   	jmpq	*0x58(%rbx)
  0x0000028bc118d63d:   	jmp	-0x526122           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc118d642:   	jmp	-0x526427           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc118d647:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2435   59     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLDL)L (native)
 total in heap  [0x0000028bc118d290,0x0000028bc118d648] = 952
 relocation     [0x0000028bc118d3f0,0x0000028bc118d468] = 120
 main code      [0x0000028bc118d480,0x0000028bc118d647] = 455
 stub code      [0x0000028bc118d647,0x0000028bc118d648] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83cd6f0} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    xmm0:xmm0   = double
  # parm3:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118d480:   	testq	%r9, %r9
  0x0000028bc118d483:   	je	0x41
  0x0000028bc118d489:   	pushq	%rdi
  0x0000028bc118d48a:   	pushq	%r10
  0x0000028bc118d48c:   	movl	0x8(%r9), %edi
  0x0000028bc118d490:   	movabsq	$0x800000000, %r10
  0x0000028bc118d49a:   	addq	%r10, %rdi
  0x0000028bc118d49d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d4a7:   	cmpq	(%r10), %rdi
  0x0000028bc118d4aa:   	je	0x36
  0x0000028bc118d4b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc118d4b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118d4be:   	cmpq	(%r10), %rdi
  0x0000028bc118d4c1:   	je	0x1f
  0x0000028bc118d4c7:   	popq	%r10
  0x0000028bc118d4c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118d4ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118d4d4:   	andq	$-0x10, %rsp
  0x0000028bc118d4d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d4e2:   	callq	*%r10
  0x0000028bc118d4e5:   	hlt
 ;; L_ok:
  0x0000028bc118d4e6:   	popq	%r10
  0x0000028bc118d4e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118d4e9:   	movl	0x8(%rdx), %r10d
  0x0000028bc118d4ed:   	movabsq	$0x800000000, %r11
  0x0000028bc118d4f7:   	addq	%r11, %r10
 ;; check_receiver {
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118d4fa:   	movl	0xc(%r9), %eax
  0x0000028bc118d4fe:   	shrl	$0x18, %eax
  0x0000028bc118d501:   	andl	$0xf, %eax
  0x0000028bc118d504:   	cmpl	$0x9, %eax
  0x0000028bc118d507:   	je	0x1c
 ;; verify_ref_kind expected 9
  0x0000028bc118d50d:   	movabsq	$0x28bdc20f110, %rcx;   {external_word}
  0x0000028bc118d517:   	andq	$-0x10, %rsp
  0x0000028bc118d51b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d525:   	callq	*%r10
  0x0000028bc118d528:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118d529:   	movl	0x18(%r9), %eax
  0x0000028bc118d52d:   	pushq	%r10
  0x0000028bc118d52f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d539:   	cmpq	(%r10), %r12
  0x0000028bc118d53c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d542:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d54c:   	andq	$-0x10, %rsp
  0x0000028bc118d550:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d55a:   	callq	*%r10
  0x0000028bc118d55d:   	hlt
  0x0000028bc118d55e:   	popq	%r10
  0x0000028bc118d560:   	shlq	$0x3, %rax
 ;; verify_klass {
  0x0000028bc118d564:   	testq	%rax, %rax
  0x0000028bc118d567:   	je	0x40
  0x0000028bc118d56d:   	pushq	%rdi
  0x0000028bc118d56e:   	pushq	%r10
  0x0000028bc118d570:   	movl	0x8(%rax), %edi
  0x0000028bc118d573:   	movabsq	$0x800000000, %r10
  0x0000028bc118d57d:   	addq	%r10, %rdi
  0x0000028bc118d580:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118d58a:   	cmpq	(%r10), %rdi
  0x0000028bc118d58d:   	je	0x36
  0x0000028bc118d593:   	movq	0x40(%rdi), %rdi
  0x0000028bc118d597:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118d5a1:   	cmpq	(%r10), %rdi
  0x0000028bc118d5a4:   	je	0x1f
  0x0000028bc118d5aa:   	popq	%r10
  0x0000028bc118d5ac:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118d5ad:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118d5b7:   	andq	$-0x10, %rsp
  0x0000028bc118d5bb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d5c5:   	callq	*%r10
  0x0000028bc118d5c8:   	hlt
 ;; L_ok:
  0x0000028bc118d5c9:   	popq	%r10
  0x0000028bc118d5cb:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118d5cc:   	movq	0x10(%rax), %rax
  0x0000028bc118d5d0:   	movq	0x10(%r9), %rbx
  0x0000028bc118d5d4:   	cmpl	$0x0, %ebx
  0x0000028bc118d5d7:   	jge	0x1c
 ;; invalid vtable index for MH.invokeInterface
  0x0000028bc118d5dd:   	movabsq	$0x7ffd00c7afc0, %rcx;   {external_word}
  0x0000028bc118d5e7:   	andq	$-0x10, %rsp
  0x0000028bc118d5eb:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d5f5:   	callq	*%r10
  0x0000028bc118d5f8:   	hlt
  0x0000028bc118d5f9:   	movl	0xa8(%r10), %r11d
  0x0000028bc118d600:   	leaq	0x1d0(%r10,%r11,8), %r11
  0x0000028bc118d608:   	leaq	(%r10,%rbx,8), %r10
  0x0000028bc118d60c:   	movq	(%r11), %rbx
  0x0000028bc118d60f:   	cmpq	%rbx, %rax
  0x0000028bc118d612:   	je	0x15
  0x0000028bc118d614:   	testq	%rbx, %rbx
  0x0000028bc118d617:   	je	0x25
  0x0000028bc118d61d:   	addq	$0x10, %r11
  0x0000028bc118d621:   	movq	(%r11), %rbx
  0x0000028bc118d624:   	cmpq	%rbx, %rax
  0x0000028bc118d627:   	jne	-0x15
  0x0000028bc118d629:   	movl	0x8(%r11), %r11d
  0x0000028bc118d62d:   	movq	(%r10,%r11), %rbx
  0x0000028bc118d631:   	testq	%rbx, %rbx
  0x0000028bc118d634:   	je	0x3
  0x0000028bc118d63a:   	jmpq	*0x58(%rbx)
  0x0000028bc118d63d:   	jmp	-0x526122           ;   {runtime_call AbstractMethodError throw_exception}
  0x0000028bc118d642:   	jmp	-0x526427           ;   {runtime_call IncompatibleClassChangeError throw_exception}
[Stub Code]
  0x0000028bc118d647:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2454   60     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLL)L (native)
 total in heap  [0x0000028bc118d690,0x0000028bc118d908] = 632
 relocation     [0x0000028bc118d7f0,0x0000028bc118d838] = 72
 main code      [0x0000028bc118d840,0x0000028bc118d903] = 195
 stub code      [0x0000028bc118d903,0x0000028bc118d908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d2d28} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118d840:   	movl	0x14(%rdx), %ebx
  0x0000028bc118d843:   	pushq	%r10
  0x0000028bc118d845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d84f:   	cmpq	(%r10), %r12
  0x0000028bc118d852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d862:   	andq	$-0x10, %rsp
  0x0000028bc118d866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d870:   	callq	*%r10
  0x0000028bc118d873:   	hlt
  0x0000028bc118d874:   	popq	%r10
  0x0000028bc118d876:   	shlq	$0x3, %rbx
  0x0000028bc118d87a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118d87d:   	pushq	%r10
  0x0000028bc118d87f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d889:   	cmpq	(%r10), %r12
  0x0000028bc118d88c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d89c:   	andq	$-0x10, %rsp
  0x0000028bc118d8a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d8aa:   	callq	*%r10
  0x0000028bc118d8ad:   	hlt
  0x0000028bc118d8ae:   	popq	%r10
  0x0000028bc118d8b0:   	shlq	$0x3, %rbx
  0x0000028bc118d8b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118d8b7:   	pushq	%r10
  0x0000028bc118d8b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d8c3:   	cmpq	(%r10), %r12
  0x0000028bc118d8c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d8cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d8d6:   	andq	$-0x10, %rsp
  0x0000028bc118d8da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d8e4:   	callq	*%r10
  0x0000028bc118d8e7:   	hlt
  0x0000028bc118d8e8:   	popq	%r10
  0x0000028bc118d8ea:   	shlq	$0x3, %rbx
  0x0000028bc118d8ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118d8f2:   	testq	%rbx, %rbx
  0x0000028bc118d8f5:   	je	0x3
  0x0000028bc118d8fb:   	jmpq	*0x58(%rbx)
  0x0000028bc118d8fe:   	jmp	-0x5263e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118d903:   	hlt
  0x0000028bc118d904:   	hlt
  0x0000028bc118d905:   	hlt
  0x0000028bc118d906:   	hlt
  0x0000028bc118d907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2457   60     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLL)L (native)
 total in heap  [0x0000028bc118d690,0x0000028bc118d908] = 632
 relocation     [0x0000028bc118d7f0,0x0000028bc118d838] = 72
 main code      [0x0000028bc118d840,0x0000028bc118d903] = 195
 stub code      [0x0000028bc118d903,0x0000028bc118d908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d2d28} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118d840:   	movl	0x14(%rdx), %ebx
  0x0000028bc118d843:   	pushq	%r10
  0x0000028bc118d845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d84f:   	cmpq	(%r10), %r12
  0x0000028bc118d852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d862:   	andq	$-0x10, %rsp
  0x0000028bc118d866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d870:   	callq	*%r10
  0x0000028bc118d873:   	hlt
  0x0000028bc118d874:   	popq	%r10
  0x0000028bc118d876:   	shlq	$0x3, %rbx
  0x0000028bc118d87a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118d87d:   	pushq	%r10
  0x0000028bc118d87f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d889:   	cmpq	(%r10), %r12
  0x0000028bc118d88c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d89c:   	andq	$-0x10, %rsp
  0x0000028bc118d8a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d8aa:   	callq	*%r10
  0x0000028bc118d8ad:   	hlt
  0x0000028bc118d8ae:   	popq	%r10
  0x0000028bc118d8b0:   	shlq	$0x3, %rbx
  0x0000028bc118d8b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118d8b7:   	pushq	%r10
  0x0000028bc118d8b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118d8c3:   	cmpq	(%r10), %r12
  0x0000028bc118d8c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118d8cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118d8d6:   	andq	$-0x10, %rsp
  0x0000028bc118d8da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118d8e4:   	callq	*%r10
  0x0000028bc118d8e7:   	hlt
  0x0000028bc118d8e8:   	popq	%r10
  0x0000028bc118d8ea:   	shlq	$0x3, %rbx
  0x0000028bc118d8ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118d8f2:   	testq	%rbx, %rbx
  0x0000028bc118d8f5:   	je	0x3
  0x0000028bc118d8fb:   	jmpq	*0x58(%rbx)
  0x0000028bc118d8fe:   	jmp	-0x5263e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118d903:   	hlt
  0x0000028bc118d904:   	hlt
  0x0000028bc118d905:   	hlt
  0x0000028bc118d906:   	hlt
  0x0000028bc118d907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2460   61     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLL)L (native)
 total in heap  [0x0000028bc118d990,0x0000028bc118dd90] = 1024
 relocation     [0x0000028bc118daf0,0x0000028bc118db80] = 144
 main code      [0x0000028bc118db80,0x0000028bc118dd90] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d2e60} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc118db80:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc118db85:   	testq	%rbx, %rbx
  0x0000028bc118db88:   	je	0x40
  0x0000028bc118db8e:   	pushq	%rdi
  0x0000028bc118db8f:   	pushq	%r10
  0x0000028bc118db91:   	movl	0x8(%rbx), %edi
  0x0000028bc118db94:   	movabsq	$0x800000000, %r10
  0x0000028bc118db9e:   	addq	%r10, %rdi
  0x0000028bc118dba1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dbab:   	cmpq	(%r10), %rdi
  0x0000028bc118dbae:   	je	0x36
  0x0000028bc118dbb4:   	movq	0x40(%rdi), %rdi
  0x0000028bc118dbb8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dbc2:   	cmpq	(%r10), %rdi
  0x0000028bc118dbc5:   	je	0x1f
  0x0000028bc118dbcb:   	popq	%r10
  0x0000028bc118dbcd:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118dbce:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118dbd8:   	andq	$-0x10, %rsp
  0x0000028bc118dbdc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dbe6:   	callq	*%r10
  0x0000028bc118dbe9:   	hlt
 ;; L_ok:
  0x0000028bc118dbea:   	popq	%r10
  0x0000028bc118dbec:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118dbed:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118dbf0:   	movl	0x8(%rdx), %r10d
  0x0000028bc118dbf4:   	movabsq	$0x800000000, %r11
  0x0000028bc118dbfe:   	addq	%r11, %r10
  0x0000028bc118dc01:   	movl	0x18(%rbx), %r11d
  0x0000028bc118dc05:   	pushq	%r10
  0x0000028bc118dc07:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118dc11:   	cmpq	(%r10), %r12
  0x0000028bc118dc14:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118dc1a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118dc24:   	andq	$-0x10, %rsp
  0x0000028bc118dc28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dc32:   	callq	*%r10
  0x0000028bc118dc35:   	hlt
  0x0000028bc118dc36:   	popq	%r10
  0x0000028bc118dc38:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118dc3c:   	testq	%r11, %r11
  0x0000028bc118dc3f:   	je	0x41
  0x0000028bc118dc45:   	pushq	%rdi
  0x0000028bc118dc46:   	pushq	%r10
  0x0000028bc118dc48:   	movl	0x8(%r11), %edi
  0x0000028bc118dc4c:   	movabsq	$0x800000000, %r10
  0x0000028bc118dc56:   	addq	%r10, %rdi
  0x0000028bc118dc59:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118dc63:   	cmpq	(%r10), %rdi
  0x0000028bc118dc66:   	je	0x36
  0x0000028bc118dc6c:   	movq	0x40(%rdi), %rdi
  0x0000028bc118dc70:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118dc7a:   	cmpq	(%r10), %rdi
  0x0000028bc118dc7d:   	je	0x1f
  0x0000028bc118dc83:   	popq	%r10
  0x0000028bc118dc85:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118dc86:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118dc90:   	andq	$-0x10, %rsp
  0x0000028bc118dc94:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dc9e:   	callq	*%r10
  0x0000028bc118dca1:   	hlt
 ;; L_ok:
  0x0000028bc118dca2:   	popq	%r10
  0x0000028bc118dca4:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118dca5:   	movq	0x10(%r11), %r11
  0x0000028bc118dca9:   	cmpq	%r11, %r10
  0x0000028bc118dcac:   	je	0x61
  0x0000028bc118dcb2:   	movl	0x1c(%r11), %eax
  0x0000028bc118dcb6:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118dcba:   	je	0x53
  0x0000028bc118dcc0:   	cmpl	$0x28, %eax
  0x0000028bc118dcc3:   	jne	0x2e
  0x0000028bc118dcc9:   	movq	%r11, %rax
  0x0000028bc118dccc:   	pushq	%rcx
  0x0000028bc118dccd:   	pushq	%rdi
  0x0000028bc118dcce:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118dcd8:   	incl	(%rcx)
  0x0000028bc118dcda:   	movq	0x30(%r10), %rdi
  0x0000028bc118dcde:   	movl	(%rdi), %ecx
  0x0000028bc118dce0:   	addq	$0x8, %rdi
  0x0000028bc118dce4:   	testq	%rax, %rax
  0x0000028bc118dce7:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118dcea:   	popq	%rdi
  0x0000028bc118dceb:   	popq	%rcx
  0x0000028bc118dcec:   	jne	0x9
  0x0000028bc118dcee:   	movq	%r11, 0x28(%r10)
  0x0000028bc118dcf2:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118dcf7:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118dd01:   	andq	$-0x10, %rsp
  0x0000028bc118dd05:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dd0f:   	callq	*%r10
  0x0000028bc118dd12:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118dd13:   	movl	0xc(%rbx), %eax
  0x0000028bc118dd16:   	shrl	$0x18, %eax
  0x0000028bc118dd19:   	andl	$0xf, %eax
  0x0000028bc118dd1c:   	cmpl	$0x7, %eax
  0x0000028bc118dd1f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118dd25:   	movabsq	$0x28bdc20f990, %rcx;   {external_word}
  0x0000028bc118dd2f:   	andq	$-0x10, %rsp
  0x0000028bc118dd33:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dd3d:   	callq	*%r10
  0x0000028bc118dd40:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118dd41:   	movl	0x24(%rbx), %ebx
  0x0000028bc118dd44:   	pushq	%r10
  0x0000028bc118dd46:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118dd50:   	cmpq	(%r10), %r12
  0x0000028bc118dd53:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118dd59:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118dd63:   	andq	$-0x10, %rsp
  0x0000028bc118dd67:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dd71:   	callq	*%r10
  0x0000028bc118dd74:   	hlt
  0x0000028bc118dd75:   	popq	%r10
  0x0000028bc118dd77:   	shlq	$0x3, %rbx
  0x0000028bc118dd7b:   	movq	0x10(%rbx), %rbx
  0x0000028bc118dd7f:   	testq	%rbx, %rbx
  0x0000028bc118dd82:   	je	0x3
  0x0000028bc118dd88:   	jmpq	*0x58(%rbx)
  0x0000028bc118dd8b:   	jmp	-0x526870           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2465   61     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLL)L (native)
 total in heap  [0x0000028bc118d990,0x0000028bc118dd90] = 1024
 relocation     [0x0000028bc118daf0,0x0000028bc118db80] = 144
 main code      [0x0000028bc118db80,0x0000028bc118dd90] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d2e60} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc118db80:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc118db85:   	testq	%rbx, %rbx
  0x0000028bc118db88:   	je	0x40
  0x0000028bc118db8e:   	pushq	%rdi
  0x0000028bc118db8f:   	pushq	%r10
  0x0000028bc118db91:   	movl	0x8(%rbx), %edi
  0x0000028bc118db94:   	movabsq	$0x800000000, %r10
  0x0000028bc118db9e:   	addq	%r10, %rdi
  0x0000028bc118dba1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dbab:   	cmpq	(%r10), %rdi
  0x0000028bc118dbae:   	je	0x36
  0x0000028bc118dbb4:   	movq	0x40(%rdi), %rdi
  0x0000028bc118dbb8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dbc2:   	cmpq	(%r10), %rdi
  0x0000028bc118dbc5:   	je	0x1f
  0x0000028bc118dbcb:   	popq	%r10
  0x0000028bc118dbcd:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118dbce:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118dbd8:   	andq	$-0x10, %rsp
  0x0000028bc118dbdc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dbe6:   	callq	*%r10
  0x0000028bc118dbe9:   	hlt
 ;; L_ok:
  0x0000028bc118dbea:   	popq	%r10
  0x0000028bc118dbec:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118dbed:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118dbf0:   	movl	0x8(%rdx), %r10d
  0x0000028bc118dbf4:   	movabsq	$0x800000000, %r11
  0x0000028bc118dbfe:   	addq	%r11, %r10
  0x0000028bc118dc01:   	movl	0x18(%rbx), %r11d
  0x0000028bc118dc05:   	pushq	%r10
  0x0000028bc118dc07:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118dc11:   	cmpq	(%r10), %r12
  0x0000028bc118dc14:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118dc1a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118dc24:   	andq	$-0x10, %rsp
  0x0000028bc118dc28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dc32:   	callq	*%r10
  0x0000028bc118dc35:   	hlt
  0x0000028bc118dc36:   	popq	%r10
  0x0000028bc118dc38:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118dc3c:   	testq	%r11, %r11
  0x0000028bc118dc3f:   	je	0x41
  0x0000028bc118dc45:   	pushq	%rdi
  0x0000028bc118dc46:   	pushq	%r10
  0x0000028bc118dc48:   	movl	0x8(%r11), %edi
  0x0000028bc118dc4c:   	movabsq	$0x800000000, %r10
  0x0000028bc118dc56:   	addq	%r10, %rdi
  0x0000028bc118dc59:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118dc63:   	cmpq	(%r10), %rdi
  0x0000028bc118dc66:   	je	0x36
  0x0000028bc118dc6c:   	movq	0x40(%rdi), %rdi
  0x0000028bc118dc70:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118dc7a:   	cmpq	(%r10), %rdi
  0x0000028bc118dc7d:   	je	0x1f
  0x0000028bc118dc83:   	popq	%r10
  0x0000028bc118dc85:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118dc86:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118dc90:   	andq	$-0x10, %rsp
  0x0000028bc118dc94:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dc9e:   	callq	*%r10
  0x0000028bc118dca1:   	hlt
 ;; L_ok:
  0x0000028bc118dca2:   	popq	%r10
  0x0000028bc118dca4:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118dca5:   	movq	0x10(%r11), %r11
  0x0000028bc118dca9:   	cmpq	%r11, %r10
  0x0000028bc118dcac:   	je	0x61
  0x0000028bc118dcb2:   	movl	0x1c(%r11), %eax
  0x0000028bc118dcb6:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118dcba:   	je	0x53
  0x0000028bc118dcc0:   	cmpl	$0x28, %eax
  0x0000028bc118dcc3:   	jne	0x2e
  0x0000028bc118dcc9:   	movq	%r11, %rax
  0x0000028bc118dccc:   	pushq	%rcx
  0x0000028bc118dccd:   	pushq	%rdi
  0x0000028bc118dcce:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118dcd8:   	incl	(%rcx)
  0x0000028bc118dcda:   	movq	0x30(%r10), %rdi
  0x0000028bc118dcde:   	movl	(%rdi), %ecx
  0x0000028bc118dce0:   	addq	$0x8, %rdi
  0x0000028bc118dce4:   	testq	%rax, %rax
  0x0000028bc118dce7:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118dcea:   	popq	%rdi
  0x0000028bc118dceb:   	popq	%rcx
  0x0000028bc118dcec:   	jne	0x9
  0x0000028bc118dcee:   	movq	%r11, 0x28(%r10)
  0x0000028bc118dcf2:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118dcf7:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118dd01:   	andq	$-0x10, %rsp
  0x0000028bc118dd05:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dd0f:   	callq	*%r10
  0x0000028bc118dd12:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118dd13:   	movl	0xc(%rbx), %eax
  0x0000028bc118dd16:   	shrl	$0x18, %eax
  0x0000028bc118dd19:   	andl	$0xf, %eax
  0x0000028bc118dd1c:   	cmpl	$0x7, %eax
  0x0000028bc118dd1f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118dd25:   	movabsq	$0x28bdc20f990, %rcx;   {external_word}
  0x0000028bc118dd2f:   	andq	$-0x10, %rsp
  0x0000028bc118dd33:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dd3d:   	callq	*%r10
  0x0000028bc118dd40:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118dd41:   	movl	0x24(%rbx), %ebx
  0x0000028bc118dd44:   	pushq	%r10
  0x0000028bc118dd46:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118dd50:   	cmpq	(%r10), %r12
  0x0000028bc118dd53:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118dd59:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118dd63:   	andq	$-0x10, %rsp
  0x0000028bc118dd67:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118dd71:   	callq	*%r10
  0x0000028bc118dd74:   	hlt
  0x0000028bc118dd75:   	popq	%r10
  0x0000028bc118dd77:   	shlq	$0x3, %rbx
  0x0000028bc118dd7b:   	movq	0x10(%rbx), %rbx
  0x0000028bc118dd7f:   	testq	%rbx, %rbx
  0x0000028bc118dd82:   	je	0x3
  0x0000028bc118dd88:   	jmpq	*0x58(%rbx)
  0x0000028bc118dd8b:   	jmp	-0x526870           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2486   62     n 0       java.lang.invoke.MethodHandle::linkToStatic(LJL)L (native)
 total in heap  [0x0000028bc118de10,0x0000028bc118e0a8] = 664
 relocation     [0x0000028bc118df70,0x0000028bc118dfb8] = 72
 main code      [0x0000028bc118dfc0,0x0000028bc118e0a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d3640} 'linkToStatic' '(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118dfc0:   	testq	%r9, %r9
  0x0000028bc118dfc3:   	je	0x41
  0x0000028bc118dfc9:   	pushq	%rdi
  0x0000028bc118dfca:   	pushq	%r10
  0x0000028bc118dfcc:   	movl	0x8(%r9), %edi
  0x0000028bc118dfd0:   	movabsq	$0x800000000, %r10
  0x0000028bc118dfda:   	addq	%r10, %rdi
  0x0000028bc118dfdd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dfe7:   	cmpq	(%r10), %rdi
  0x0000028bc118dfea:   	je	0x36
  0x0000028bc118dff0:   	movq	0x40(%rdi), %rdi
  0x0000028bc118dff4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dffe:   	cmpq	(%r10), %rdi
  0x0000028bc118e001:   	je	0x1f
  0x0000028bc118e007:   	popq	%r10
  0x0000028bc118e009:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118e00a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118e014:   	andq	$-0x10, %rsp
  0x0000028bc118e018:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e022:   	callq	*%r10
  0x0000028bc118e025:   	hlt
 ;; L_ok:
  0x0000028bc118e026:   	popq	%r10
  0x0000028bc118e028:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118e029:   	movl	0xc(%r9), %eax
  0x0000028bc118e02d:   	shrl	$0x18, %eax
  0x0000028bc118e030:   	andl	$0xf, %eax
  0x0000028bc118e033:   	cmpl	$0x6, %eax
  0x0000028bc118e036:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118e03c:   	movabsq	$0x28bdc20fe90, %rcx;   {external_word}
  0x0000028bc118e046:   	andq	$-0x10, %rsp
  0x0000028bc118e04a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e054:   	callq	*%r10
  0x0000028bc118e057:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118e058:   	movl	0x24(%r9), %ebx
  0x0000028bc118e05c:   	pushq	%r10
  0x0000028bc118e05e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e068:   	cmpq	(%r10), %r12
  0x0000028bc118e06b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e071:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e07b:   	andq	$-0x10, %rsp
  0x0000028bc118e07f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e089:   	callq	*%r10
  0x0000028bc118e08c:   	hlt
  0x0000028bc118e08d:   	popq	%r10
  0x0000028bc118e08f:   	shlq	$0x3, %rbx
  0x0000028bc118e093:   	movq	0x10(%rbx), %rbx
  0x0000028bc118e097:   	testq	%rbx, %rbx
  0x0000028bc118e09a:   	je	0x3
  0x0000028bc118e0a0:   	jmpq	*0x58(%rbx)
  0x0000028bc118e0a3:   	jmp	-0x526b88           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2490   62     n 0       java.lang.invoke.MethodHandle::linkToStatic(LJL)L (native)
 total in heap  [0x0000028bc118de10,0x0000028bc118e0a8] = 664
 relocation     [0x0000028bc118df70,0x0000028bc118dfb8] = 72
 main code      [0x0000028bc118dfc0,0x0000028bc118e0a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d3640} 'linkToStatic' '(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118dfc0:   	testq	%r9, %r9
  0x0000028bc118dfc3:   	je	0x41
  0x0000028bc118dfc9:   	pushq	%rdi
  0x0000028bc118dfca:   	pushq	%r10
  0x0000028bc118dfcc:   	movl	0x8(%r9), %edi
  0x0000028bc118dfd0:   	movabsq	$0x800000000, %r10
  0x0000028bc118dfda:   	addq	%r10, %rdi
  0x0000028bc118dfdd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dfe7:   	cmpq	(%r10), %rdi
  0x0000028bc118dfea:   	je	0x36
  0x0000028bc118dff0:   	movq	0x40(%rdi), %rdi
  0x0000028bc118dff4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118dffe:   	cmpq	(%r10), %rdi
  0x0000028bc118e001:   	je	0x1f
  0x0000028bc118e007:   	popq	%r10
  0x0000028bc118e009:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118e00a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118e014:   	andq	$-0x10, %rsp
  0x0000028bc118e018:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e022:   	callq	*%r10
  0x0000028bc118e025:   	hlt
 ;; L_ok:
  0x0000028bc118e026:   	popq	%r10
  0x0000028bc118e028:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118e029:   	movl	0xc(%r9), %eax
  0x0000028bc118e02d:   	shrl	$0x18, %eax
  0x0000028bc118e030:   	andl	$0xf, %eax
  0x0000028bc118e033:   	cmpl	$0x6, %eax
  0x0000028bc118e036:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118e03c:   	movabsq	$0x28bdc20fe90, %rcx;   {external_word}
  0x0000028bc118e046:   	andq	$-0x10, %rsp
  0x0000028bc118e04a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e054:   	callq	*%r10
  0x0000028bc118e057:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118e058:   	movl	0x24(%r9), %ebx
  0x0000028bc118e05c:   	pushq	%r10
  0x0000028bc118e05e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e068:   	cmpq	(%r10), %r12
  0x0000028bc118e06b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e071:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e07b:   	andq	$-0x10, %rsp
  0x0000028bc118e07f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e089:   	callq	*%r10
  0x0000028bc118e08c:   	hlt
  0x0000028bc118e08d:   	popq	%r10
  0x0000028bc118e08f:   	shlq	$0x3, %rbx
  0x0000028bc118e093:   	movq	0x10(%rbx), %rbx
  0x0000028bc118e097:   	testq	%rbx, %rbx
  0x0000028bc118e09a:   	je	0x3
  0x0000028bc118e0a0:   	jmpq	*0x58(%rbx)
  0x0000028bc118e0a3:   	jmp	-0x526b88           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2494   63     n 0       java.lang.invoke.MethodHandle::invokeBasic(LJ)L (native)
 total in heap  [0x0000028bc118e110,0x0000028bc118e388] = 632
 relocation     [0x0000028bc118e270,0x0000028bc118e2b8] = 72
 main code      [0x0000028bc118e2c0,0x0000028bc118e383] = 195
 stub code      [0x0000028bc118e383,0x0000028bc118e388] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d3778} 'invokeBasic' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118e2c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118e2c3:   	pushq	%r10
  0x0000028bc118e2c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e2cf:   	cmpq	(%r10), %r12
  0x0000028bc118e2d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e2d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e2e2:   	andq	$-0x10, %rsp
  0x0000028bc118e2e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e2f0:   	callq	*%r10
  0x0000028bc118e2f3:   	hlt
  0x0000028bc118e2f4:   	popq	%r10
  0x0000028bc118e2f6:   	shlq	$0x3, %rbx
  0x0000028bc118e2fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118e2fd:   	pushq	%r10
  0x0000028bc118e2ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e309:   	cmpq	(%r10), %r12
  0x0000028bc118e30c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e31c:   	andq	$-0x10, %rsp
  0x0000028bc118e320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e32a:   	callq	*%r10
  0x0000028bc118e32d:   	hlt
  0x0000028bc118e32e:   	popq	%r10
  0x0000028bc118e330:   	shlq	$0x3, %rbx
  0x0000028bc118e334:   	movl	0x24(%rbx), %ebx
  0x0000028bc118e337:   	pushq	%r10
  0x0000028bc118e339:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e343:   	cmpq	(%r10), %r12
  0x0000028bc118e346:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e34c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e356:   	andq	$-0x10, %rsp
  0x0000028bc118e35a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e364:   	callq	*%r10
  0x0000028bc118e367:   	hlt
  0x0000028bc118e368:   	popq	%r10
  0x0000028bc118e36a:   	shlq	$0x3, %rbx
  0x0000028bc118e36e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118e372:   	testq	%rbx, %rbx
  0x0000028bc118e375:   	je	0x3
  0x0000028bc118e37b:   	jmpq	*0x58(%rbx)
  0x0000028bc118e37e:   	jmp	-0x526e63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118e383:   	hlt
  0x0000028bc118e384:   	hlt
  0x0000028bc118e385:   	hlt
  0x0000028bc118e386:   	hlt
  0x0000028bc118e387:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2496   63     n 0       java.lang.invoke.MethodHandle::invokeBasic(LJ)L (native)
 total in heap  [0x0000028bc118e110,0x0000028bc118e388] = 632
 relocation     [0x0000028bc118e270,0x0000028bc118e2b8] = 72
 main code      [0x0000028bc118e2c0,0x0000028bc118e383] = 195
 stub code      [0x0000028bc118e383,0x0000028bc118e388] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d3778} 'invokeBasic' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118e2c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118e2c3:   	pushq	%r10
  0x0000028bc118e2c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e2cf:   	cmpq	(%r10), %r12
  0x0000028bc118e2d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e2d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e2e2:   	andq	$-0x10, %rsp
  0x0000028bc118e2e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e2f0:   	callq	*%r10
  0x0000028bc118e2f3:   	hlt
  0x0000028bc118e2f4:   	popq	%r10
  0x0000028bc118e2f6:   	shlq	$0x3, %rbx
  0x0000028bc118e2fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118e2fd:   	pushq	%r10
  0x0000028bc118e2ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e309:   	cmpq	(%r10), %r12
  0x0000028bc118e30c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e31c:   	andq	$-0x10, %rsp
  0x0000028bc118e320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e32a:   	callq	*%r10
  0x0000028bc118e32d:   	hlt
  0x0000028bc118e32e:   	popq	%r10
  0x0000028bc118e330:   	shlq	$0x3, %rbx
  0x0000028bc118e334:   	movl	0x24(%rbx), %ebx
  0x0000028bc118e337:   	pushq	%r10
  0x0000028bc118e339:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e343:   	cmpq	(%r10), %r12
  0x0000028bc118e346:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e34c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e356:   	andq	$-0x10, %rsp
  0x0000028bc118e35a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e364:   	callq	*%r10
  0x0000028bc118e367:   	hlt
  0x0000028bc118e368:   	popq	%r10
  0x0000028bc118e36a:   	shlq	$0x3, %rbx
  0x0000028bc118e36e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118e372:   	testq	%rbx, %rbx
  0x0000028bc118e375:   	je	0x3
  0x0000028bc118e37b:   	jmpq	*0x58(%rbx)
  0x0000028bc118e37e:   	jmp	-0x526e63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118e383:   	hlt
  0x0000028bc118e384:   	hlt
  0x0000028bc118e385:   	hlt
  0x0000028bc118e386:   	hlt
  0x0000028bc118e387:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2498   64     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLJL)L (native)
 total in heap  [0x0000028bc118e410,0x0000028bc118e810] = 1024
 relocation     [0x0000028bc118e570,0x0000028bc118e600] = 144
 main code      [0x0000028bc118e600,0x0000028bc118e80b] = 523
 stub code      [0x0000028bc118e80b,0x0000028bc118e810] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d38b0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = long
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118e600:   	testq	%rdi, %rdi
  0x0000028bc118e603:   	je	0x40
  0x0000028bc118e609:   	pushq	%rdi
  0x0000028bc118e60a:   	pushq	%r10
  0x0000028bc118e60c:   	movl	0x8(%rdi), %edi
  0x0000028bc118e60f:   	movabsq	$0x800000000, %r10
  0x0000028bc118e619:   	addq	%r10, %rdi
  0x0000028bc118e61c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118e626:   	cmpq	(%r10), %rdi
  0x0000028bc118e629:   	je	0x36
  0x0000028bc118e62f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118e633:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118e63d:   	cmpq	(%r10), %rdi
  0x0000028bc118e640:   	je	0x1f
  0x0000028bc118e646:   	popq	%r10
  0x0000028bc118e648:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118e649:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118e653:   	andq	$-0x10, %rsp
  0x0000028bc118e657:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e661:   	callq	*%r10
  0x0000028bc118e664:   	hlt
 ;; L_ok:
  0x0000028bc118e665:   	popq	%r10
  0x0000028bc118e667:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118e668:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118e66b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118e66f:   	movabsq	$0x800000000, %r11
  0x0000028bc118e679:   	addq	%r11, %r10
  0x0000028bc118e67c:   	movl	0x18(%rdi), %r11d
  0x0000028bc118e680:   	pushq	%r10
  0x0000028bc118e682:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e68c:   	cmpq	(%r10), %r12
  0x0000028bc118e68f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e695:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e69f:   	andq	$-0x10, %rsp
  0x0000028bc118e6a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e6ad:   	callq	*%r10
  0x0000028bc118e6b0:   	hlt
  0x0000028bc118e6b1:   	popq	%r10
  0x0000028bc118e6b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118e6b7:   	testq	%r11, %r11
  0x0000028bc118e6ba:   	je	0x41
  0x0000028bc118e6c0:   	pushq	%rdi
  0x0000028bc118e6c1:   	pushq	%r10
  0x0000028bc118e6c3:   	movl	0x8(%r11), %edi
  0x0000028bc118e6c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118e6d1:   	addq	%r10, %rdi
  0x0000028bc118e6d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118e6de:   	cmpq	(%r10), %rdi
  0x0000028bc118e6e1:   	je	0x36
  0x0000028bc118e6e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118e6eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118e6f5:   	cmpq	(%r10), %rdi
  0x0000028bc118e6f8:   	je	0x1f
  0x0000028bc118e6fe:   	popq	%r10
  0x0000028bc118e700:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118e701:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118e70b:   	andq	$-0x10, %rsp
  0x0000028bc118e70f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e719:   	callq	*%r10
  0x0000028bc118e71c:   	hlt
 ;; L_ok:
  0x0000028bc118e71d:   	popq	%r10
  0x0000028bc118e71f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118e720:   	movq	0x10(%r11), %r11
  0x0000028bc118e724:   	cmpq	%r11, %r10
  0x0000028bc118e727:   	je	0x61
  0x0000028bc118e72d:   	movl	0x1c(%r11), %eax
  0x0000028bc118e731:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118e735:   	je	0x53
  0x0000028bc118e73b:   	cmpl	$0x28, %eax
  0x0000028bc118e73e:   	jne	0x2e
  0x0000028bc118e744:   	movq	%r11, %rax
  0x0000028bc118e747:   	pushq	%rcx
  0x0000028bc118e748:   	pushq	%rdi
  0x0000028bc118e749:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118e753:   	incl	(%rcx)
  0x0000028bc118e755:   	movq	0x30(%r10), %rdi
  0x0000028bc118e759:   	movl	(%rdi), %ecx
  0x0000028bc118e75b:   	addq	$0x8, %rdi
  0x0000028bc118e75f:   	testq	%rax, %rax
  0x0000028bc118e762:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118e765:   	popq	%rdi
  0x0000028bc118e766:   	popq	%rcx
  0x0000028bc118e767:   	jne	0x9
  0x0000028bc118e769:   	movq	%r11, 0x28(%r10)
  0x0000028bc118e76d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118e772:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118e77c:   	andq	$-0x10, %rsp
  0x0000028bc118e780:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e78a:   	callq	*%r10
  0x0000028bc118e78d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118e78e:   	movl	0xc(%rdi), %eax
  0x0000028bc118e791:   	shrl	$0x18, %eax
  0x0000028bc118e794:   	andl	$0xf, %eax
  0x0000028bc118e797:   	cmpl	$0x7, %eax
  0x0000028bc118e79a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118e7a0:   	movabsq	$0x28bdc20fd10, %rcx;   {external_word}
  0x0000028bc118e7aa:   	andq	$-0x10, %rsp
  0x0000028bc118e7ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e7b8:   	callq	*%r10
  0x0000028bc118e7bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118e7bc:   	movl	0x24(%rdi), %ebx
  0x0000028bc118e7bf:   	pushq	%r10
  0x0000028bc118e7c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e7cb:   	cmpq	(%r10), %r12
  0x0000028bc118e7ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e7d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e7de:   	andq	$-0x10, %rsp
  0x0000028bc118e7e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e7ec:   	callq	*%r10
  0x0000028bc118e7ef:   	hlt
  0x0000028bc118e7f0:   	popq	%r10
  0x0000028bc118e7f2:   	shlq	$0x3, %rbx
  0x0000028bc118e7f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118e7fa:   	testq	%rbx, %rbx
  0x0000028bc118e7fd:   	je	0x3
  0x0000028bc118e803:   	jmpq	*0x58(%rbx)
  0x0000028bc118e806:   	jmp	-0x5272eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118e80b:   	hlt
  0x0000028bc118e80c:   	hlt
  0x0000028bc118e80d:   	hlt
  0x0000028bc118e80e:   	hlt
  0x0000028bc118e80f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2503   64     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLJL)L (native)
 total in heap  [0x0000028bc118e410,0x0000028bc118e810] = 1024
 relocation     [0x0000028bc118e570,0x0000028bc118e600] = 144
 main code      [0x0000028bc118e600,0x0000028bc118e80b] = 523
 stub code      [0x0000028bc118e80b,0x0000028bc118e810] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d38b0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = long
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118e600:   	testq	%rdi, %rdi
  0x0000028bc118e603:   	je	0x40
  0x0000028bc118e609:   	pushq	%rdi
  0x0000028bc118e60a:   	pushq	%r10
  0x0000028bc118e60c:   	movl	0x8(%rdi), %edi
  0x0000028bc118e60f:   	movabsq	$0x800000000, %r10
  0x0000028bc118e619:   	addq	%r10, %rdi
  0x0000028bc118e61c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118e626:   	cmpq	(%r10), %rdi
  0x0000028bc118e629:   	je	0x36
  0x0000028bc118e62f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118e633:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118e63d:   	cmpq	(%r10), %rdi
  0x0000028bc118e640:   	je	0x1f
  0x0000028bc118e646:   	popq	%r10
  0x0000028bc118e648:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118e649:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118e653:   	andq	$-0x10, %rsp
  0x0000028bc118e657:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e661:   	callq	*%r10
  0x0000028bc118e664:   	hlt
 ;; L_ok:
  0x0000028bc118e665:   	popq	%r10
  0x0000028bc118e667:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118e668:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118e66b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118e66f:   	movabsq	$0x800000000, %r11
  0x0000028bc118e679:   	addq	%r11, %r10
  0x0000028bc118e67c:   	movl	0x18(%rdi), %r11d
  0x0000028bc118e680:   	pushq	%r10
  0x0000028bc118e682:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e68c:   	cmpq	(%r10), %r12
  0x0000028bc118e68f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e695:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e69f:   	andq	$-0x10, %rsp
  0x0000028bc118e6a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e6ad:   	callq	*%r10
  0x0000028bc118e6b0:   	hlt
  0x0000028bc118e6b1:   	popq	%r10
  0x0000028bc118e6b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118e6b7:   	testq	%r11, %r11
  0x0000028bc118e6ba:   	je	0x41
  0x0000028bc118e6c0:   	pushq	%rdi
  0x0000028bc118e6c1:   	pushq	%r10
  0x0000028bc118e6c3:   	movl	0x8(%r11), %edi
  0x0000028bc118e6c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118e6d1:   	addq	%r10, %rdi
  0x0000028bc118e6d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118e6de:   	cmpq	(%r10), %rdi
  0x0000028bc118e6e1:   	je	0x36
  0x0000028bc118e6e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118e6eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118e6f5:   	cmpq	(%r10), %rdi
  0x0000028bc118e6f8:   	je	0x1f
  0x0000028bc118e6fe:   	popq	%r10
  0x0000028bc118e700:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118e701:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118e70b:   	andq	$-0x10, %rsp
  0x0000028bc118e70f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e719:   	callq	*%r10
  0x0000028bc118e71c:   	hlt
 ;; L_ok:
  0x0000028bc118e71d:   	popq	%r10
  0x0000028bc118e71f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118e720:   	movq	0x10(%r11), %r11
  0x0000028bc118e724:   	cmpq	%r11, %r10
  0x0000028bc118e727:   	je	0x61
  0x0000028bc118e72d:   	movl	0x1c(%r11), %eax
  0x0000028bc118e731:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118e735:   	je	0x53
  0x0000028bc118e73b:   	cmpl	$0x28, %eax
  0x0000028bc118e73e:   	jne	0x2e
  0x0000028bc118e744:   	movq	%r11, %rax
  0x0000028bc118e747:   	pushq	%rcx
  0x0000028bc118e748:   	pushq	%rdi
  0x0000028bc118e749:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118e753:   	incl	(%rcx)
  0x0000028bc118e755:   	movq	0x30(%r10), %rdi
  0x0000028bc118e759:   	movl	(%rdi), %ecx
  0x0000028bc118e75b:   	addq	$0x8, %rdi
  0x0000028bc118e75f:   	testq	%rax, %rax
  0x0000028bc118e762:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118e765:   	popq	%rdi
  0x0000028bc118e766:   	popq	%rcx
  0x0000028bc118e767:   	jne	0x9
  0x0000028bc118e769:   	movq	%r11, 0x28(%r10)
  0x0000028bc118e76d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118e772:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118e77c:   	andq	$-0x10, %rsp
  0x0000028bc118e780:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e78a:   	callq	*%r10
  0x0000028bc118e78d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118e78e:   	movl	0xc(%rdi), %eax
  0x0000028bc118e791:   	shrl	$0x18, %eax
  0x0000028bc118e794:   	andl	$0xf, %eax
  0x0000028bc118e797:   	cmpl	$0x7, %eax
  0x0000028bc118e79a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118e7a0:   	movabsq	$0x28bdc20fd10, %rcx;   {external_word}
  0x0000028bc118e7aa:   	andq	$-0x10, %rsp
  0x0000028bc118e7ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e7b8:   	callq	*%r10
  0x0000028bc118e7bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118e7bc:   	movl	0x24(%rdi), %ebx
  0x0000028bc118e7bf:   	pushq	%r10
  0x0000028bc118e7c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118e7cb:   	cmpq	(%r10), %r12
  0x0000028bc118e7ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118e7d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118e7de:   	andq	$-0x10, %rsp
  0x0000028bc118e7e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118e7ec:   	callq	*%r10
  0x0000028bc118e7ef:   	hlt
  0x0000028bc118e7f0:   	popq	%r10
  0x0000028bc118e7f2:   	shlq	$0x3, %rbx
  0x0000028bc118e7f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118e7fa:   	testq	%rbx, %rbx
  0x0000028bc118e7fd:   	je	0x3
  0x0000028bc118e803:   	jmpq	*0x58(%rbx)
  0x0000028bc118e806:   	jmp	-0x5272eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118e80b:   	hlt
  0x0000028bc118e80c:   	hlt
  0x0000028bc118e80d:   	hlt
  0x0000028bc118e80e:   	hlt
  0x0000028bc118e80f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2514   65     n 0       java.lang.invoke.MethodHandle::linkToStatic(JLLLL)J (native)
 total in heap  [0x0000028bc118e890,0x0000028bc118eb28] = 664
 relocation     [0x0000028bc118e9f0,0x0000028bc118ea38] = 72
 main code      [0x0000028bc118ea40,0x0000028bc118eb25] = 229
 stub code      [0x0000028bc118eb25,0x0000028bc118eb28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d3fe8} 'linkToStatic' '(JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118ea40:   	testq	%rsi, %rsi
  0x0000028bc118ea43:   	je	0x40
  0x0000028bc118ea49:   	pushq	%rdi
  0x0000028bc118ea4a:   	pushq	%r10
  0x0000028bc118ea4c:   	movl	0x8(%rsi), %edi
  0x0000028bc118ea4f:   	movabsq	$0x800000000, %r10
  0x0000028bc118ea59:   	addq	%r10, %rdi
  0x0000028bc118ea5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118ea66:   	cmpq	(%r10), %rdi
  0x0000028bc118ea69:   	je	0x36
  0x0000028bc118ea6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ea73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118ea7d:   	cmpq	(%r10), %rdi
  0x0000028bc118ea80:   	je	0x1f
  0x0000028bc118ea86:   	popq	%r10
  0x0000028bc118ea88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118ea89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118ea93:   	andq	$-0x10, %rsp
  0x0000028bc118ea97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118eaa1:   	callq	*%r10
  0x0000028bc118eaa4:   	hlt
 ;; L_ok:
  0x0000028bc118eaa5:   	popq	%r10
  0x0000028bc118eaa7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118eaa8:   	movl	0xc(%rsi), %eax
  0x0000028bc118eaab:   	shrl	$0x18, %eax
  0x0000028bc118eaae:   	andl	$0xf, %eax
  0x0000028bc118eab1:   	cmpl	$0x6, %eax
  0x0000028bc118eab4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118eaba:   	movabsq	$0x28bdc20f290, %rcx;   {external_word}
  0x0000028bc118eac4:   	andq	$-0x10, %rsp
  0x0000028bc118eac8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ead2:   	callq	*%r10
  0x0000028bc118ead5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ead6:   	movl	0x24(%rsi), %ebx
  0x0000028bc118ead9:   	pushq	%r10
  0x0000028bc118eadb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118eae5:   	cmpq	(%r10), %r12
  0x0000028bc118eae8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118eaee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118eaf8:   	andq	$-0x10, %rsp
  0x0000028bc118eafc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118eb06:   	callq	*%r10
  0x0000028bc118eb09:   	hlt
  0x0000028bc118eb0a:   	popq	%r10
  0x0000028bc118eb0c:   	shlq	$0x3, %rbx
  0x0000028bc118eb10:   	movq	0x10(%rbx), %rbx
  0x0000028bc118eb14:   	testq	%rbx, %rbx
  0x0000028bc118eb17:   	je	0x3
  0x0000028bc118eb1d:   	jmpq	*0x58(%rbx)
  0x0000028bc118eb20:   	jmp	-0x527605           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118eb25:   	hlt
  0x0000028bc118eb26:   	hlt
  0x0000028bc118eb27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2517   65     n 0       java.lang.invoke.MethodHandle::linkToStatic(JLLLL)J (native)
 total in heap  [0x0000028bc118e890,0x0000028bc118eb28] = 664
 relocation     [0x0000028bc118e9f0,0x0000028bc118ea38] = 72
 main code      [0x0000028bc118ea40,0x0000028bc118eb25] = 229
 stub code      [0x0000028bc118eb25,0x0000028bc118eb28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d3fe8} 'linkToStatic' '(JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118ea40:   	testq	%rsi, %rsi
  0x0000028bc118ea43:   	je	0x40
  0x0000028bc118ea49:   	pushq	%rdi
  0x0000028bc118ea4a:   	pushq	%r10
  0x0000028bc118ea4c:   	movl	0x8(%rsi), %edi
  0x0000028bc118ea4f:   	movabsq	$0x800000000, %r10
  0x0000028bc118ea59:   	addq	%r10, %rdi
  0x0000028bc118ea5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118ea66:   	cmpq	(%r10), %rdi
  0x0000028bc118ea69:   	je	0x36
  0x0000028bc118ea6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118ea73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118ea7d:   	cmpq	(%r10), %rdi
  0x0000028bc118ea80:   	je	0x1f
  0x0000028bc118ea86:   	popq	%r10
  0x0000028bc118ea88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118ea89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118ea93:   	andq	$-0x10, %rsp
  0x0000028bc118ea97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118eaa1:   	callq	*%r10
  0x0000028bc118eaa4:   	hlt
 ;; L_ok:
  0x0000028bc118eaa5:   	popq	%r10
  0x0000028bc118eaa7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118eaa8:   	movl	0xc(%rsi), %eax
  0x0000028bc118eaab:   	shrl	$0x18, %eax
  0x0000028bc118eaae:   	andl	$0xf, %eax
  0x0000028bc118eab1:   	cmpl	$0x6, %eax
  0x0000028bc118eab4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118eaba:   	movabsq	$0x28bdc20f290, %rcx;   {external_word}
  0x0000028bc118eac4:   	andq	$-0x10, %rsp
  0x0000028bc118eac8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ead2:   	callq	*%r10
  0x0000028bc118ead5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118ead6:   	movl	0x24(%rsi), %ebx
  0x0000028bc118ead9:   	pushq	%r10
  0x0000028bc118eadb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118eae5:   	cmpq	(%r10), %r12
  0x0000028bc118eae8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118eaee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118eaf8:   	andq	$-0x10, %rsp
  0x0000028bc118eafc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118eb06:   	callq	*%r10
  0x0000028bc118eb09:   	hlt
  0x0000028bc118eb0a:   	popq	%r10
  0x0000028bc118eb0c:   	shlq	$0x3, %rbx
  0x0000028bc118eb10:   	movq	0x10(%rbx), %rbx
  0x0000028bc118eb14:   	testq	%rbx, %rbx
  0x0000028bc118eb17:   	je	0x3
  0x0000028bc118eb1d:   	jmpq	*0x58(%rbx)
  0x0000028bc118eb20:   	jmp	-0x527605           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118eb25:   	hlt
  0x0000028bc118eb26:   	hlt
  0x0000028bc118eb27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2523   66     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLLL)J (native)
 total in heap  [0x0000028bc118eb90,0x0000028bc118ee08] = 632
 relocation     [0x0000028bc118ecf0,0x0000028bc118ed38] = 72
 main code      [0x0000028bc118ed40,0x0000028bc118ee03] = 195
 stub code      [0x0000028bc118ee03,0x0000028bc118ee08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d4120} 'invokeBasic' '(JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118ed40:   	movl	0x14(%rdx), %ebx
  0x0000028bc118ed43:   	pushq	%r10
  0x0000028bc118ed45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ed4f:   	cmpq	(%r10), %r12
  0x0000028bc118ed52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ed58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ed62:   	andq	$-0x10, %rsp
  0x0000028bc118ed66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ed70:   	callq	*%r10
  0x0000028bc118ed73:   	hlt
  0x0000028bc118ed74:   	popq	%r10
  0x0000028bc118ed76:   	shlq	$0x3, %rbx
  0x0000028bc118ed7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118ed7d:   	pushq	%r10
  0x0000028bc118ed7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ed89:   	cmpq	(%r10), %r12
  0x0000028bc118ed8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ed92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ed9c:   	andq	$-0x10, %rsp
  0x0000028bc118eda0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118edaa:   	callq	*%r10
  0x0000028bc118edad:   	hlt
  0x0000028bc118edae:   	popq	%r10
  0x0000028bc118edb0:   	shlq	$0x3, %rbx
  0x0000028bc118edb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118edb7:   	pushq	%r10
  0x0000028bc118edb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118edc3:   	cmpq	(%r10), %r12
  0x0000028bc118edc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118edcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118edd6:   	andq	$-0x10, %rsp
  0x0000028bc118edda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ede4:   	callq	*%r10
  0x0000028bc118ede7:   	hlt
  0x0000028bc118ede8:   	popq	%r10
  0x0000028bc118edea:   	shlq	$0x3, %rbx
  0x0000028bc118edee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118edf2:   	testq	%rbx, %rbx
  0x0000028bc118edf5:   	je	0x3
  0x0000028bc118edfb:   	jmpq	*0x58(%rbx)
  0x0000028bc118edfe:   	jmp	-0x5278e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118ee03:   	hlt
  0x0000028bc118ee04:   	hlt
  0x0000028bc118ee05:   	hlt
  0x0000028bc118ee06:   	hlt
  0x0000028bc118ee07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2526   66     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLLL)J (native)
 total in heap  [0x0000028bc118eb90,0x0000028bc118ee08] = 632
 relocation     [0x0000028bc118ecf0,0x0000028bc118ed38] = 72
 main code      [0x0000028bc118ed40,0x0000028bc118ee03] = 195
 stub code      [0x0000028bc118ee03,0x0000028bc118ee08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d4120} 'invokeBasic' '(JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118ed40:   	movl	0x14(%rdx), %ebx
  0x0000028bc118ed43:   	pushq	%r10
  0x0000028bc118ed45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ed4f:   	cmpq	(%r10), %r12
  0x0000028bc118ed52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ed58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ed62:   	andq	$-0x10, %rsp
  0x0000028bc118ed66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ed70:   	callq	*%r10
  0x0000028bc118ed73:   	hlt
  0x0000028bc118ed74:   	popq	%r10
  0x0000028bc118ed76:   	shlq	$0x3, %rbx
  0x0000028bc118ed7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118ed7d:   	pushq	%r10
  0x0000028bc118ed7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ed89:   	cmpq	(%r10), %r12
  0x0000028bc118ed8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ed92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ed9c:   	andq	$-0x10, %rsp
  0x0000028bc118eda0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118edaa:   	callq	*%r10
  0x0000028bc118edad:   	hlt
  0x0000028bc118edae:   	popq	%r10
  0x0000028bc118edb0:   	shlq	$0x3, %rbx
  0x0000028bc118edb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118edb7:   	pushq	%r10
  0x0000028bc118edb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118edc3:   	cmpq	(%r10), %r12
  0x0000028bc118edc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118edcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118edd6:   	andq	$-0x10, %rsp
  0x0000028bc118edda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ede4:   	callq	*%r10
  0x0000028bc118ede7:   	hlt
  0x0000028bc118ede8:   	popq	%r10
  0x0000028bc118edea:   	shlq	$0x3, %rbx
  0x0000028bc118edee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118edf2:   	testq	%rbx, %rbx
  0x0000028bc118edf5:   	je	0x3
  0x0000028bc118edfb:   	jmpq	*0x58(%rbx)
  0x0000028bc118edfe:   	jmp	-0x5278e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118ee03:   	hlt
  0x0000028bc118ee04:   	hlt
  0x0000028bc118ee05:   	hlt
  0x0000028bc118ee06:   	hlt
  0x0000028bc118ee07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2531   67     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLLLL)J (native)
 total in heap  [0x0000028bc118ee90,0x0000028bc118f290] = 1024
 relocation     [0x0000028bc118eff0,0x0000028bc118f080] = 144
 main code      [0x0000028bc118f080,0x0000028bc118f28b] = 523
 stub code      [0x0000028bc118f28b,0x0000028bc118f290] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d4258} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118f080:   	testq	%rcx, %rcx
  0x0000028bc118f083:   	je	0x40
  0x0000028bc118f089:   	pushq	%rdi
  0x0000028bc118f08a:   	pushq	%r10
  0x0000028bc118f08c:   	movl	0x8(%rcx), %edi
  0x0000028bc118f08f:   	movabsq	$0x800000000, %r10
  0x0000028bc118f099:   	addq	%r10, %rdi
  0x0000028bc118f09c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f0a6:   	cmpq	(%r10), %rdi
  0x0000028bc118f0a9:   	je	0x36
  0x0000028bc118f0af:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f0b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f0bd:   	cmpq	(%r10), %rdi
  0x0000028bc118f0c0:   	je	0x1f
  0x0000028bc118f0c6:   	popq	%r10
  0x0000028bc118f0c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118f0c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118f0d3:   	andq	$-0x10, %rsp
  0x0000028bc118f0d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f0e1:   	callq	*%r10
  0x0000028bc118f0e4:   	hlt
 ;; L_ok:
  0x0000028bc118f0e5:   	popq	%r10
  0x0000028bc118f0e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f0e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118f0eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc118f0ef:   	movabsq	$0x800000000, %r11
  0x0000028bc118f0f9:   	addq	%r11, %r10
  0x0000028bc118f0fc:   	movl	0x18(%rcx), %r11d
  0x0000028bc118f100:   	pushq	%r10
  0x0000028bc118f102:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f10c:   	cmpq	(%r10), %r12
  0x0000028bc118f10f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f115:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f11f:   	andq	$-0x10, %rsp
  0x0000028bc118f123:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f12d:   	callq	*%r10
  0x0000028bc118f130:   	hlt
  0x0000028bc118f131:   	popq	%r10
  0x0000028bc118f133:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118f137:   	testq	%r11, %r11
  0x0000028bc118f13a:   	je	0x41
  0x0000028bc118f140:   	pushq	%rdi
  0x0000028bc118f141:   	pushq	%r10
  0x0000028bc118f143:   	movl	0x8(%r11), %edi
  0x0000028bc118f147:   	movabsq	$0x800000000, %r10
  0x0000028bc118f151:   	addq	%r10, %rdi
  0x0000028bc118f154:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f15e:   	cmpq	(%r10), %rdi
  0x0000028bc118f161:   	je	0x36
  0x0000028bc118f167:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f16b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f175:   	cmpq	(%r10), %rdi
  0x0000028bc118f178:   	je	0x1f
  0x0000028bc118f17e:   	popq	%r10
  0x0000028bc118f180:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118f181:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118f18b:   	andq	$-0x10, %rsp
  0x0000028bc118f18f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f199:   	callq	*%r10
  0x0000028bc118f19c:   	hlt
 ;; L_ok:
  0x0000028bc118f19d:   	popq	%r10
  0x0000028bc118f19f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f1a0:   	movq	0x10(%r11), %r11
  0x0000028bc118f1a4:   	cmpq	%r11, %r10
  0x0000028bc118f1a7:   	je	0x61
  0x0000028bc118f1ad:   	movl	0x1c(%r11), %eax
  0x0000028bc118f1b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118f1b5:   	je	0x53
  0x0000028bc118f1bb:   	cmpl	$0x28, %eax
  0x0000028bc118f1be:   	jne	0x2e
  0x0000028bc118f1c4:   	movq	%r11, %rax
  0x0000028bc118f1c7:   	pushq	%rcx
  0x0000028bc118f1c8:   	pushq	%rdi
  0x0000028bc118f1c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118f1d3:   	incl	(%rcx)
  0x0000028bc118f1d5:   	movq	0x30(%r10), %rdi
  0x0000028bc118f1d9:   	movl	(%rdi), %ecx
  0x0000028bc118f1db:   	addq	$0x8, %rdi
  0x0000028bc118f1df:   	testq	%rax, %rax
  0x0000028bc118f1e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118f1e5:   	popq	%rdi
  0x0000028bc118f1e6:   	popq	%rcx
  0x0000028bc118f1e7:   	jne	0x9
  0x0000028bc118f1e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc118f1ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118f1f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118f1fc:   	andq	$-0x10, %rsp
  0x0000028bc118f200:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f20a:   	callq	*%r10
  0x0000028bc118f20d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118f20e:   	movl	0xc(%rcx), %eax
  0x0000028bc118f211:   	shrl	$0x18, %eax
  0x0000028bc118f214:   	andl	$0xf, %eax
  0x0000028bc118f217:   	cmpl	$0x7, %eax
  0x0000028bc118f21a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118f220:   	movabsq	$0x28bdc20f510, %rcx;   {external_word}
  0x0000028bc118f22a:   	andq	$-0x10, %rsp
  0x0000028bc118f22e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f238:   	callq	*%r10
  0x0000028bc118f23b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118f23c:   	movl	0x24(%rcx), %ebx
  0x0000028bc118f23f:   	pushq	%r10
  0x0000028bc118f241:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f24b:   	cmpq	(%r10), %r12
  0x0000028bc118f24e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f254:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f25e:   	andq	$-0x10, %rsp
  0x0000028bc118f262:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f26c:   	callq	*%r10
  0x0000028bc118f26f:   	hlt
  0x0000028bc118f270:   	popq	%r10
  0x0000028bc118f272:   	shlq	$0x3, %rbx
  0x0000028bc118f276:   	movq	0x10(%rbx), %rbx
  0x0000028bc118f27a:   	testq	%rbx, %rbx
  0x0000028bc118f27d:   	je	0x3
  0x0000028bc118f283:   	jmpq	*0x58(%rbx)
  0x0000028bc118f286:   	jmp	-0x527d6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118f28b:   	hlt
  0x0000028bc118f28c:   	hlt
  0x0000028bc118f28d:   	hlt
  0x0000028bc118f28e:   	hlt
  0x0000028bc118f28f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2536   67     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLLLL)J (native)
 total in heap  [0x0000028bc118ee90,0x0000028bc118f290] = 1024
 relocation     [0x0000028bc118eff0,0x0000028bc118f080] = 144
 main code      [0x0000028bc118f080,0x0000028bc118f28b] = 523
 stub code      [0x0000028bc118f28b,0x0000028bc118f290] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d4258} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118f080:   	testq	%rcx, %rcx
  0x0000028bc118f083:   	je	0x40
  0x0000028bc118f089:   	pushq	%rdi
  0x0000028bc118f08a:   	pushq	%r10
  0x0000028bc118f08c:   	movl	0x8(%rcx), %edi
  0x0000028bc118f08f:   	movabsq	$0x800000000, %r10
  0x0000028bc118f099:   	addq	%r10, %rdi
  0x0000028bc118f09c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f0a6:   	cmpq	(%r10), %rdi
  0x0000028bc118f0a9:   	je	0x36
  0x0000028bc118f0af:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f0b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f0bd:   	cmpq	(%r10), %rdi
  0x0000028bc118f0c0:   	je	0x1f
  0x0000028bc118f0c6:   	popq	%r10
  0x0000028bc118f0c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118f0c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118f0d3:   	andq	$-0x10, %rsp
  0x0000028bc118f0d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f0e1:   	callq	*%r10
  0x0000028bc118f0e4:   	hlt
 ;; L_ok:
  0x0000028bc118f0e5:   	popq	%r10
  0x0000028bc118f0e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f0e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118f0eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc118f0ef:   	movabsq	$0x800000000, %r11
  0x0000028bc118f0f9:   	addq	%r11, %r10
  0x0000028bc118f0fc:   	movl	0x18(%rcx), %r11d
  0x0000028bc118f100:   	pushq	%r10
  0x0000028bc118f102:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f10c:   	cmpq	(%r10), %r12
  0x0000028bc118f10f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f115:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f11f:   	andq	$-0x10, %rsp
  0x0000028bc118f123:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f12d:   	callq	*%r10
  0x0000028bc118f130:   	hlt
  0x0000028bc118f131:   	popq	%r10
  0x0000028bc118f133:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118f137:   	testq	%r11, %r11
  0x0000028bc118f13a:   	je	0x41
  0x0000028bc118f140:   	pushq	%rdi
  0x0000028bc118f141:   	pushq	%r10
  0x0000028bc118f143:   	movl	0x8(%r11), %edi
  0x0000028bc118f147:   	movabsq	$0x800000000, %r10
  0x0000028bc118f151:   	addq	%r10, %rdi
  0x0000028bc118f154:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f15e:   	cmpq	(%r10), %rdi
  0x0000028bc118f161:   	je	0x36
  0x0000028bc118f167:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f16b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f175:   	cmpq	(%r10), %rdi
  0x0000028bc118f178:   	je	0x1f
  0x0000028bc118f17e:   	popq	%r10
  0x0000028bc118f180:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118f181:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118f18b:   	andq	$-0x10, %rsp
  0x0000028bc118f18f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f199:   	callq	*%r10
  0x0000028bc118f19c:   	hlt
 ;; L_ok:
  0x0000028bc118f19d:   	popq	%r10
  0x0000028bc118f19f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f1a0:   	movq	0x10(%r11), %r11
  0x0000028bc118f1a4:   	cmpq	%r11, %r10
  0x0000028bc118f1a7:   	je	0x61
  0x0000028bc118f1ad:   	movl	0x1c(%r11), %eax
  0x0000028bc118f1b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118f1b5:   	je	0x53
  0x0000028bc118f1bb:   	cmpl	$0x28, %eax
  0x0000028bc118f1be:   	jne	0x2e
  0x0000028bc118f1c4:   	movq	%r11, %rax
  0x0000028bc118f1c7:   	pushq	%rcx
  0x0000028bc118f1c8:   	pushq	%rdi
  0x0000028bc118f1c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118f1d3:   	incl	(%rcx)
  0x0000028bc118f1d5:   	movq	0x30(%r10), %rdi
  0x0000028bc118f1d9:   	movl	(%rdi), %ecx
  0x0000028bc118f1db:   	addq	$0x8, %rdi
  0x0000028bc118f1df:   	testq	%rax, %rax
  0x0000028bc118f1e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118f1e5:   	popq	%rdi
  0x0000028bc118f1e6:   	popq	%rcx
  0x0000028bc118f1e7:   	jne	0x9
  0x0000028bc118f1e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc118f1ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118f1f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118f1fc:   	andq	$-0x10, %rsp
  0x0000028bc118f200:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f20a:   	callq	*%r10
  0x0000028bc118f20d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118f20e:   	movl	0xc(%rcx), %eax
  0x0000028bc118f211:   	shrl	$0x18, %eax
  0x0000028bc118f214:   	andl	$0xf, %eax
  0x0000028bc118f217:   	cmpl	$0x7, %eax
  0x0000028bc118f21a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118f220:   	movabsq	$0x28bdc20f510, %rcx;   {external_word}
  0x0000028bc118f22a:   	andq	$-0x10, %rsp
  0x0000028bc118f22e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f238:   	callq	*%r10
  0x0000028bc118f23b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118f23c:   	movl	0x24(%rcx), %ebx
  0x0000028bc118f23f:   	pushq	%r10
  0x0000028bc118f241:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f24b:   	cmpq	(%r10), %r12
  0x0000028bc118f24e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f254:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f25e:   	andq	$-0x10, %rsp
  0x0000028bc118f262:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f26c:   	callq	*%r10
  0x0000028bc118f26f:   	hlt
  0x0000028bc118f270:   	popq	%r10
  0x0000028bc118f272:   	shlq	$0x3, %rbx
  0x0000028bc118f276:   	movq	0x10(%rbx), %rbx
  0x0000028bc118f27a:   	testq	%rbx, %rbx
  0x0000028bc118f27d:   	je	0x3
  0x0000028bc118f283:   	jmpq	*0x58(%rbx)
  0x0000028bc118f286:   	jmp	-0x527d6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118f28b:   	hlt
  0x0000028bc118f28c:   	hlt
  0x0000028bc118f28d:   	hlt
  0x0000028bc118f28e:   	hlt
  0x0000028bc118f28f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2547   68     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLL)J (native)
 total in heap  [0x0000028bc118f310,0x0000028bc118f588] = 632
 relocation     [0x0000028bc118f470,0x0000028bc118f4b8] = 72
 main code      [0x0000028bc118f4c0,0x0000028bc118f583] = 195
 stub code      [0x0000028bc118f583,0x0000028bc118f588] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d4fb0} 'invokeBasic' '(JLjava/lang/Object;Ljava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118f4c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118f4c3:   	pushq	%r10
  0x0000028bc118f4c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f4cf:   	cmpq	(%r10), %r12
  0x0000028bc118f4d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f4d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f4e2:   	andq	$-0x10, %rsp
  0x0000028bc118f4e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f4f0:   	callq	*%r10
  0x0000028bc118f4f3:   	hlt
  0x0000028bc118f4f4:   	popq	%r10
  0x0000028bc118f4f6:   	shlq	$0x3, %rbx
  0x0000028bc118f4fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118f4fd:   	pushq	%r10
  0x0000028bc118f4ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f509:   	cmpq	(%r10), %r12
  0x0000028bc118f50c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f512:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f51c:   	andq	$-0x10, %rsp
  0x0000028bc118f520:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f52a:   	callq	*%r10
  0x0000028bc118f52d:   	hlt
  0x0000028bc118f52e:   	popq	%r10
  0x0000028bc118f530:   	shlq	$0x3, %rbx
  0x0000028bc118f534:   	movl	0x24(%rbx), %ebx
  0x0000028bc118f537:   	pushq	%r10
  0x0000028bc118f539:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f543:   	cmpq	(%r10), %r12
  0x0000028bc118f546:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f54c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f556:   	andq	$-0x10, %rsp
  0x0000028bc118f55a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f564:   	callq	*%r10
  0x0000028bc118f567:   	hlt
  0x0000028bc118f568:   	popq	%r10
  0x0000028bc118f56a:   	shlq	$0x3, %rbx
  0x0000028bc118f56e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118f572:   	testq	%rbx, %rbx
  0x0000028bc118f575:   	je	0x3
  0x0000028bc118f57b:   	jmpq	*0x58(%rbx)
  0x0000028bc118f57e:   	jmp	-0x528063           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118f583:   	hlt
  0x0000028bc118f584:   	hlt
  0x0000028bc118f585:   	hlt
  0x0000028bc118f586:   	hlt
  0x0000028bc118f587:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2550   68     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLL)J (native)
 total in heap  [0x0000028bc118f310,0x0000028bc118f588] = 632
 relocation     [0x0000028bc118f470,0x0000028bc118f4b8] = 72
 main code      [0x0000028bc118f4c0,0x0000028bc118f583] = 195
 stub code      [0x0000028bc118f583,0x0000028bc118f588] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d4fb0} 'invokeBasic' '(JLjava/lang/Object;Ljava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118f4c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc118f4c3:   	pushq	%r10
  0x0000028bc118f4c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f4cf:   	cmpq	(%r10), %r12
  0x0000028bc118f4d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f4d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f4e2:   	andq	$-0x10, %rsp
  0x0000028bc118f4e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f4f0:   	callq	*%r10
  0x0000028bc118f4f3:   	hlt
  0x0000028bc118f4f4:   	popq	%r10
  0x0000028bc118f4f6:   	shlq	$0x3, %rbx
  0x0000028bc118f4fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc118f4fd:   	pushq	%r10
  0x0000028bc118f4ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f509:   	cmpq	(%r10), %r12
  0x0000028bc118f50c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f512:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f51c:   	andq	$-0x10, %rsp
  0x0000028bc118f520:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f52a:   	callq	*%r10
  0x0000028bc118f52d:   	hlt
  0x0000028bc118f52e:   	popq	%r10
  0x0000028bc118f530:   	shlq	$0x3, %rbx
  0x0000028bc118f534:   	movl	0x24(%rbx), %ebx
  0x0000028bc118f537:   	pushq	%r10
  0x0000028bc118f539:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f543:   	cmpq	(%r10), %r12
  0x0000028bc118f546:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f54c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f556:   	andq	$-0x10, %rsp
  0x0000028bc118f55a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f564:   	callq	*%r10
  0x0000028bc118f567:   	hlt
  0x0000028bc118f568:   	popq	%r10
  0x0000028bc118f56a:   	shlq	$0x3, %rbx
  0x0000028bc118f56e:   	movq	0x10(%rbx), %rbx
  0x0000028bc118f572:   	testq	%rbx, %rbx
  0x0000028bc118f575:   	je	0x3
  0x0000028bc118f57b:   	jmpq	*0x58(%rbx)
  0x0000028bc118f57e:   	jmp	-0x528063           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc118f583:   	hlt
  0x0000028bc118f584:   	hlt
  0x0000028bc118f585:   	hlt
  0x0000028bc118f586:   	hlt
  0x0000028bc118f587:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2553   69     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLLL)J (native)
 total in heap  [0x0000028bc118f610,0x0000028bc118fa10] = 1024
 relocation     [0x0000028bc118f770,0x0000028bc118f800] = 144
 main code      [0x0000028bc118f800,0x0000028bc118fa0b] = 523
 stub code      [0x0000028bc118fa0b,0x0000028bc118fa10] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d50e8} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118f800:   	testq	%rsi, %rsi
  0x0000028bc118f803:   	je	0x40
  0x0000028bc118f809:   	pushq	%rdi
  0x0000028bc118f80a:   	pushq	%r10
  0x0000028bc118f80c:   	movl	0x8(%rsi), %edi
  0x0000028bc118f80f:   	movabsq	$0x800000000, %r10
  0x0000028bc118f819:   	addq	%r10, %rdi
  0x0000028bc118f81c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f826:   	cmpq	(%r10), %rdi
  0x0000028bc118f829:   	je	0x36
  0x0000028bc118f82f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f833:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f83d:   	cmpq	(%r10), %rdi
  0x0000028bc118f840:   	je	0x1f
  0x0000028bc118f846:   	popq	%r10
  0x0000028bc118f848:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118f849:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118f853:   	andq	$-0x10, %rsp
  0x0000028bc118f857:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f861:   	callq	*%r10
  0x0000028bc118f864:   	hlt
 ;; L_ok:
  0x0000028bc118f865:   	popq	%r10
  0x0000028bc118f867:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f868:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118f86b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118f86f:   	movabsq	$0x800000000, %r11
  0x0000028bc118f879:   	addq	%r11, %r10
  0x0000028bc118f87c:   	movl	0x18(%rsi), %r11d
  0x0000028bc118f880:   	pushq	%r10
  0x0000028bc118f882:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f88c:   	cmpq	(%r10), %r12
  0x0000028bc118f88f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f895:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f89f:   	andq	$-0x10, %rsp
  0x0000028bc118f8a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f8ad:   	callq	*%r10
  0x0000028bc118f8b0:   	hlt
  0x0000028bc118f8b1:   	popq	%r10
  0x0000028bc118f8b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118f8b7:   	testq	%r11, %r11
  0x0000028bc118f8ba:   	je	0x41
  0x0000028bc118f8c0:   	pushq	%rdi
  0x0000028bc118f8c1:   	pushq	%r10
  0x0000028bc118f8c3:   	movl	0x8(%r11), %edi
  0x0000028bc118f8c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118f8d1:   	addq	%r10, %rdi
  0x0000028bc118f8d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f8de:   	cmpq	(%r10), %rdi
  0x0000028bc118f8e1:   	je	0x36
  0x0000028bc118f8e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f8eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f8f5:   	cmpq	(%r10), %rdi
  0x0000028bc118f8f8:   	je	0x1f
  0x0000028bc118f8fe:   	popq	%r10
  0x0000028bc118f900:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118f901:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118f90b:   	andq	$-0x10, %rsp
  0x0000028bc118f90f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f919:   	callq	*%r10
  0x0000028bc118f91c:   	hlt
 ;; L_ok:
  0x0000028bc118f91d:   	popq	%r10
  0x0000028bc118f91f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f920:   	movq	0x10(%r11), %r11
  0x0000028bc118f924:   	cmpq	%r11, %r10
  0x0000028bc118f927:   	je	0x61
  0x0000028bc118f92d:   	movl	0x1c(%r11), %eax
  0x0000028bc118f931:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118f935:   	je	0x53
  0x0000028bc118f93b:   	cmpl	$0x28, %eax
  0x0000028bc118f93e:   	jne	0x2e
  0x0000028bc118f944:   	movq	%r11, %rax
  0x0000028bc118f947:   	pushq	%rcx
  0x0000028bc118f948:   	pushq	%rdi
  0x0000028bc118f949:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118f953:   	incl	(%rcx)
  0x0000028bc118f955:   	movq	0x30(%r10), %rdi
  0x0000028bc118f959:   	movl	(%rdi), %ecx
  0x0000028bc118f95b:   	addq	$0x8, %rdi
  0x0000028bc118f95f:   	testq	%rax, %rax
  0x0000028bc118f962:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118f965:   	popq	%rdi
  0x0000028bc118f966:   	popq	%rcx
  0x0000028bc118f967:   	jne	0x9
  0x0000028bc118f969:   	movq	%r11, 0x28(%r10)
  0x0000028bc118f96d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118f972:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118f97c:   	andq	$-0x10, %rsp
  0x0000028bc118f980:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f98a:   	callq	*%r10
  0x0000028bc118f98d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118f98e:   	movl	0xc(%rsi), %eax
  0x0000028bc118f991:   	shrl	$0x18, %eax
  0x0000028bc118f994:   	andl	$0xf, %eax
  0x0000028bc118f997:   	cmpl	$0x7, %eax
  0x0000028bc118f99a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118f9a0:   	movabsq	$0x28bdc20fd90, %rcx;   {external_word}
  0x0000028bc118f9aa:   	andq	$-0x10, %rsp
  0x0000028bc118f9ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f9b8:   	callq	*%r10
  0x0000028bc118f9bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118f9bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc118f9bf:   	pushq	%r10
  0x0000028bc118f9c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f9cb:   	cmpq	(%r10), %r12
  0x0000028bc118f9ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f9d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f9de:   	andq	$-0x10, %rsp
  0x0000028bc118f9e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f9ec:   	callq	*%r10
  0x0000028bc118f9ef:   	hlt
  0x0000028bc118f9f0:   	popq	%r10
  0x0000028bc118f9f2:   	shlq	$0x3, %rbx
  0x0000028bc118f9f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118f9fa:   	testq	%rbx, %rbx
  0x0000028bc118f9fd:   	je	0x3
  0x0000028bc118fa03:   	jmpq	*0x58(%rbx)
  0x0000028bc118fa06:   	jmp	-0x5284eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118fa0b:   	hlt
  0x0000028bc118fa0c:   	hlt
  0x0000028bc118fa0d:   	hlt
  0x0000028bc118fa0e:   	hlt
  0x0000028bc118fa0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2557   69     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLLL)J (native)
 total in heap  [0x0000028bc118f610,0x0000028bc118fa10] = 1024
 relocation     [0x0000028bc118f770,0x0000028bc118f800] = 144
 main code      [0x0000028bc118f800,0x0000028bc118fa0b] = 523
 stub code      [0x0000028bc118fa0b,0x0000028bc118fa10] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d50e8} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118f800:   	testq	%rsi, %rsi
  0x0000028bc118f803:   	je	0x40
  0x0000028bc118f809:   	pushq	%rdi
  0x0000028bc118f80a:   	pushq	%r10
  0x0000028bc118f80c:   	movl	0x8(%rsi), %edi
  0x0000028bc118f80f:   	movabsq	$0x800000000, %r10
  0x0000028bc118f819:   	addq	%r10, %rdi
  0x0000028bc118f81c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f826:   	cmpq	(%r10), %rdi
  0x0000028bc118f829:   	je	0x36
  0x0000028bc118f82f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f833:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118f83d:   	cmpq	(%r10), %rdi
  0x0000028bc118f840:   	je	0x1f
  0x0000028bc118f846:   	popq	%r10
  0x0000028bc118f848:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118f849:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118f853:   	andq	$-0x10, %rsp
  0x0000028bc118f857:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f861:   	callq	*%r10
  0x0000028bc118f864:   	hlt
 ;; L_ok:
  0x0000028bc118f865:   	popq	%r10
  0x0000028bc118f867:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f868:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc118f86b:   	movl	0x8(%rdx), %r10d
  0x0000028bc118f86f:   	movabsq	$0x800000000, %r11
  0x0000028bc118f879:   	addq	%r11, %r10
  0x0000028bc118f87c:   	movl	0x18(%rsi), %r11d
  0x0000028bc118f880:   	pushq	%r10
  0x0000028bc118f882:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f88c:   	cmpq	(%r10), %r12
  0x0000028bc118f88f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f895:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f89f:   	andq	$-0x10, %rsp
  0x0000028bc118f8a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f8ad:   	callq	*%r10
  0x0000028bc118f8b0:   	hlt
  0x0000028bc118f8b1:   	popq	%r10
  0x0000028bc118f8b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc118f8b7:   	testq	%r11, %r11
  0x0000028bc118f8ba:   	je	0x41
  0x0000028bc118f8c0:   	pushq	%rdi
  0x0000028bc118f8c1:   	pushq	%r10
  0x0000028bc118f8c3:   	movl	0x8(%r11), %edi
  0x0000028bc118f8c7:   	movabsq	$0x800000000, %r10
  0x0000028bc118f8d1:   	addq	%r10, %rdi
  0x0000028bc118f8d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f8de:   	cmpq	(%r10), %rdi
  0x0000028bc118f8e1:   	je	0x36
  0x0000028bc118f8e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc118f8eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc118f8f5:   	cmpq	(%r10), %rdi
  0x0000028bc118f8f8:   	je	0x1f
  0x0000028bc118f8fe:   	popq	%r10
  0x0000028bc118f900:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc118f901:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc118f90b:   	andq	$-0x10, %rsp
  0x0000028bc118f90f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f919:   	callq	*%r10
  0x0000028bc118f91c:   	hlt
 ;; L_ok:
  0x0000028bc118f91d:   	popq	%r10
  0x0000028bc118f91f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc118f920:   	movq	0x10(%r11), %r11
  0x0000028bc118f924:   	cmpq	%r11, %r10
  0x0000028bc118f927:   	je	0x61
  0x0000028bc118f92d:   	movl	0x1c(%r11), %eax
  0x0000028bc118f931:   	cmpq	(%r10,%rax), %r11
  0x0000028bc118f935:   	je	0x53
  0x0000028bc118f93b:   	cmpl	$0x28, %eax
  0x0000028bc118f93e:   	jne	0x2e
  0x0000028bc118f944:   	movq	%r11, %rax
  0x0000028bc118f947:   	pushq	%rcx
  0x0000028bc118f948:   	pushq	%rdi
  0x0000028bc118f949:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc118f953:   	incl	(%rcx)
  0x0000028bc118f955:   	movq	0x30(%r10), %rdi
  0x0000028bc118f959:   	movl	(%rdi), %ecx
  0x0000028bc118f95b:   	addq	$0x8, %rdi
  0x0000028bc118f95f:   	testq	%rax, %rax
  0x0000028bc118f962:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc118f965:   	popq	%rdi
  0x0000028bc118f966:   	popq	%rcx
  0x0000028bc118f967:   	jne	0x9
  0x0000028bc118f969:   	movq	%r11, 0x28(%r10)
  0x0000028bc118f96d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc118f972:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc118f97c:   	andq	$-0x10, %rsp
  0x0000028bc118f980:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f98a:   	callq	*%r10
  0x0000028bc118f98d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc118f98e:   	movl	0xc(%rsi), %eax
  0x0000028bc118f991:   	shrl	$0x18, %eax
  0x0000028bc118f994:   	andl	$0xf, %eax
  0x0000028bc118f997:   	cmpl	$0x7, %eax
  0x0000028bc118f99a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc118f9a0:   	movabsq	$0x28bdc20fd90, %rcx;   {external_word}
  0x0000028bc118f9aa:   	andq	$-0x10, %rsp
  0x0000028bc118f9ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f9b8:   	callq	*%r10
  0x0000028bc118f9bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118f9bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc118f9bf:   	pushq	%r10
  0x0000028bc118f9c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118f9cb:   	cmpq	(%r10), %r12
  0x0000028bc118f9ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118f9d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118f9de:   	andq	$-0x10, %rsp
  0x0000028bc118f9e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118f9ec:   	callq	*%r10
  0x0000028bc118f9ef:   	hlt
  0x0000028bc118f9f0:   	popq	%r10
  0x0000028bc118f9f2:   	shlq	$0x3, %rbx
  0x0000028bc118f9f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc118f9fa:   	testq	%rbx, %rbx
  0x0000028bc118f9fd:   	je	0x3
  0x0000028bc118fa03:   	jmpq	*0x58(%rbx)
  0x0000028bc118fa06:   	jmp	-0x5284eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118fa0b:   	hlt
  0x0000028bc118fa0c:   	hlt
  0x0000028bc118fa0d:   	hlt
  0x0000028bc118fa0e:   	hlt
  0x0000028bc118fa0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2584   70     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLJL)L (native)
 total in heap  [0x0000028bc118fa90,0x0000028bc118fd28] = 664
 relocation     [0x0000028bc118fbf0,0x0000028bc118fc38] = 72
 main code      [0x0000028bc118fc40,0x0000028bc118fd25] = 229
 stub code      [0x0000028bc118fd25,0x0000028bc118fd28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d96a8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = long
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118fc40:   	testq	%rsi, %rsi
  0x0000028bc118fc43:   	je	0x40
  0x0000028bc118fc49:   	pushq	%rdi
  0x0000028bc118fc4a:   	pushq	%r10
  0x0000028bc118fc4c:   	movl	0x8(%rsi), %edi
  0x0000028bc118fc4f:   	movabsq	$0x800000000, %r10
  0x0000028bc118fc59:   	addq	%r10, %rdi
  0x0000028bc118fc5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118fc66:   	cmpq	(%r10), %rdi
  0x0000028bc118fc69:   	je	0x36
  0x0000028bc118fc6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118fc73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118fc7d:   	cmpq	(%r10), %rdi
  0x0000028bc118fc80:   	je	0x1f
  0x0000028bc118fc86:   	popq	%r10
  0x0000028bc118fc88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118fc89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118fc93:   	andq	$-0x10, %rsp
  0x0000028bc118fc97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118fca1:   	callq	*%r10
  0x0000028bc118fca4:   	hlt
 ;; L_ok:
  0x0000028bc118fca5:   	popq	%r10
  0x0000028bc118fca7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118fca8:   	movl	0xc(%rsi), %eax
  0x0000028bc118fcab:   	shrl	$0x18, %eax
  0x0000028bc118fcae:   	andl	$0xf, %eax
  0x0000028bc118fcb1:   	cmpl	$0x6, %eax
  0x0000028bc118fcb4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118fcba:   	movabsq	$0x28bdc20f410, %rcx;   {external_word}
  0x0000028bc118fcc4:   	andq	$-0x10, %rsp
  0x0000028bc118fcc8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118fcd2:   	callq	*%r10
  0x0000028bc118fcd5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118fcd6:   	movl	0x24(%rsi), %ebx
  0x0000028bc118fcd9:   	pushq	%r10
  0x0000028bc118fcdb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118fce5:   	cmpq	(%r10), %r12
  0x0000028bc118fce8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118fcee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118fcf8:   	andq	$-0x10, %rsp
  0x0000028bc118fcfc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118fd06:   	callq	*%r10
  0x0000028bc118fd09:   	hlt
  0x0000028bc118fd0a:   	popq	%r10
  0x0000028bc118fd0c:   	shlq	$0x3, %rbx
  0x0000028bc118fd10:   	movq	0x10(%rbx), %rbx
  0x0000028bc118fd14:   	testq	%rbx, %rbx
  0x0000028bc118fd17:   	je	0x3
  0x0000028bc118fd1d:   	jmpq	*0x58(%rbx)
  0x0000028bc118fd20:   	jmp	-0x528805           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118fd25:   	hlt
  0x0000028bc118fd26:   	hlt
  0x0000028bc118fd27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2587   70     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLJL)L (native)
 total in heap  [0x0000028bc118fa90,0x0000028bc118fd28] = 664
 relocation     [0x0000028bc118fbf0,0x0000028bc118fc38] = 72
 main code      [0x0000028bc118fc40,0x0000028bc118fd25] = 229
 stub code      [0x0000028bc118fd25,0x0000028bc118fd28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d96a8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = long
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc118fc40:   	testq	%rsi, %rsi
  0x0000028bc118fc43:   	je	0x40
  0x0000028bc118fc49:   	pushq	%rdi
  0x0000028bc118fc4a:   	pushq	%r10
  0x0000028bc118fc4c:   	movl	0x8(%rsi), %edi
  0x0000028bc118fc4f:   	movabsq	$0x800000000, %r10
  0x0000028bc118fc59:   	addq	%r10, %rdi
  0x0000028bc118fc5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118fc66:   	cmpq	(%r10), %rdi
  0x0000028bc118fc69:   	je	0x36
  0x0000028bc118fc6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc118fc73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc118fc7d:   	cmpq	(%r10), %rdi
  0x0000028bc118fc80:   	je	0x1f
  0x0000028bc118fc86:   	popq	%r10
  0x0000028bc118fc88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc118fc89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc118fc93:   	andq	$-0x10, %rsp
  0x0000028bc118fc97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118fca1:   	callq	*%r10
  0x0000028bc118fca4:   	hlt
 ;; L_ok:
  0x0000028bc118fca5:   	popq	%r10
  0x0000028bc118fca7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc118fca8:   	movl	0xc(%rsi), %eax
  0x0000028bc118fcab:   	shrl	$0x18, %eax
  0x0000028bc118fcae:   	andl	$0xf, %eax
  0x0000028bc118fcb1:   	cmpl	$0x6, %eax
  0x0000028bc118fcb4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc118fcba:   	movabsq	$0x28bdc20f410, %rcx;   {external_word}
  0x0000028bc118fcc4:   	andq	$-0x10, %rsp
  0x0000028bc118fcc8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118fcd2:   	callq	*%r10
  0x0000028bc118fcd5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc118fcd6:   	movl	0x24(%rsi), %ebx
  0x0000028bc118fcd9:   	pushq	%r10
  0x0000028bc118fcdb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118fce5:   	cmpq	(%r10), %r12
  0x0000028bc118fce8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118fcee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118fcf8:   	andq	$-0x10, %rsp
  0x0000028bc118fcfc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118fd06:   	callq	*%r10
  0x0000028bc118fd09:   	hlt
  0x0000028bc118fd0a:   	popq	%r10
  0x0000028bc118fd0c:   	shlq	$0x3, %rbx
  0x0000028bc118fd10:   	movq	0x10(%rbx), %rbx
  0x0000028bc118fd14:   	testq	%rbx, %rbx
  0x0000028bc118fd17:   	je	0x3
  0x0000028bc118fd1d:   	jmpq	*0x58(%rbx)
  0x0000028bc118fd20:   	jmp	-0x528805           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc118fd25:   	hlt
  0x0000028bc118fd26:   	hlt
  0x0000028bc118fd27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2594   71     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLJ)L (native)
 total in heap  [0x0000028bc118fd90,0x0000028bc1190008] = 632
 relocation     [0x0000028bc118fef0,0x0000028bc118ff38] = 72
 main code      [0x0000028bc118ff40,0x0000028bc1190003] = 195
 stub code      [0x0000028bc1190003,0x0000028bc1190008] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d9d90} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118ff40:   	movl	0x14(%rdx), %ebx
  0x0000028bc118ff43:   	pushq	%r10
  0x0000028bc118ff45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ff4f:   	cmpq	(%r10), %r12
  0x0000028bc118ff52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ff58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ff62:   	andq	$-0x10, %rsp
  0x0000028bc118ff66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ff70:   	callq	*%r10
  0x0000028bc118ff73:   	hlt
  0x0000028bc118ff74:   	popq	%r10
  0x0000028bc118ff76:   	shlq	$0x3, %rbx
  0x0000028bc118ff7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118ff7d:   	pushq	%r10
  0x0000028bc118ff7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ff89:   	cmpq	(%r10), %r12
  0x0000028bc118ff8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ff92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ff9c:   	andq	$-0x10, %rsp
  0x0000028bc118ffa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ffaa:   	callq	*%r10
  0x0000028bc118ffad:   	hlt
  0x0000028bc118ffae:   	popq	%r10
  0x0000028bc118ffb0:   	shlq	$0x3, %rbx
  0x0000028bc118ffb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118ffb7:   	pushq	%r10
  0x0000028bc118ffb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ffc3:   	cmpq	(%r10), %r12
  0x0000028bc118ffc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ffcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ffd6:   	andq	$-0x10, %rsp
  0x0000028bc118ffda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ffe4:   	callq	*%r10
  0x0000028bc118ffe7:   	hlt
  0x0000028bc118ffe8:   	popq	%r10
  0x0000028bc118ffea:   	shlq	$0x3, %rbx
  0x0000028bc118ffee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118fff2:   	testq	%rbx, %rbx
  0x0000028bc118fff5:   	je	0x3
  0x0000028bc118fffb:   	jmpq	*0x58(%rbx)
  0x0000028bc118fffe:   	jmp	-0x528ae3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1190003:   	hlt
  0x0000028bc1190004:   	hlt
  0x0000028bc1190005:   	hlt
  0x0000028bc1190006:   	hlt
  0x0000028bc1190007:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2596   71     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLJ)L (native)
 total in heap  [0x0000028bc118fd90,0x0000028bc1190008] = 632
 relocation     [0x0000028bc118fef0,0x0000028bc118ff38] = 72
 main code      [0x0000028bc118ff40,0x0000028bc1190003] = 195
 stub code      [0x0000028bc1190003,0x0000028bc1190008] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83d9d90} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = long
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc118ff40:   	movl	0x14(%rdx), %ebx
  0x0000028bc118ff43:   	pushq	%r10
  0x0000028bc118ff45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ff4f:   	cmpq	(%r10), %r12
  0x0000028bc118ff52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ff58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ff62:   	andq	$-0x10, %rsp
  0x0000028bc118ff66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ff70:   	callq	*%r10
  0x0000028bc118ff73:   	hlt
  0x0000028bc118ff74:   	popq	%r10
  0x0000028bc118ff76:   	shlq	$0x3, %rbx
  0x0000028bc118ff7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc118ff7d:   	pushq	%r10
  0x0000028bc118ff7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ff89:   	cmpq	(%r10), %r12
  0x0000028bc118ff8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ff92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ff9c:   	andq	$-0x10, %rsp
  0x0000028bc118ffa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ffaa:   	callq	*%r10
  0x0000028bc118ffad:   	hlt
  0x0000028bc118ffae:   	popq	%r10
  0x0000028bc118ffb0:   	shlq	$0x3, %rbx
  0x0000028bc118ffb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc118ffb7:   	pushq	%r10
  0x0000028bc118ffb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc118ffc3:   	cmpq	(%r10), %r12
  0x0000028bc118ffc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc118ffcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc118ffd6:   	andq	$-0x10, %rsp
  0x0000028bc118ffda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc118ffe4:   	callq	*%r10
  0x0000028bc118ffe7:   	hlt
  0x0000028bc118ffe8:   	popq	%r10
  0x0000028bc118ffea:   	shlq	$0x3, %rbx
  0x0000028bc118ffee:   	movq	0x10(%rbx), %rbx
  0x0000028bc118fff2:   	testq	%rbx, %rbx
  0x0000028bc118fff5:   	je	0x3
  0x0000028bc118fffb:   	jmpq	*0x58(%rbx)
  0x0000028bc118fffe:   	jmp	-0x528ae3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1190003:   	hlt
  0x0000028bc1190004:   	hlt
  0x0000028bc1190005:   	hlt
  0x0000028bc1190006:   	hlt
  0x0000028bc1190007:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2608   72     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)J (native)
 total in heap  [0x0000028bc1190090,0x0000028bc1190308] = 632
 relocation     [0x0000028bc11901f0,0x0000028bc1190238] = 72
 main code      [0x0000028bc1190240,0x0000028bc1190303] = 195
 stub code      [0x0000028bc1190303,0x0000028bc1190308] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83dba70} 'invokeBasic' '(Ljava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1190240:   	movl	0x14(%rdx), %ebx
  0x0000028bc1190243:   	pushq	%r10
  0x0000028bc1190245:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119024f:   	cmpq	(%r10), %r12
  0x0000028bc1190252:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190258:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190262:   	andq	$-0x10, %rsp
  0x0000028bc1190266:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190270:   	callq	*%r10
  0x0000028bc1190273:   	hlt
  0x0000028bc1190274:   	popq	%r10
  0x0000028bc1190276:   	shlq	$0x3, %rbx
  0x0000028bc119027a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119027d:   	pushq	%r10
  0x0000028bc119027f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190289:   	cmpq	(%r10), %r12
  0x0000028bc119028c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190292:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119029c:   	andq	$-0x10, %rsp
  0x0000028bc11902a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11902aa:   	callq	*%r10
  0x0000028bc11902ad:   	hlt
  0x0000028bc11902ae:   	popq	%r10
  0x0000028bc11902b0:   	shlq	$0x3, %rbx
  0x0000028bc11902b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11902b7:   	pushq	%r10
  0x0000028bc11902b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11902c3:   	cmpq	(%r10), %r12
  0x0000028bc11902c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11902cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11902d6:   	andq	$-0x10, %rsp
  0x0000028bc11902da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11902e4:   	callq	*%r10
  0x0000028bc11902e7:   	hlt
  0x0000028bc11902e8:   	popq	%r10
  0x0000028bc11902ea:   	shlq	$0x3, %rbx
  0x0000028bc11902ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11902f2:   	testq	%rbx, %rbx
  0x0000028bc11902f5:   	je	0x3
  0x0000028bc11902fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11902fe:   	jmp	-0x528de3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1190303:   	hlt
  0x0000028bc1190304:   	hlt
  0x0000028bc1190305:   	hlt
  0x0000028bc1190306:   	hlt
  0x0000028bc1190307:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2610   72     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)J (native)
 total in heap  [0x0000028bc1190090,0x0000028bc1190308] = 632
 relocation     [0x0000028bc11901f0,0x0000028bc1190238] = 72
 main code      [0x0000028bc1190240,0x0000028bc1190303] = 195
 stub code      [0x0000028bc1190303,0x0000028bc1190308] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83dba70} 'invokeBasic' '(Ljava/lang/Object;)J' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1190240:   	movl	0x14(%rdx), %ebx
  0x0000028bc1190243:   	pushq	%r10
  0x0000028bc1190245:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119024f:   	cmpq	(%r10), %r12
  0x0000028bc1190252:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190258:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190262:   	andq	$-0x10, %rsp
  0x0000028bc1190266:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190270:   	callq	*%r10
  0x0000028bc1190273:   	hlt
  0x0000028bc1190274:   	popq	%r10
  0x0000028bc1190276:   	shlq	$0x3, %rbx
  0x0000028bc119027a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119027d:   	pushq	%r10
  0x0000028bc119027f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190289:   	cmpq	(%r10), %r12
  0x0000028bc119028c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190292:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119029c:   	andq	$-0x10, %rsp
  0x0000028bc11902a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11902aa:   	callq	*%r10
  0x0000028bc11902ad:   	hlt
  0x0000028bc11902ae:   	popq	%r10
  0x0000028bc11902b0:   	shlq	$0x3, %rbx
  0x0000028bc11902b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11902b7:   	pushq	%r10
  0x0000028bc11902b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11902c3:   	cmpq	(%r10), %r12
  0x0000028bc11902c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11902cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11902d6:   	andq	$-0x10, %rsp
  0x0000028bc11902da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11902e4:   	callq	*%r10
  0x0000028bc11902e7:   	hlt
  0x0000028bc11902e8:   	popq	%r10
  0x0000028bc11902ea:   	shlq	$0x3, %rbx
  0x0000028bc11902ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11902f2:   	testq	%rbx, %rbx
  0x0000028bc11902f5:   	je	0x3
  0x0000028bc11902fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11902fe:   	jmp	-0x528de3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1190303:   	hlt
  0x0000028bc1190304:   	hlt
  0x0000028bc1190305:   	hlt
  0x0000028bc1190306:   	hlt
  0x0000028bc1190307:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2613   73     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)J (native)
 total in heap  [0x0000028bc1190390,0x0000028bc1190790] = 1024
 relocation     [0x0000028bc11904f0,0x0000028bc1190580] = 144
 main code      [0x0000028bc1190580,0x0000028bc119078e] = 526
 stub code      [0x0000028bc119078e,0x0000028bc1190790] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83dbba8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1190580:   	testq	%r9, %r9
  0x0000028bc1190583:   	je	0x41
  0x0000028bc1190589:   	pushq	%rdi
  0x0000028bc119058a:   	pushq	%r10
  0x0000028bc119058c:   	movl	0x8(%r9), %edi
  0x0000028bc1190590:   	movabsq	$0x800000000, %r10
  0x0000028bc119059a:   	addq	%r10, %rdi
  0x0000028bc119059d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11905a7:   	cmpq	(%r10), %rdi
  0x0000028bc11905aa:   	je	0x36
  0x0000028bc11905b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11905b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11905be:   	cmpq	(%r10), %rdi
  0x0000028bc11905c1:   	je	0x1f
  0x0000028bc11905c7:   	popq	%r10
  0x0000028bc11905c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11905ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11905d4:   	andq	$-0x10, %rsp
  0x0000028bc11905d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11905e2:   	callq	*%r10
  0x0000028bc11905e5:   	hlt
 ;; L_ok:
  0x0000028bc11905e6:   	popq	%r10
  0x0000028bc11905e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11905e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11905ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc11905f0:   	movabsq	$0x800000000, %r11
  0x0000028bc11905fa:   	addq	%r11, %r10
  0x0000028bc11905fd:   	movl	0x18(%r9), %r11d
  0x0000028bc1190601:   	pushq	%r10
  0x0000028bc1190603:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119060d:   	cmpq	(%r10), %r12
  0x0000028bc1190610:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190616:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190620:   	andq	$-0x10, %rsp
  0x0000028bc1190624:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119062e:   	callq	*%r10
  0x0000028bc1190631:   	hlt
  0x0000028bc1190632:   	popq	%r10
  0x0000028bc1190634:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1190638:   	testq	%r11, %r11
  0x0000028bc119063b:   	je	0x41
  0x0000028bc1190641:   	pushq	%rdi
  0x0000028bc1190642:   	pushq	%r10
  0x0000028bc1190644:   	movl	0x8(%r11), %edi
  0x0000028bc1190648:   	movabsq	$0x800000000, %r10
  0x0000028bc1190652:   	addq	%r10, %rdi
  0x0000028bc1190655:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119065f:   	cmpq	(%r10), %rdi
  0x0000028bc1190662:   	je	0x36
  0x0000028bc1190668:   	movq	0x40(%rdi), %rdi
  0x0000028bc119066c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1190676:   	cmpq	(%r10), %rdi
  0x0000028bc1190679:   	je	0x1f
  0x0000028bc119067f:   	popq	%r10
  0x0000028bc1190681:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1190682:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119068c:   	andq	$-0x10, %rsp
  0x0000028bc1190690:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119069a:   	callq	*%r10
  0x0000028bc119069d:   	hlt
 ;; L_ok:
  0x0000028bc119069e:   	popq	%r10
  0x0000028bc11906a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11906a1:   	movq	0x10(%r11), %r11
  0x0000028bc11906a5:   	cmpq	%r11, %r10
  0x0000028bc11906a8:   	je	0x61
  0x0000028bc11906ae:   	movl	0x1c(%r11), %eax
  0x0000028bc11906b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11906b6:   	je	0x53
  0x0000028bc11906bc:   	cmpl	$0x28, %eax
  0x0000028bc11906bf:   	jne	0x2e
  0x0000028bc11906c5:   	movq	%r11, %rax
  0x0000028bc11906c8:   	pushq	%rcx
  0x0000028bc11906c9:   	pushq	%rdi
  0x0000028bc11906ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11906d4:   	incl	(%rcx)
  0x0000028bc11906d6:   	movq	0x30(%r10), %rdi
  0x0000028bc11906da:   	movl	(%rdi), %ecx
  0x0000028bc11906dc:   	addq	$0x8, %rdi
  0x0000028bc11906e0:   	testq	%rax, %rax
  0x0000028bc11906e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11906e6:   	popq	%rdi
  0x0000028bc11906e7:   	popq	%rcx
  0x0000028bc11906e8:   	jne	0x9
  0x0000028bc11906ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc11906ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11906f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11906fd:   	andq	$-0x10, %rsp
  0x0000028bc1190701:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119070b:   	callq	*%r10
  0x0000028bc119070e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119070f:   	movl	0xc(%r9), %eax
  0x0000028bc1190713:   	shrl	$0x18, %eax
  0x0000028bc1190716:   	andl	$0xf, %eax
  0x0000028bc1190719:   	cmpl	$0x7, %eax
  0x0000028bc119071c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1190722:   	movabsq	$0x28bdc20f210, %rcx;   {external_word}
  0x0000028bc119072c:   	andq	$-0x10, %rsp
  0x0000028bc1190730:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119073a:   	callq	*%r10
  0x0000028bc119073d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119073e:   	movl	0x24(%r9), %ebx
  0x0000028bc1190742:   	pushq	%r10
  0x0000028bc1190744:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119074e:   	cmpq	(%r10), %r12
  0x0000028bc1190751:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190757:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190761:   	andq	$-0x10, %rsp
  0x0000028bc1190765:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119076f:   	callq	*%r10
  0x0000028bc1190772:   	hlt
  0x0000028bc1190773:   	popq	%r10
  0x0000028bc1190775:   	shlq	$0x3, %rbx
  0x0000028bc1190779:   	movq	0x10(%rbx), %rbx
  0x0000028bc119077d:   	testq	%rbx, %rbx
  0x0000028bc1190780:   	je	0x3
  0x0000028bc1190786:   	jmpq	*0x58(%rbx)
  0x0000028bc1190789:   	jmp	-0x52926e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119078e:   	hlt
  0x0000028bc119078f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2618   73     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)J (native)
 total in heap  [0x0000028bc1190390,0x0000028bc1190790] = 1024
 relocation     [0x0000028bc11904f0,0x0000028bc1190580] = 144
 main code      [0x0000028bc1190580,0x0000028bc119078e] = 526
 stub code      [0x0000028bc119078e,0x0000028bc1190790] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83dbba8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1190580:   	testq	%r9, %r9
  0x0000028bc1190583:   	je	0x41
  0x0000028bc1190589:   	pushq	%rdi
  0x0000028bc119058a:   	pushq	%r10
  0x0000028bc119058c:   	movl	0x8(%r9), %edi
  0x0000028bc1190590:   	movabsq	$0x800000000, %r10
  0x0000028bc119059a:   	addq	%r10, %rdi
  0x0000028bc119059d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11905a7:   	cmpq	(%r10), %rdi
  0x0000028bc11905aa:   	je	0x36
  0x0000028bc11905b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11905b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11905be:   	cmpq	(%r10), %rdi
  0x0000028bc11905c1:   	je	0x1f
  0x0000028bc11905c7:   	popq	%r10
  0x0000028bc11905c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11905ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11905d4:   	andq	$-0x10, %rsp
  0x0000028bc11905d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11905e2:   	callq	*%r10
  0x0000028bc11905e5:   	hlt
 ;; L_ok:
  0x0000028bc11905e6:   	popq	%r10
  0x0000028bc11905e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11905e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11905ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc11905f0:   	movabsq	$0x800000000, %r11
  0x0000028bc11905fa:   	addq	%r11, %r10
  0x0000028bc11905fd:   	movl	0x18(%r9), %r11d
  0x0000028bc1190601:   	pushq	%r10
  0x0000028bc1190603:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119060d:   	cmpq	(%r10), %r12
  0x0000028bc1190610:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190616:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190620:   	andq	$-0x10, %rsp
  0x0000028bc1190624:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119062e:   	callq	*%r10
  0x0000028bc1190631:   	hlt
  0x0000028bc1190632:   	popq	%r10
  0x0000028bc1190634:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1190638:   	testq	%r11, %r11
  0x0000028bc119063b:   	je	0x41
  0x0000028bc1190641:   	pushq	%rdi
  0x0000028bc1190642:   	pushq	%r10
  0x0000028bc1190644:   	movl	0x8(%r11), %edi
  0x0000028bc1190648:   	movabsq	$0x800000000, %r10
  0x0000028bc1190652:   	addq	%r10, %rdi
  0x0000028bc1190655:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119065f:   	cmpq	(%r10), %rdi
  0x0000028bc1190662:   	je	0x36
  0x0000028bc1190668:   	movq	0x40(%rdi), %rdi
  0x0000028bc119066c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1190676:   	cmpq	(%r10), %rdi
  0x0000028bc1190679:   	je	0x1f
  0x0000028bc119067f:   	popq	%r10
  0x0000028bc1190681:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1190682:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119068c:   	andq	$-0x10, %rsp
  0x0000028bc1190690:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119069a:   	callq	*%r10
  0x0000028bc119069d:   	hlt
 ;; L_ok:
  0x0000028bc119069e:   	popq	%r10
  0x0000028bc11906a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11906a1:   	movq	0x10(%r11), %r11
  0x0000028bc11906a5:   	cmpq	%r11, %r10
  0x0000028bc11906a8:   	je	0x61
  0x0000028bc11906ae:   	movl	0x1c(%r11), %eax
  0x0000028bc11906b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11906b6:   	je	0x53
  0x0000028bc11906bc:   	cmpl	$0x28, %eax
  0x0000028bc11906bf:   	jne	0x2e
  0x0000028bc11906c5:   	movq	%r11, %rax
  0x0000028bc11906c8:   	pushq	%rcx
  0x0000028bc11906c9:   	pushq	%rdi
  0x0000028bc11906ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11906d4:   	incl	(%rcx)
  0x0000028bc11906d6:   	movq	0x30(%r10), %rdi
  0x0000028bc11906da:   	movl	(%rdi), %ecx
  0x0000028bc11906dc:   	addq	$0x8, %rdi
  0x0000028bc11906e0:   	testq	%rax, %rax
  0x0000028bc11906e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11906e6:   	popq	%rdi
  0x0000028bc11906e7:   	popq	%rcx
  0x0000028bc11906e8:   	jne	0x9
  0x0000028bc11906ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc11906ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11906f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11906fd:   	andq	$-0x10, %rsp
  0x0000028bc1190701:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119070b:   	callq	*%r10
  0x0000028bc119070e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119070f:   	movl	0xc(%r9), %eax
  0x0000028bc1190713:   	shrl	$0x18, %eax
  0x0000028bc1190716:   	andl	$0xf, %eax
  0x0000028bc1190719:   	cmpl	$0x7, %eax
  0x0000028bc119071c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1190722:   	movabsq	$0x28bdc20f210, %rcx;   {external_word}
  0x0000028bc119072c:   	andq	$-0x10, %rsp
  0x0000028bc1190730:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119073a:   	callq	*%r10
  0x0000028bc119073d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119073e:   	movl	0x24(%r9), %ebx
  0x0000028bc1190742:   	pushq	%r10
  0x0000028bc1190744:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119074e:   	cmpq	(%r10), %r12
  0x0000028bc1190751:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190757:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190761:   	andq	$-0x10, %rsp
  0x0000028bc1190765:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119076f:   	callq	*%r10
  0x0000028bc1190772:   	hlt
  0x0000028bc1190773:   	popq	%r10
  0x0000028bc1190775:   	shlq	$0x3, %rbx
  0x0000028bc1190779:   	movq	0x10(%rbx), %rbx
  0x0000028bc119077d:   	testq	%rbx, %rbx
  0x0000028bc1190780:   	je	0x3
  0x0000028bc1190786:   	jmpq	*0x58(%rbx)
  0x0000028bc1190789:   	jmp	-0x52926e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119078e:   	hlt
  0x0000028bc119078f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2637   74     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLL)L (native)
 total in heap  [0x0000028bc1190810,0x0000028bc1190ab0] = 672
 relocation     [0x0000028bc1190970,0x0000028bc11909b8] = 72
 main code      [0x0000028bc11909c0,0x0000028bc1190aaa] = 234
 stub code      [0x0000028bc1190aaa,0x0000028bc1190ab0] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83dde90} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x0000028bc11909c0:   	movq	0x10(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc11909c5:   	testq	%rbx, %rbx
  0x0000028bc11909c8:   	je	0x40
  0x0000028bc11909ce:   	pushq	%rdi
  0x0000028bc11909cf:   	pushq	%r10
  0x0000028bc11909d1:   	movl	0x8(%rbx), %edi
  0x0000028bc11909d4:   	movabsq	$0x800000000, %r10
  0x0000028bc11909de:   	addq	%r10, %rdi
  0x0000028bc11909e1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11909eb:   	cmpq	(%r10), %rdi
  0x0000028bc11909ee:   	je	0x36
  0x0000028bc11909f4:   	movq	0x40(%rdi), %rdi
  0x0000028bc11909f8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1190a02:   	cmpq	(%r10), %rdi
  0x0000028bc1190a05:   	je	0x1f
  0x0000028bc1190a0b:   	popq	%r10
  0x0000028bc1190a0d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1190a0e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1190a18:   	andq	$-0x10, %rsp
  0x0000028bc1190a1c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190a26:   	callq	*%r10
  0x0000028bc1190a29:   	hlt
 ;; L_ok:
  0x0000028bc1190a2a:   	popq	%r10
  0x0000028bc1190a2c:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1190a2d:   	movl	0xc(%rbx), %eax
  0x0000028bc1190a30:   	shrl	$0x18, %eax
  0x0000028bc1190a33:   	andl	$0xf, %eax
  0x0000028bc1190a36:   	cmpl	$0x6, %eax
  0x0000028bc1190a39:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1190a3f:   	movabsq	$0x28bdc210f90, %rcx;   {external_word}
  0x0000028bc1190a49:   	andq	$-0x10, %rsp
  0x0000028bc1190a4d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190a57:   	callq	*%r10
  0x0000028bc1190a5a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1190a5b:   	movl	0x24(%rbx), %ebx
  0x0000028bc1190a5e:   	pushq	%r10
  0x0000028bc1190a60:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190a6a:   	cmpq	(%r10), %r12
  0x0000028bc1190a6d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190a73:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190a7d:   	andq	$-0x10, %rsp
  0x0000028bc1190a81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190a8b:   	callq	*%r10
  0x0000028bc1190a8e:   	hlt
  0x0000028bc1190a8f:   	popq	%r10
  0x0000028bc1190a91:   	shlq	$0x3, %rbx
  0x0000028bc1190a95:   	movq	0x10(%rbx), %rbx
  0x0000028bc1190a99:   	testq	%rbx, %rbx
  0x0000028bc1190a9c:   	je	0x3
  0x0000028bc1190aa2:   	jmpq	*0x58(%rbx)
  0x0000028bc1190aa5:   	jmp	-0x52958a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1190aaa:   	hlt
  0x0000028bc1190aab:   	hlt
  0x0000028bc1190aac:   	hlt
  0x0000028bc1190aad:   	hlt
  0x0000028bc1190aae:   	hlt
  0x0000028bc1190aaf:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2640   74     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLL)L (native)
 total in heap  [0x0000028bc1190810,0x0000028bc1190ab0] = 672
 relocation     [0x0000028bc1190970,0x0000028bc11909b8] = 72
 main code      [0x0000028bc11909c0,0x0000028bc1190aaa] = 234
 stub code      [0x0000028bc1190aaa,0x0000028bc1190ab0] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83dde90} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x0000028bc11909c0:   	movq	0x10(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc11909c5:   	testq	%rbx, %rbx
  0x0000028bc11909c8:   	je	0x40
  0x0000028bc11909ce:   	pushq	%rdi
  0x0000028bc11909cf:   	pushq	%r10
  0x0000028bc11909d1:   	movl	0x8(%rbx), %edi
  0x0000028bc11909d4:   	movabsq	$0x800000000, %r10
  0x0000028bc11909de:   	addq	%r10, %rdi
  0x0000028bc11909e1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11909eb:   	cmpq	(%r10), %rdi
  0x0000028bc11909ee:   	je	0x36
  0x0000028bc11909f4:   	movq	0x40(%rdi), %rdi
  0x0000028bc11909f8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1190a02:   	cmpq	(%r10), %rdi
  0x0000028bc1190a05:   	je	0x1f
  0x0000028bc1190a0b:   	popq	%r10
  0x0000028bc1190a0d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1190a0e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1190a18:   	andq	$-0x10, %rsp
  0x0000028bc1190a1c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190a26:   	callq	*%r10
  0x0000028bc1190a29:   	hlt
 ;; L_ok:
  0x0000028bc1190a2a:   	popq	%r10
  0x0000028bc1190a2c:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1190a2d:   	movl	0xc(%rbx), %eax
  0x0000028bc1190a30:   	shrl	$0x18, %eax
  0x0000028bc1190a33:   	andl	$0xf, %eax
  0x0000028bc1190a36:   	cmpl	$0x6, %eax
  0x0000028bc1190a39:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1190a3f:   	movabsq	$0x28bdc210f90, %rcx;   {external_word}
  0x0000028bc1190a49:   	andq	$-0x10, %rsp
  0x0000028bc1190a4d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190a57:   	callq	*%r10
  0x0000028bc1190a5a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1190a5b:   	movl	0x24(%rbx), %ebx
  0x0000028bc1190a5e:   	pushq	%r10
  0x0000028bc1190a60:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190a6a:   	cmpq	(%r10), %r12
  0x0000028bc1190a6d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190a73:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190a7d:   	andq	$-0x10, %rsp
  0x0000028bc1190a81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190a8b:   	callq	*%r10
  0x0000028bc1190a8e:   	hlt
  0x0000028bc1190a8f:   	popq	%r10
  0x0000028bc1190a91:   	shlq	$0x3, %rbx
  0x0000028bc1190a95:   	movq	0x10(%rbx), %rbx
  0x0000028bc1190a99:   	testq	%rbx, %rbx
  0x0000028bc1190a9c:   	je	0x3
  0x0000028bc1190aa2:   	jmpq	*0x58(%rbx)
  0x0000028bc1190aa5:   	jmp	-0x52958a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1190aaa:   	hlt
  0x0000028bc1190aab:   	hlt
  0x0000028bc1190aac:   	hlt
  0x0000028bc1190aad:   	hlt
  0x0000028bc1190aae:   	hlt
  0x0000028bc1190aaf:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2647   75     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLL)L (native)
 total in heap  [0x0000028bc1190b10,0x0000028bc1190d88] = 632
 relocation     [0x0000028bc1190c70,0x0000028bc1190cb8] = 72
 main code      [0x0000028bc1190cc0,0x0000028bc1190d83] = 195
 stub code      [0x0000028bc1190d83,0x0000028bc1190d88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83de048} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1190cc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc1190cc3:   	pushq	%r10
  0x0000028bc1190cc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190ccf:   	cmpq	(%r10), %r12
  0x0000028bc1190cd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190cd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190ce2:   	andq	$-0x10, %rsp
  0x0000028bc1190ce6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190cf0:   	callq	*%r10
  0x0000028bc1190cf3:   	hlt
  0x0000028bc1190cf4:   	popq	%r10
  0x0000028bc1190cf6:   	shlq	$0x3, %rbx
  0x0000028bc1190cfa:   	movl	0x28(%rbx), %ebx
  0x0000028bc1190cfd:   	pushq	%r10
  0x0000028bc1190cff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190d09:   	cmpq	(%r10), %r12
  0x0000028bc1190d0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190d12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190d1c:   	andq	$-0x10, %rsp
  0x0000028bc1190d20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190d2a:   	callq	*%r10
  0x0000028bc1190d2d:   	hlt
  0x0000028bc1190d2e:   	popq	%r10
  0x0000028bc1190d30:   	shlq	$0x3, %rbx
  0x0000028bc1190d34:   	movl	0x24(%rbx), %ebx
  0x0000028bc1190d37:   	pushq	%r10
  0x0000028bc1190d39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190d43:   	cmpq	(%r10), %r12
  0x0000028bc1190d46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190d4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190d56:   	andq	$-0x10, %rsp
  0x0000028bc1190d5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190d64:   	callq	*%r10
  0x0000028bc1190d67:   	hlt
  0x0000028bc1190d68:   	popq	%r10
  0x0000028bc1190d6a:   	shlq	$0x3, %rbx
  0x0000028bc1190d6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1190d72:   	testq	%rbx, %rbx
  0x0000028bc1190d75:   	je	0x3
  0x0000028bc1190d7b:   	jmpq	*0x58(%rbx)
  0x0000028bc1190d7e:   	jmp	-0x529863           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1190d83:   	hlt
  0x0000028bc1190d84:   	hlt
  0x0000028bc1190d85:   	hlt
  0x0000028bc1190d86:   	hlt
  0x0000028bc1190d87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2650   75     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLL)L (native)
 total in heap  [0x0000028bc1190b10,0x0000028bc1190d88] = 632
 relocation     [0x0000028bc1190c70,0x0000028bc1190cb8] = 72
 main code      [0x0000028bc1190cc0,0x0000028bc1190d83] = 195
 stub code      [0x0000028bc1190d83,0x0000028bc1190d88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83de048} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1190cc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc1190cc3:   	pushq	%r10
  0x0000028bc1190cc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190ccf:   	cmpq	(%r10), %r12
  0x0000028bc1190cd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190cd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190ce2:   	andq	$-0x10, %rsp
  0x0000028bc1190ce6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190cf0:   	callq	*%r10
  0x0000028bc1190cf3:   	hlt
  0x0000028bc1190cf4:   	popq	%r10
  0x0000028bc1190cf6:   	shlq	$0x3, %rbx
  0x0000028bc1190cfa:   	movl	0x28(%rbx), %ebx
  0x0000028bc1190cfd:   	pushq	%r10
  0x0000028bc1190cff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190d09:   	cmpq	(%r10), %r12
  0x0000028bc1190d0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190d12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190d1c:   	andq	$-0x10, %rsp
  0x0000028bc1190d20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190d2a:   	callq	*%r10
  0x0000028bc1190d2d:   	hlt
  0x0000028bc1190d2e:   	popq	%r10
  0x0000028bc1190d30:   	shlq	$0x3, %rbx
  0x0000028bc1190d34:   	movl	0x24(%rbx), %ebx
  0x0000028bc1190d37:   	pushq	%r10
  0x0000028bc1190d39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1190d43:   	cmpq	(%r10), %r12
  0x0000028bc1190d46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1190d4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1190d56:   	andq	$-0x10, %rsp
  0x0000028bc1190d5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1190d64:   	callq	*%r10
  0x0000028bc1190d67:   	hlt
  0x0000028bc1190d68:   	popq	%r10
  0x0000028bc1190d6a:   	shlq	$0x3, %rbx
  0x0000028bc1190d6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1190d72:   	testq	%rbx, %rbx
  0x0000028bc1190d75:   	je	0x3
  0x0000028bc1190d7b:   	jmpq	*0x58(%rbx)
  0x0000028bc1190d7e:   	jmp	-0x529863           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1190d83:   	hlt
  0x0000028bc1190d84:   	hlt
  0x0000028bc1190d85:   	hlt
  0x0000028bc1190d86:   	hlt
  0x0000028bc1190d87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    2658   76     n 0       java.lang.invoke.MethodHandle::linkToStatic(IL)L (native)
 total in heap  [0x0000028bc1190e10,0x0000028bc11910a8] = 664
 relocation     [0x0000028bc1190f70,0x0000028bc1190fb8] = 72
 main code      [0x0000028bc1190fc0,0x0000028bc11910a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83de6c8} 'linkToStatic' '(ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1190fc0:   	testq	%r8, %r8
  0x0000028bc1190fc3:   	je	0x41
  0x0000028bc1190fc9:   	pushq	%rdi
  0x0000028bc1190fca:   	pushq	%r10
  0x0000028bc1190fcc:   	movl	0x8(%r8), %edi
  0x0000028bc1190fd0:   	movabsq	$0x800000000, %r10
  0x0000028bc1190fda:   	addq	%r10, %rdi
  0x0000028bc1190fdd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1190fe7:   	cmpq	(%r10), %rdi
  0x0000028bc1190fea:   	je	0x36
  0x0000028bc1190ff0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1190ff4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1190ffe:   	cmpq	(%r10), %rdi
  0x0000028bc1191001:   	je	0x1f
  0x0000028bc1191007:   	popq	%r10
  0x0000028bc1191009:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119100a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1191014:   	andq	$-0x10, %rsp
  0x0000028bc1191018:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191022:   	callq	*%r10
  0x0000028bc1191025:   	hlt
 ;; L_ok:
  0x0000028bc1191026:   	popq	%r10
  0x0000028bc1191028:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1191029:   	movl	0xc(%r8), %eax
  0x0000028bc119102d:   	shrl	$0x18, %eax
  0x0000028bc1191030:   	andl	$0xf, %eax
  0x0000028bc1191033:   	cmpl	$0x6, %eax
  0x0000028bc1191036:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119103c:   	movabsq	$0x28bdc20f190, %rcx;   {external_word}
  0x0000028bc1191046:   	andq	$-0x10, %rsp
  0x0000028bc119104a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191054:   	callq	*%r10
  0x0000028bc1191057:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1191058:   	movl	0x24(%r8), %ebx
  0x0000028bc119105c:   	pushq	%r10
  0x0000028bc119105e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191068:   	cmpq	(%r10), %r12
  0x0000028bc119106b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191071:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119107b:   	andq	$-0x10, %rsp
  0x0000028bc119107f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191089:   	callq	*%r10
  0x0000028bc119108c:   	hlt
  0x0000028bc119108d:   	popq	%r10
  0x0000028bc119108f:   	shlq	$0x3, %rbx
  0x0000028bc1191093:   	movq	0x10(%rbx), %rbx
  0x0000028bc1191097:   	testq	%rbx, %rbx
  0x0000028bc119109a:   	je	0x3
  0x0000028bc11910a0:   	jmpq	*0x58(%rbx)
  0x0000028bc11910a3:   	jmp	-0x529b88           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    2660   76     n 0       java.lang.invoke.MethodHandle::linkToStatic(IL)L (native)
 total in heap  [0x0000028bc1190e10,0x0000028bc11910a8] = 664
 relocation     [0x0000028bc1190f70,0x0000028bc1190fb8] = 72
 main code      [0x0000028bc1190fc0,0x0000028bc11910a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd83de6c8} 'linkToStatic' '(ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1190fc0:   	testq	%r8, %r8
  0x0000028bc1190fc3:   	je	0x41
  0x0000028bc1190fc9:   	pushq	%rdi
  0x0000028bc1190fca:   	pushq	%r10
  0x0000028bc1190fcc:   	movl	0x8(%r8), %edi
  0x0000028bc1190fd0:   	movabsq	$0x800000000, %r10
  0x0000028bc1190fda:   	addq	%r10, %rdi
  0x0000028bc1190fdd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1190fe7:   	cmpq	(%r10), %rdi
  0x0000028bc1190fea:   	je	0x36
  0x0000028bc1190ff0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1190ff4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1190ffe:   	cmpq	(%r10), %rdi
  0x0000028bc1191001:   	je	0x1f
  0x0000028bc1191007:   	popq	%r10
  0x0000028bc1191009:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119100a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1191014:   	andq	$-0x10, %rsp
  0x0000028bc1191018:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191022:   	callq	*%r10
  0x0000028bc1191025:   	hlt
 ;; L_ok:
  0x0000028bc1191026:   	popq	%r10
  0x0000028bc1191028:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1191029:   	movl	0xc(%r8), %eax
  0x0000028bc119102d:   	shrl	$0x18, %eax
  0x0000028bc1191030:   	andl	$0xf, %eax
  0x0000028bc1191033:   	cmpl	$0x6, %eax
  0x0000028bc1191036:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119103c:   	movabsq	$0x28bdc20f190, %rcx;   {external_word}
  0x0000028bc1191046:   	andq	$-0x10, %rsp
  0x0000028bc119104a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191054:   	callq	*%r10
  0x0000028bc1191057:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1191058:   	movl	0x24(%r8), %ebx
  0x0000028bc119105c:   	pushq	%r10
  0x0000028bc119105e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191068:   	cmpq	(%r10), %r12
  0x0000028bc119106b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191071:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119107b:   	andq	$-0x10, %rsp
  0x0000028bc119107f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191089:   	callq	*%r10
  0x0000028bc119108c:   	hlt
  0x0000028bc119108d:   	popq	%r10
  0x0000028bc119108f:   	shlq	$0x3, %rbx
  0x0000028bc1191093:   	movq	0x10(%rbx), %rbx
  0x0000028bc1191097:   	testq	%rbx, %rbx
  0x0000028bc119109a:   	je	0x3
  0x0000028bc11910a0:   	jmpq	*0x58(%rbx)
  0x0000028bc11910a3:   	jmp	-0x529b88           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2876   77   !   3       MinimizedStdLibTest20Args::printf (89 bytes)
 total in heap  [0x0000028bb96b0010,0x0000028bb96b1780] = 6000
 relocation     [0x0000028bb96b0170,0x0000028bb96b0300] = 400
 main code      [0x0000028bb96b0300,0x0000028bb96b0ed8] = 3032
 stub code      [0x0000028bb96b0ed8,0x0000028bb96b0fe8] = 272
 oops           [0x0000028bb96b0fe8,0x0000028bb96b0ff0] = 8
 metadata       [0x0000028bb96b0ff0,0x0000028bb96b1050] = 96
 scopes data    [0x0000028bb96b1050,0x0000028bb96b11e8] = 408
 scopes pcs     [0x0000028bb96b11e8,0x0000028bb96b1548] = 864
 dependencies   [0x0000028bb96b1548,0x0000028bb96b1568] = 32
 handler table  [0x0000028bb96b1568,0x0000028bb96b1748] = 480
 nul chk table  [0x0000028bb96b1748,0x0000028bb96b1780] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    r8:r8     = 'java/util/List'
  #           [sp+0x80]  (sp of caller)
 ;;  block B10 [0, 0]
  0x0000028bb96b0300:   	movl	%eax, -0xc000(%rsp)
  0x0000028bb96b0307:   	pushq	%rbp
  0x0000028bb96b0308:   	subq	$0x70, %rsp
  0x0000028bb96b030c:   	cmpl	$0x1, 0x20(%r15)
  0x0000028bb96b0314:   	je	0x5
  0x0000028bb96b0316:   	callq	0x75c17e5           ;   {runtime_call StubRoutines (2)}
  0x0000028bb96b031b:   	movq	%r8, 0x28(%rsp)
  0x0000028bb96b0320:   	movabsq	$0x28bd831a7f0, %rsi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b032a:   	movl	0x104(%rsi), %edi
  0x0000028bb96b0330:   	addl	$0x2, %edi
  0x0000028bb96b0333:   	movl	%edi, 0x104(%rsi)
 ;;   16 branch [AL]   [CounterOverflowStub: 0x0000028bdc2b2140]
  0x0000028bb96b0339:   	jmp	0x8f8               ;*invokestatic openConfined {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@0 (line 105)
 ;;  block B11 [0, 0]
  0x0000028bb96b033e:   	movq	%rdx, 0x20(%rsp)
 ;;  block B0 [0, 4]
  0x0000028bb96b0343:   	movabsq	$0x28bd831a7f0, %rsi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b034d:   	addq	$0x1, 0x148(%rsi)
  0x0000028bb96b0355:   	nop
  0x0000028bb96b0356:   	nop
  0x0000028bb96b0357:   	callq	0x765aec4           ; ImmutableOopMap {[79203812]=Oop [79203820]=Oop }
                                                            ;*invokestatic openConfined {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@0 (line 105)
                                                            ;   {static_call}
  0x0000028bb96b035c:   	nopl	0x34c(%rax,%rax)    ;*invokestatic openConfined {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@0 (line 105)
                                                            ;   {other}
  0x0000028bb96b0364:   	movq	0x20(%rsp), %rdx
 ;;  block B3 [4, 52]
  0x0000028bb96b0369:   	cmpq	$0x0, %rax
  0x0000028bb96b036d:   	je	0x29
  0x0000028bb96b0373:   	movabsq	$0x8000a2e70, %rcx  ;   {metadata('jdk/internal/foreign/MemorySessionImpl')}
  0x0000028bb96b037d:   	movl	0x8(%rax), %ebx
  0x0000028bb96b0380:   	movabsq	$0x800000000, %r10
  0x0000028bb96b038a:   	addq	%r10, %rbx
  0x0000028bb96b038d:   	cmpq	0x40(%rbx), %rcx
  0x0000028bb96b0391:   	jne	0x8c0
  0x0000028bb96b0397:   	jmp	0x0
  0x0000028bb96b039c:   	movq	%rax, %rsi
  0x0000028bb96b039f:   	cmpq	(%rax), %rax        ; implicit exception: dispatches to 0x0000028bb96b0c78
  0x0000028bb96b03a2:   	movq	%rax, %rsi
  0x0000028bb96b03a5:   	movabsq	$0x28bd831a7f0, %rdi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b03af:   	movl	0x8(%rsi), %esi
  0x0000028bb96b03b2:   	movabsq	$0x800000000, %r10
  0x0000028bb96b03bc:   	addq	%r10, %rsi
  0x0000028bb96b03bf:   	cmpq	0x168(%rdi), %rsi
  0x0000028bb96b03c6:   	jne	0xd
  0x0000028bb96b03c8:   	addq	$0x1, 0x170(%rdi)
  0x0000028bb96b03d0:   	jmp	0x66
  0x0000028bb96b03d5:   	cmpq	0x178(%rdi), %rsi
  0x0000028bb96b03dc:   	jne	0xd
  0x0000028bb96b03de:   	addq	$0x1, 0x180(%rdi)
  0x0000028bb96b03e6:   	jmp	0x50
  0x0000028bb96b03eb:   	cmpq	$0x0, 0x168(%rdi)
  0x0000028bb96b03f6:   	jne	0x17
  0x0000028bb96b03f8:   	movq	%rsi, 0x168(%rdi)
  0x0000028bb96b03ff:   	movq	$0x1, 0x170(%rdi)
  0x0000028bb96b040a:   	jmp	0x2c
  0x0000028bb96b040f:   	cmpq	$0x0, 0x178(%rdi)
  0x0000028bb96b041a:   	jne	0x17
  0x0000028bb96b041c:   	movq	%rsi, 0x178(%rdi)
  0x0000028bb96b0423:   	movq	$0x1, 0x180(%rdi)
  0x0000028bb96b042e:   	jmp	0x8
  0x0000028bb96b0433:   	addq	$0x1, 0x158(%rdi)
  0x0000028bb96b043b:   	movq	%rdx, %r8
  0x0000028bb96b043e:   	movq	%rax, %rdx          ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
  0x0000028bb96b0441:   	movq	%rax, 0x30(%rsp)
  0x0000028bb96b0446:   	nop
  0x0000028bb96b0447:   	callq	0x765a7d4           ; ImmutableOopMap {[79203820]=Oop [79203828]=Oop }
                                                            ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b044c:   	nopl	0x100043c(%rax,%rax);*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {other}
  0x0000028bb96b0454:   	movabsq	$0x28bd831a7f0, %rdx;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b045e:   	addq	$0x1, 0x190(%rdx)
  0x0000028bb96b0466:   	movq	0x28(%rsp), %rdx    ;*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
  0x0000028bb96b046b:   	movq	%rax, 0x38(%rsp)
  0x0000028bb96b0470:   	nop
  0x0000028bb96b0471:   	nop
  0x0000028bb96b0472:   	nop
  0x0000028bb96b0473:   	nop
  0x0000028bb96b0474:   	nop
  0x0000028bb96b0475:   	nop
  0x0000028bb96b0476:   	nop
  0x0000028bb96b0477:   	callq	0x765ada4           ; ImmutableOopMap {[79203820]=Oop [79203828]=Oop [79203836]=Oop }
                                                            ;*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
                                                            ;   {static_call}
  0x0000028bb96b047c:   	nopl	0x200046c(%rax,%rax);*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
                                                            ;   {other}
  0x0000028bb96b0484:   	movq	0x28(%rsp), %r8
  0x0000028bb96b0489:   	cmpq	(%r8), %rax         ; implicit exception: dispatches to 0x0000028bb96b0c99
  0x0000028bb96b048c:   	movq	%r8, %rdx
  0x0000028bb96b048f:   	movabsq	$0x28bd831a7f0, %rsi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0499:   	movl	0x8(%rdx), %edx
  0x0000028bb96b049c:   	movabsq	$0x800000000, %r10
  0x0000028bb96b04a6:   	addq	%r10, %rdx
  0x0000028bb96b04a9:   	cmpq	0x1b0(%rsi), %rdx
  0x0000028bb96b04b0:   	jne	0xd
  0x0000028bb96b04b2:   	addq	$0x1, 0x1b8(%rsi)
  0x0000028bb96b04ba:   	jmp	0x66
  0x0000028bb96b04bf:   	cmpq	0x1c0(%rsi), %rdx
  0x0000028bb96b04c6:   	jne	0xd
  0x0000028bb96b04c8:   	addq	$0x1, 0x1c8(%rsi)
  0x0000028bb96b04d0:   	jmp	0x50
  0x0000028bb96b04d5:   	cmpq	$0x0, 0x1b0(%rsi)
  0x0000028bb96b04e0:   	jne	0x17
  0x0000028bb96b04e2:   	movq	%rdx, 0x1b0(%rsi)
  0x0000028bb96b04e9:   	movq	$0x1, 0x1b8(%rsi)
  0x0000028bb96b04f4:   	jmp	0x2c
  0x0000028bb96b04f9:   	cmpq	$0x0, 0x1c0(%rsi)
  0x0000028bb96b0504:   	jne	0x17
  0x0000028bb96b0506:   	movq	%rdx, 0x1c0(%rsi)
  0x0000028bb96b050d:   	movq	$0x1, 0x1c8(%rsi)
  0x0000028bb96b0518:   	jmp	0x8
  0x0000028bb96b051d:   	addq	$0x1, 0x1a0(%rsi)
  0x0000028bb96b0525:   	movq	%r8, %rdx           ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
  0x0000028bb96b0528:   	movq	%rax, 0x40(%rsp)
  0x0000028bb96b052d:   	movabsq	$-0x1, %rax
  0x0000028bb96b0537:   	callq	0x765a9e4           ; ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
                                                            ;   {virtual_call}
  0x0000028bb96b053c:   	nopl	0x300052c(%rax,%rax);*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
                                                            ;   {other}
 ;;   74 move [obj:0x0000000000000000|L] [r8|L] [patch_normal] [bci:25]
  0x0000028bb96b0544:   	nop
  0x0000028bb96b0545:   	nop
  0x0000028bb96b0546:   	nop
  0x0000028bb96b0547:   	nop
  0x0000028bb96b0548:   	jmp	0x77c               ;   {no_reloc}
  0x0000028bb96b054d:   	nop
  0x0000028bb96b054e:   	nop
  0x0000028bb96b054f:   	nop
  0x0000028bb96b0550:   	nop
  0x0000028bb96b0551:   	nop
  0x0000028bb96b0552:   	movq	0x30(%rsp), %rdx    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@25 (line 108)
  0x0000028bb96b0557:   	movq	%rax, 0x48(%rsp)
  0x0000028bb96b055c:   	nop
  0x0000028bb96b055d:   	nop
  0x0000028bb96b055e:   	nop
  0x0000028bb96b055f:   	callq	0x765acbc           ; ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop [79203852]=Oop }
                                                            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@25 (line 108)
                                                            ;   {static_call}
  0x0000028bb96b0564:   	nopl	0x4000554(%rax,%rax);*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@25 (line 108)
                                                            ;   {other}
  0x0000028bb96b056c:   	movabsq	$0x28bd831a7f0, %r8 ;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0576:   	leaq	0x1f8(%r8), %r8
  0x0000028bb96b057d:   	movq	%rax, %rdx
  0x0000028bb96b0580:   	testq	%rdx, %rdx
  0x0000028bb96b0583:   	jne	0x9
  0x0000028bb96b0585:   	orq	$0x1, (%r8)
  0x0000028bb96b0589:   	jmp	0x48
  0x0000028bb96b058e:   	movl	0x8(%rdx), %edx
  0x0000028bb96b0591:   	movabsq	$0x800000000, %r10
  0x0000028bb96b059b:   	addq	%r10, %rdx
  0x0000028bb96b059e:   	xorq	(%r8), %rdx
  0x0000028bb96b05a1:   	testq	$-0x4, %rdx
  0x0000028bb96b05a8:   	je	0x2c
  0x0000028bb96b05aa:   	testb	$0x2, %dl
  0x0000028bb96b05ad:   	jne	0x27
  0x0000028bb96b05af:   	cmpq	$0x0, (%r8)
  0x0000028bb96b05b6:   	je	0x1b
  0x0000028bb96b05b8:   	cmpq	$0x1, (%r8)
  0x0000028bb96b05bf:   	je	0x12
  0x0000028bb96b05c1:   	xorq	(%r8), %rdx
  0x0000028bb96b05c4:   	testq	$-0x4, %rdx
  0x0000028bb96b05cb:   	je	0x9
  0x0000028bb96b05cd:   	orq	$0x2, (%r8)
  0x0000028bb96b05d1:   	jmp	0x3
  0x0000028bb96b05d3:   	movq	%rdx, (%r8)
  0x0000028bb96b05d6:   	movq	0x48(%rsp), %rdx
  0x0000028bb96b05db:   	cmpq	$0x0, %rdx
  0x0000028bb96b05df:   	je	0x29
  0x0000028bb96b05e5:   	movabsq	$0x800008348, %rbx  ;   {metadata('java/util/stream/ReferencePipeline')}
  0x0000028bb96b05ef:   	movl	0x8(%rdx), %edi
  0x0000028bb96b05f2:   	movabsq	$0x800000000, %r10
  0x0000028bb96b05fc:   	addq	%r10, %rdi
  0x0000028bb96b05ff:   	cmpq	0x50(%rdi), %rbx
  0x0000028bb96b0603:   	jne	0x6ca
  0x0000028bb96b0609:   	jmp	0x0
  0x0000028bb96b060e:   	movq	%rdx, %r8
  0x0000028bb96b0611:   	cmpq	(%rdx), %rax        ; implicit exception: dispatches to 0x0000028bb96b0cf4
  0x0000028bb96b0614:   	movq	%rdx, %r8
  0x0000028bb96b0617:   	movabsq	$0x28bd831a7f0, %rsi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0621:   	movl	0x8(%r8), %r8d
  0x0000028bb96b0625:   	movabsq	$0x800000000, %r10
  0x0000028bb96b062f:   	addq	%r10, %r8
  0x0000028bb96b0632:   	cmpq	0x218(%rsi), %r8
  0x0000028bb96b0639:   	jne	0xd
  0x0000028bb96b063b:   	addq	$0x1, 0x220(%rsi)
  0x0000028bb96b0643:   	jmp	0x66
  0x0000028bb96b0648:   	cmpq	0x228(%rsi), %r8
  0x0000028bb96b064f:   	jne	0xd
  0x0000028bb96b0651:   	addq	$0x1, 0x230(%rsi)
  0x0000028bb96b0659:   	jmp	0x50
  0x0000028bb96b065e:   	cmpq	$0x0, 0x218(%rsi)
  0x0000028bb96b0669:   	jne	0x17
  0x0000028bb96b066b:   	movq	%r8, 0x218(%rsi)
  0x0000028bb96b0672:   	movq	$0x1, 0x220(%rsi)
  0x0000028bb96b067d:   	jmp	0x2c
  0x0000028bb96b0682:   	cmpq	$0x0, 0x228(%rsi)
  0x0000028bb96b068d:   	jne	0x17
  0x0000028bb96b068f:   	movq	%r8, 0x228(%rsi)
  0x0000028bb96b0696:   	movq	$0x1, 0x230(%rsi)
  0x0000028bb96b06a1:   	jmp	0x8
  0x0000028bb96b06a6:   	addq	$0x1, 0x208(%rsi)
  0x0000028bb96b06ae:   	movq	%rax, %r8           ;*invokeinterface map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@30 (line 108)
  0x0000028bb96b06b1:   	nop
  0x0000028bb96b06b2:   	nop
  0x0000028bb96b06b3:   	nop
  0x0000028bb96b06b4:   	nop
  0x0000028bb96b06b5:   	nop
  0x0000028bb96b06b6:   	nop
  0x0000028bb96b06b7:   	callq	0x765a564           ; ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@30 (line 108)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b06bc:   	nopl	0x50006ac(%rax,%rax);*invokeinterface map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@30 (line 108)
                                                            ;   {other}
  0x0000028bb96b06c4:   	cmpq	$0x0, %rax
  0x0000028bb96b06c8:   	je	0x29
  0x0000028bb96b06ce:   	movabsq	$0x800008348, %rbx  ;   {metadata('java/util/stream/ReferencePipeline')}
  0x0000028bb96b06d8:   	movl	0x8(%rax), %edi
  0x0000028bb96b06db:   	movabsq	$0x800000000, %r10
  0x0000028bb96b06e5:   	addq	%r10, %rdi
  0x0000028bb96b06e8:   	cmpq	0x50(%rdi), %rbx
  0x0000028bb96b06ec:   	jne	0x623
  0x0000028bb96b06f2:   	jmp	0x0
  0x0000028bb96b06f7:   	movq	%rax, %rdx
  0x0000028bb96b06fa:   	cmpq	(%rax), %rax        ; implicit exception: dispatches to 0x0000028bb96b0d36
  0x0000028bb96b06fd:   	movq	%rax, %rdx
  0x0000028bb96b0700:   	movabsq	$0x28bd831a7f0, %rsi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b070a:   	movl	0x8(%rdx), %edx
  0x0000028bb96b070d:   	movabsq	$0x800000000, %r10
  0x0000028bb96b0717:   	addq	%r10, %rdx
  0x0000028bb96b071a:   	cmpq	0x250(%rsi), %rdx
  0x0000028bb96b0721:   	jne	0xd
  0x0000028bb96b0723:   	addq	$0x1, 0x258(%rsi)
  0x0000028bb96b072b:   	jmp	0x66
  0x0000028bb96b0730:   	cmpq	0x260(%rsi), %rdx
  0x0000028bb96b0737:   	jne	0xd
  0x0000028bb96b0739:   	addq	$0x1, 0x268(%rsi)
  0x0000028bb96b0741:   	jmp	0x50
  0x0000028bb96b0746:   	cmpq	$0x0, 0x250(%rsi)
  0x0000028bb96b0751:   	jne	0x17
  0x0000028bb96b0753:   	movq	%rdx, 0x250(%rsi)
  0x0000028bb96b075a:   	movq	$0x1, 0x258(%rsi)
  0x0000028bb96b0765:   	jmp	0x2c
  0x0000028bb96b076a:   	cmpq	$0x0, 0x260(%rsi)
  0x0000028bb96b0775:   	jne	0x17
  0x0000028bb96b0777:   	movq	%rdx, 0x260(%rsi)
  0x0000028bb96b077e:   	movq	$0x1, 0x268(%rsi)
  0x0000028bb96b0789:   	jmp	0x8
  0x0000028bb96b078e:   	addq	$0x1, 0x240(%rsi)
  0x0000028bb96b0796:   	movq	%rax, %rdx          ;*invokeinterface toArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@35 (line 108)
  0x0000028bb96b0799:   	nop
  0x0000028bb96b079a:   	nop
  0x0000028bb96b079b:   	nop
  0x0000028bb96b079c:   	nop
  0x0000028bb96b079d:   	nop
  0x0000028bb96b079e:   	nop
  0x0000028bb96b079f:   	callq	0x765a47c           ; ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface toArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@35 (line 108)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b07a4:   	nopl	0x6000794(%rax,%rax);*invokeinterface toArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@35 (line 108)
                                                            ;   {other}
 ;;  120 move [obj:0x0000000000000000|L] [rdi|L] [patch_normal] [bci:47]
  0x0000028bb96b07ac:   	nop
  0x0000028bb96b07ad:   	nop
  0x0000028bb96b07ae:   	nop
  0x0000028bb96b07af:   	nop
  0x0000028bb96b07b0:   	jmp	0x5b1               ;   {no_reloc}
  0x0000028bb96b07b5:   	nop
  0x0000028bb96b07b6:   	nop
  0x0000028bb96b07b7:   	nop
  0x0000028bb96b07b8:   	nop
  0x0000028bb96b07b9:   	nop
  0x0000028bb96b07ba:   	movq	0x40(%rsp), %rdx
  0x0000028bb96b07bf:   	cmpq	(%rdx), %rax        ; implicit exception: dispatches to 0x0000028bb96b0d70
  0x0000028bb96b07c2:   	movabsq	$0x28bd831a7f0, %r8 ;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b07cc:   	leaq	0x2b0(%r8), %r8
  0x0000028bb96b07d3:   	movq	0x38(%rsp), %r9
  0x0000028bb96b07d8:   	movq	%r9, %rsi
  0x0000028bb96b07db:   	testq	%rsi, %rsi
  0x0000028bb96b07de:   	jne	0xa
  0x0000028bb96b07e0:   	orq	$0x1, 0x8(%r8)
  0x0000028bb96b07e5:   	jmp	0x4f
  0x0000028bb96b07ea:   	movl	0x8(%rsi), %esi
  0x0000028bb96b07ed:   	movabsq	$0x800000000, %r10
  0x0000028bb96b07f7:   	addq	%r10, %rsi
  0x0000028bb96b07fa:   	xorq	0x8(%r8), %rsi
  0x0000028bb96b07fe:   	testq	$-0x4, %rsi
  0x0000028bb96b0805:   	je	0x32
  0x0000028bb96b0807:   	testb	$0x2, %sil
  0x0000028bb96b080b:   	jne	0x2c
  0x0000028bb96b080d:   	cmpq	$0x0, 0x8(%r8)
  0x0000028bb96b0815:   	je	0x1e
  0x0000028bb96b0817:   	cmpq	$0x1, 0x8(%r8)
  0x0000028bb96b081f:   	je	0x14
  0x0000028bb96b0821:   	xorq	0x8(%r8), %rsi
  0x0000028bb96b0825:   	testq	$-0x4, %rsi
  0x0000028bb96b082c:   	je	0xb
  0x0000028bb96b082e:   	orq	$0x2, 0x8(%r8)
  0x0000028bb96b0833:   	jmp	0x4
  0x0000028bb96b0835:   	movq	%rsi, 0x8(%r8)
  0x0000028bb96b0839:   	movq	%rax, %rsi
  0x0000028bb96b083c:   	testq	%rsi, %rsi
  0x0000028bb96b083f:   	jne	0xa
  0x0000028bb96b0841:   	orq	$0x1, 0x18(%r8)
  0x0000028bb96b0846:   	jmp	0x4f
  0x0000028bb96b084b:   	movl	0x8(%rsi), %esi
  0x0000028bb96b084e:   	movabsq	$0x800000000, %r10
  0x0000028bb96b0858:   	addq	%r10, %rsi
  0x0000028bb96b085b:   	xorq	0x18(%r8), %rsi
  0x0000028bb96b085f:   	testq	$-0x4, %rsi
  0x0000028bb96b0866:   	je	0x32
  0x0000028bb96b0868:   	testb	$0x2, %sil
  0x0000028bb96b086c:   	jne	0x2c
  0x0000028bb96b086e:   	cmpq	$0x0, 0x18(%r8)
  0x0000028bb96b0876:   	je	0x1e
  0x0000028bb96b0878:   	cmpq	$0x1, 0x18(%r8)
  0x0000028bb96b0880:   	je	0x14
  0x0000028bb96b0882:   	xorq	0x18(%r8), %rsi
  0x0000028bb96b0886:   	testq	$-0x4, %rsi
  0x0000028bb96b088d:   	je	0xb
  0x0000028bb96b088f:   	orq	$0x2, 0x18(%r8)
  0x0000028bb96b0894:   	jmp	0x4
  0x0000028bb96b0896:   	movq	%rsi, 0x18(%r8)
  0x0000028bb96b089a:   	movq	%rdx, %r8
  0x0000028bb96b089d:   	movabsq	$0x28bd831a7f0, %rsi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b08a7:   	movl	0x8(%r8), %r8d
  0x0000028bb96b08ab:   	movabsq	$0x800000000, %r10
  0x0000028bb96b08b5:   	addq	%r10, %r8
  0x0000028bb96b08b8:   	cmpq	0x288(%rsi), %r8
  0x0000028bb96b08bf:   	jne	0xd
  0x0000028bb96b08c1:   	addq	$0x1, 0x290(%rsi)
  0x0000028bb96b08c9:   	jmp	0x66
  0x0000028bb96b08ce:   	cmpq	0x298(%rsi), %r8
  0x0000028bb96b08d5:   	jne	0xd
  0x0000028bb96b08d7:   	addq	$0x1, 0x2a0(%rsi)
  0x0000028bb96b08df:   	jmp	0x50
  0x0000028bb96b08e4:   	cmpq	$0x0, 0x288(%rsi)
  0x0000028bb96b08ef:   	jne	0x17
  0x0000028bb96b08f1:   	movq	%r8, 0x288(%rsi)
  0x0000028bb96b08f8:   	movq	$0x1, 0x290(%rsi)
  0x0000028bb96b0903:   	jmp	0x2c
  0x0000028bb96b0908:   	cmpq	$0x0, 0x298(%rsi)
  0x0000028bb96b0913:   	jne	0x17
  0x0000028bb96b0915:   	movq	%r8, 0x298(%rsi)
  0x0000028bb96b091c:   	movq	$0x1, 0x2a0(%rsi)
  0x0000028bb96b0927:   	jmp	0x8
  0x0000028bb96b092c:   	addq	$0x1, 0x278(%rsi)
  0x0000028bb96b0934:   	movq	%r9, %r8
  0x0000028bb96b0937:   	movq	%rax, %r9           ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@47 (line 109)
  0x0000028bb96b093a:   	nop
  0x0000028bb96b093b:   	nop
  0x0000028bb96b093c:   	nop
  0x0000028bb96b093d:   	nop
  0x0000028bb96b093e:   	nop
  0x0000028bb96b093f:   	callq	0x765a2dc           ; ImmutableOopMap {[79203828]=Oop }
                                                            ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@47 (line 109)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b0944:   	nopl	0x7000934(%rax,%rax);*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@47 (line 109)
                                                            ;   {other}
  0x0000028bb96b094c:   	movq	0x30(%rsp), %rsi
 ;;  block B4 [52, 53]
  0x0000028bb96b0951:   	cmpq	$0x0, %rsi
  0x0000028bb96b0955:   	movabsq	$0x28bd831a7f0, %rdx;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b095f:   	movabsq	$0x2d8, %rdi
  0x0000028bb96b0969:   	je	0xa
  0x0000028bb96b096f:   	movabsq	$0x2e8, %rdi
  0x0000028bb96b0979:   	movq	(%rdx,%rdi), %rbx
  0x0000028bb96b097d:   	leaq	0x1(%rbx), %rbx
  0x0000028bb96b0981:   	movq	%rbx, (%rdx,%rdi)
 ;;  164 branch [EQ]   [B6] 
  0x0000028bb96b0985:   	je	0x22d
 ;;  166 branch [AL]   [B5] 
  0x0000028bb96b098b:   	jmp	0x141               ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@53 (line 110)
 ;;  block B1 [65, 67]
  0x0000028bb96b0990:   	movq	0x488(%r15), %rax
  0x0000028bb96b0997:   	xorq	%r10, %r10
  0x0000028bb96b099a:   	movq	%r10, 0x488(%r15)
  0x0000028bb96b09a1:   	xorq	%r10, %r10
  0x0000028bb96b09a4:   	movq	%r10, 0x490(%r15)
  0x0000028bb96b09ab:   	cmpq	$0x0, %rsi
  0x0000028bb96b09af:   	movabsq	$0x28bd831a7f0, %rdx;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b09b9:   	movabsq	$0x330, %rdi
  0x0000028bb96b09c3:   	je	0xa
  0x0000028bb96b09c9:   	movabsq	$0x340, %rdi
  0x0000028bb96b09d3:   	movq	(%rdx,%rdi), %rbx
  0x0000028bb96b09d7:   	leaq	0x1(%rbx), %rbx
  0x0000028bb96b09db:   	movq	%rbx, (%rdx,%rdi)
 ;;  194 branch [EQ]   [B8] 
  0x0000028bb96b09df:   	je	0x24c               ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@67 (line 105)
 ;;  block B7 [70, 76]
  0x0000028bb96b09e5:   	movq	%rax, 0x50(%rsp)
  0x0000028bb96b09ea:   	cmpq	$0x0, %rsi
  0x0000028bb96b09ee:   	je	0x29
  0x0000028bb96b09f4:   	movabsq	$0x8000a2e70, %rcx  ;   {metadata('jdk/internal/foreign/MemorySessionImpl')}
  0x0000028bb96b09fe:   	movl	0x8(%rsi), %ebx
  0x0000028bb96b0a01:   	movabsq	$0x800000000, %r10
  0x0000028bb96b0a0b:   	addq	%r10, %rbx
  0x0000028bb96b0a0e:   	cmpq	0x40(%rbx), %rcx
  0x0000028bb96b0a12:   	jne	0x379
  0x0000028bb96b0a18:   	jmp	0x0
  0x0000028bb96b0a1d:   	movq	%rsi, %rdx
  0x0000028bb96b0a20:   	cmpq	(%rsi), %rax        ; implicit exception: dispatches to 0x0000028bb96b0db2
  0x0000028bb96b0a23:   	movq	%rsi, %rdx
  0x0000028bb96b0a26:   	movabsq	$0x28bd831a7f0, %rdi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0a30:   	movl	0x8(%rdx), %edx
  0x0000028bb96b0a33:   	movabsq	$0x800000000, %r10
  0x0000028bb96b0a3d:   	addq	%r10, %rdx
  0x0000028bb96b0a40:   	cmpq	0x360(%rdi), %rdx
  0x0000028bb96b0a47:   	jne	0xd
  0x0000028bb96b0a49:   	addq	$0x1, 0x368(%rdi)
  0x0000028bb96b0a51:   	jmp	0x66
  0x0000028bb96b0a56:   	cmpq	0x370(%rdi), %rdx
  0x0000028bb96b0a5d:   	jne	0xd
  0x0000028bb96b0a5f:   	addq	$0x1, 0x378(%rdi)
  0x0000028bb96b0a67:   	jmp	0x50
  0x0000028bb96b0a6c:   	cmpq	$0x0, 0x360(%rdi)
  0x0000028bb96b0a77:   	jne	0x17
  0x0000028bb96b0a79:   	movq	%rdx, 0x360(%rdi)
  0x0000028bb96b0a80:   	movq	$0x1, 0x368(%rdi)
  0x0000028bb96b0a8b:   	jmp	0x2c
  0x0000028bb96b0a90:   	cmpq	$0x0, 0x370(%rdi)
  0x0000028bb96b0a9b:   	jne	0x17
  0x0000028bb96b0a9d:   	movq	%rdx, 0x370(%rdi)
  0x0000028bb96b0aa4:   	movq	$0x1, 0x378(%rdi)
  0x0000028bb96b0aaf:   	jmp	0x8
  0x0000028bb96b0ab4:   	addq	$0x1, 0x350(%rdi)
  0x0000028bb96b0abc:   	movq	%rsi, %rdx          ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
  0x0000028bb96b0abf:   	callq	0x765a15c           ; ImmutableOopMap {[79203860]=Oop }
                                                            ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b0ac4:   	nopl	0x8000ab4(%rax,%rax);*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
                                                            ;   {other}
 ;;  216 branch [AL]   [B9] 
  0x0000028bb96b0acc:   	jmp	0xfa                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@76 (line 105)
 ;;  block B5 [56, 62]
  0x0000028bb96b0ad1:   	movl	%eax, 0x58(%rsp)
  0x0000028bb96b0ad5:   	cmpq	$0x0, %rsi
  0x0000028bb96b0ad9:   	je	0x29
  0x0000028bb96b0adf:   	movabsq	$0x8000a2e70, %rcx  ;   {metadata('jdk/internal/foreign/MemorySessionImpl')}
  0x0000028bb96b0ae9:   	movl	0x8(%rsi), %ebx
  0x0000028bb96b0aec:   	movabsq	$0x800000000, %r10
  0x0000028bb96b0af6:   	addq	%r10, %rbx
  0x0000028bb96b0af9:   	cmpq	0x40(%rbx), %rcx
  0x0000028bb96b0afd:   	jne	0x2d0
  0x0000028bb96b0b03:   	jmp	0x0
  0x0000028bb96b0b08:   	movq	%rsi, %rdx
  0x0000028bb96b0b0b:   	movq	%rsi, %rdx
  0x0000028bb96b0b0e:   	movabsq	$0x28bd831a7f0, %rdi;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0b18:   	movl	0x8(%rdx), %edx
  0x0000028bb96b0b1b:   	movabsq	$0x800000000, %r10
  0x0000028bb96b0b25:   	addq	%r10, %rdx
  0x0000028bb96b0b28:   	cmpq	0x308(%rdi), %rdx
  0x0000028bb96b0b2f:   	jne	0xd
  0x0000028bb96b0b31:   	addq	$0x1, 0x310(%rdi)
  0x0000028bb96b0b39:   	jmp	0x66
  0x0000028bb96b0b3e:   	cmpq	0x318(%rdi), %rdx
  0x0000028bb96b0b45:   	jne	0xd
  0x0000028bb96b0b47:   	addq	$0x1, 0x320(%rdi)
  0x0000028bb96b0b4f:   	jmp	0x50
  0x0000028bb96b0b54:   	cmpq	$0x0, 0x308(%rdi)
  0x0000028bb96b0b5f:   	jne	0x17
  0x0000028bb96b0b61:   	movq	%rdx, 0x308(%rdi)
  0x0000028bb96b0b68:   	movq	$0x1, 0x310(%rdi)
  0x0000028bb96b0b73:   	jmp	0x2c
  0x0000028bb96b0b78:   	cmpq	$0x0, 0x318(%rdi)
  0x0000028bb96b0b83:   	jne	0x17
  0x0000028bb96b0b85:   	movq	%rdx, 0x318(%rdi)
  0x0000028bb96b0b8c:   	movq	$0x1, 0x320(%rdi)
  0x0000028bb96b0b97:   	jmp	0x8
  0x0000028bb96b0b9c:   	addq	$0x1, 0x2f8(%rdi)
  0x0000028bb96b0ba4:   	movq	%rsi, %rdx          ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@57 (line 110)
  0x0000028bb96b0ba7:   	callq	0x765a074           ; ImmutableOopMap {}
                                                            ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@57 (line 110)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b0bac:   	nopl	0x9000b9c(%rax,%rax);*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@57 (line 110)
                                                            ;   {other}
  0x0000028bb96b0bb4:   	movl	0x58(%rsp), %eax
 ;;  block B6 [62, 64]
  0x0000028bb96b0bb8:   	addq	$0x70, %rsp
  0x0000028bb96b0bbc:   	popq	%rbp
  0x0000028bb96b0bbd:   	cmpq	0x3c8(%r15), %rsp   ;   {poll_return}
  0x0000028bb96b0bc4:   	ja	0x22a
  0x0000028bb96b0bca:   	retq                        ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@64 (line 109)
 ;;  block B9 [76, 76]
  0x0000028bb96b0bcb:   	movabsq	$0x28bd831a7f0, %rax;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0bd5:   	incl	0x388(%rax)
  0x0000028bb96b0bdb:   	movq	0x50(%rsp), %rax
 ;;  244 branch [AL]   [B8] 
  0x0000028bb96b0be0:   	jmp	0x4c                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@76 (line 105)
 ;;  block B2 [79, 87]
  0x0000028bb96b0be5:   	movq	0x488(%r15), %rax
  0x0000028bb96b0bec:   	xorq	%r10, %r10
  0x0000028bb96b0bef:   	movq	%r10, 0x488(%r15)
  0x0000028bb96b0bf6:   	xorq	%r10, %r10
  0x0000028bb96b0bf9:   	movq	%r10, 0x490(%r15)
  0x0000028bb96b0c00:   	movq	0x50(%rsp), %r8
  0x0000028bb96b0c05:   	movabsq	$0x28bd831a7f0, %rdx;   {metadata(method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0c0f:   	addq	$0x1, 0x3a0(%rdx)
  0x0000028bb96b0c17:   	movq	%rax, %r8
  0x0000028bb96b0c1a:   	movq	0x50(%rsp), %rdx    ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
  0x0000028bb96b0c1f:   	callq	0x7659ffc           ; ImmutableOopMap {[79203860]=Oop }
                                                            ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
                                                            ;   {optimized virtual_call}
  0x0000028bb96b0c24:   	nopl	0xa000c14(%rax,%rax);*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
                                                            ;   {other}
  0x0000028bb96b0c2c:   	movq	0x50(%rsp), %rax
 ;;  block B8 [87, 88]
  0x0000028bb96b0c31:   	jmp	0x297
 ;; CounterOverflowStub slow case
  0x0000028bb96b0c36:   	movabsq	$0x28bd8301c38, %r10;   {metadata({method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args')}
  0x0000028bb96b0c40:   	movq	%r10, 0x8(%rsp)
  0x0000028bb96b0c45:   	movq	$-0x1, (%rsp)
  0x0000028bb96b0c4d:   	callq	0x76f124e           ; ImmutableOopMap {rdx=Oop r8=Oop [79203820]=Oop }
                                                            ;*synchronization entry
                                                            ; - MinimizedStdLibTest20Args::printf@-1 (line 105)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000028bb96b0c52:   	jmp	-0x919
 ;; SimpleExceptionStub slow case
  0x0000028bb96b0c57:   	callq	0x7573344           ; ImmutableOopMap {rax=Oop rdx=Oop [79203820]=Oop }
                                                            ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000028bb96b0c5c:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0c66:   	andq	$-0x10, %rsp
  0x0000028bb96b0c6a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0c74:   	callq	*%r10
  0x0000028bb96b0c77:   	hlt
 ;; ImplicitNullCheckStub slow case
  0x0000028bb96b0c78:   	callq	0x7576223           ; ImmutableOopMap {rax=Oop rdx=Oop [79203820]=Oop }
                                                            ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000028bb96b0c7d:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0c87:   	andq	$-0x10, %rsp
  0x0000028bb96b0c8b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0c95:   	callq	*%r10
  0x0000028bb96b0c98:   	hlt
 ;; ImplicitNullCheckStub slow case
  0x0000028bb96b0c99:   	callq	0x7576202           ; ImmutableOopMap {rax=Oop r8=Oop [79203820]=Oop [79203828]=Oop [79203836]=Oop }
                                                            ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000028bb96b0c9e:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0ca8:   	andq	$-0x10, %rsp
  0x0000028bb96b0cac:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0cb6:   	callq	*%r10
  0x0000028bb96b0cb9:   	hlt
 ;; PatchingStub slow case
 ;;  patch template
  0x0000028bb96b0cba:   	movabsq	$0x0, %r8
 ;; patch data encoded as movl
  0x0000028bb96b0cc4:   	movl	$0xa050f00, %eax
 ;; patch entry point
  0x0000028bb96b0cc9:   	callq	0x76f0892           ; ImmutableOopMap {rax=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokedynamic {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) MinimizedStdLibTest20Args::printf@25 (line 108)
                                                            ;   {runtime_call load_appendix_patching Runtime1 stub}
  0x0000028bb96b0cce:   	jmp	-0x78b
 ;; SimpleExceptionStub slow case
  0x0000028bb96b0cd3:   	callq	0x75732c8           ; ImmutableOopMap {rax=Oop rdx=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@30 (line 108)
                                                            ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000028bb96b0cd8:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0ce2:   	andq	$-0x10, %rsp
  0x0000028bb96b0ce6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0cf0:   	callq	*%r10
  0x0000028bb96b0cf3:   	hlt
 ;; ImplicitNullCheckStub slow case
  0x0000028bb96b0cf4:   	callq	0x75761a7           ; ImmutableOopMap {rax=Oop rdx=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@30 (line 108)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000028bb96b0cf9:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0d03:   	andq	$-0x10, %rsp
  0x0000028bb96b0d07:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0d11:   	callq	*%r10
  0x0000028bb96b0d14:   	hlt
 ;; SimpleExceptionStub slow case
  0x0000028bb96b0d15:   	callq	0x7573286           ; ImmutableOopMap {rax=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface toArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@35 (line 108)
                                                            ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000028bb96b0d1a:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0d24:   	andq	$-0x10, %rsp
  0x0000028bb96b0d28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0d32:   	callq	*%r10
  0x0000028bb96b0d35:   	hlt
 ;; ImplicitNullCheckStub slow case
  0x0000028bb96b0d36:   	callq	0x7576165           ; ImmutableOopMap {rax=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokeinterface toArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@35 (line 108)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000028bb96b0d3b:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0d45:   	andq	$-0x10, %rsp
  0x0000028bb96b0d49:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0d53:   	callq	*%r10
  0x0000028bb96b0d56:   	hlt
 ;; PatchingStub slow case
 ;;  patch template
  0x0000028bb96b0d57:   	movabsq	$0x0, %rdi
 ;; patch data encoded as movl
  0x0000028bb96b0d61:   	movl	$0xa050f00, %eax
 ;; patch entry point
  0x0000028bb96b0d66:   	callq	0x76f07f5           ; ImmutableOopMap {rax=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop }
                                                            ;*invokevirtual invoke {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) MinimizedStdLibTest20Args::printf@47 (line 109)
                                                            ;   {runtime_call load_appendix_patching Runtime1 stub}
  0x0000028bb96b0d6b:   	jmp	-0x5c0
 ;; ImplicitNullCheckStub slow case
  0x0000028bb96b0d70:   	callq	0x757612b           ; ImmutableOopMap {rax=Oop rdi=Oop rdx=Oop [79203828]=Oop [79203836]=Oop }
                                                            ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@47 (line 109)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000028bb96b0d75:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0d7f:   	andq	$-0x10, %rsp
  0x0000028bb96b0d83:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0d8d:   	callq	*%r10
  0x0000028bb96b0d90:   	hlt
 ;; SimpleExceptionStub slow case
  0x0000028bb96b0d91:   	callq	0x757320a           ; ImmutableOopMap {rsi=Oop [79203860]=Oop }
                                                            ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
                                                            ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000028bb96b0d96:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0da0:   	andq	$-0x10, %rsp
  0x0000028bb96b0da4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0dae:   	callq	*%r10
  0x0000028bb96b0db1:   	hlt
 ;; ImplicitNullCheckStub slow case
  0x0000028bb96b0db2:   	callq	0x75760e9           ; ImmutableOopMap {rsi=Oop [79203860]=Oop }
                                                            ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000028bb96b0db7:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0dc1:   	andq	$-0x10, %rsp
  0x0000028bb96b0dc5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0dcf:   	callq	*%r10
  0x0000028bb96b0dd2:   	hlt
 ;; SimpleExceptionStub slow case
  0x0000028bb96b0dd3:   	callq	0x75731c8           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@57 (line 110)
                                                            ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000028bb96b0dd8:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0de2:   	andq	$-0x10, %rsp
  0x0000028bb96b0de6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0df0:   	callq	*%r10
  0x0000028bb96b0df3:   	hlt
 ;; C1SafepointPollStub slow case
  0x0000028bb96b0df4:   	movabsq	$0x28bb96b0bbd, %r10;   {internal_word}
  0x0000028bb96b0dfe:   	movq	%r10, 0x3e0(%r15)
  0x0000028bb96b0e05:   	jmp	0x7660e96           ;   {runtime_call SafepointBlob}
 ;; Exception adapter block
  0x0000028bb96b0e0a:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e0f:   	jmp	-0x484
 ;; Exception adapter block
  0x0000028bb96b0e14:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e19:   	jmp	-0x48e
 ;; Exception adapter block
  0x0000028bb96b0e1e:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e23:   	jmp	-0x498
 ;; Exception adapter block
  0x0000028bb96b0e28:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e2d:   	jmp	-0x4a2
 ;; Exception adapter block
  0x0000028bb96b0e32:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e37:   	jmp	-0x4ac
 ;; Exception adapter block
  0x0000028bb96b0e3c:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e41:   	jmp	-0x4b6
 ;; Exception adapter block
  0x0000028bb96b0e46:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e4b:   	jmp	-0x4c0
 ;; Exception adapter block
  0x0000028bb96b0e50:   	movq	%rax, %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e53:   	jmp	-0x4c8
 ;; Exception adapter block
  0x0000028bb96b0e58:   	movq	%rax, %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e5b:   	jmp	-0x4d0
 ;; Exception adapter block
  0x0000028bb96b0e60:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e65:   	jmp	-0x4da
 ;; Exception adapter block
  0x0000028bb96b0e6a:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e6f:   	jmp	-0x4e4
 ;; Exception adapter block
  0x0000028bb96b0e74:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e79:   	jmp	-0x4ee
 ;; Exception adapter block
  0x0000028bb96b0e7e:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e83:   	jmp	-0x4f8
 ;; Exception adapter block
  0x0000028bb96b0e88:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e8d:   	jmp	-0x502
 ;; Exception adapter block
  0x0000028bb96b0e92:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0e97:   	jmp	-0x50c
 ;; Exception adapter block
  0x0000028bb96b0e9c:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0ea1:   	jmp	-0x516
 ;; Exception adapter block
  0x0000028bb96b0ea6:   	movq	0x30(%rsp), %rsi
 ;;      branch [AL]   [B1] 
  0x0000028bb96b0eab:   	jmp	-0x520
 ;; Unwind handler
  0x0000028bb96b0eb0:   	movq	0x488(%r15), %rax
  0x0000028bb96b0eb7:   	movq	$0x0, 0x488(%r15)
  0x0000028bb96b0ec2:   	movq	$0x0, 0x490(%r15)
  0x0000028bb96b0ecd:   	addq	$0x70, %rsp
  0x0000028bb96b0ed1:   	popq	%rbp
  0x0000028bb96b0ed2:   	jmp	0x7576fc9           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000028bb96b0ed7:   	hlt
[Stub Code]
  0x0000028bb96b0ed8:   	nop                         ;   {no_reloc}
  0x0000028bb96b0ed9:   	nop
  0x0000028bb96b0eda:   	nop
  0x0000028bb96b0edb:   	nop
  0x0000028bb96b0edc:   	nop
  0x0000028bb96b0edd:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0ee7:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0eec:   	nop
  0x0000028bb96b0eed:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0ef7:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0efc:   	nop
  0x0000028bb96b0efd:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0f07:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0f0c:   	nop
  0x0000028bb96b0f0d:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0f17:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0f1c:   	nop
  0x0000028bb96b0f1d:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0f27:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0f2c:   	nop
  0x0000028bb96b0f2d:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0f37:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0f3c:   	nop
  0x0000028bb96b0f3d:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0f47:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0f4c:   	nop
  0x0000028bb96b0f4d:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0f57:   	jmp	-0x5                ;   {runtime_call}
[Exception Handler]
  0x0000028bb96b0f5c:   	movabsq	$0xdead, %rbx
  0x0000028bb96b0f66:   	movabsq	$0xdead, %rcx
  0x0000028bb96b0f70:   	movabsq	$0xdead, %rsi
  0x0000028bb96b0f7a:   	movabsq	$0xdead, %rdi
  0x0000028bb96b0f84:   	callq	0x7574137           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000028bb96b0f89:   	movabsq	$0x7ffd004c8c10, %rcx;   {external_word}
  0x0000028bb96b0f93:   	andq	$-0x10, %rsp
  0x0000028bb96b0f97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bb96b0fa1:   	callq	*%r10
  0x0000028bb96b0fa4:   	hlt
[Deopt Handler Code]
  0x0000028bb96b0fa5:   	movabsq	$0x28bb96b0fa5, %r10;   {section_word}
  0x0000028bb96b0faf:   	pushq	%r10
  0x0000028bb96b0fb1:   	jmp	0x765fc0a           ;   {runtime_call DeoptimizationBlob}
  0x0000028bb96b0fb6:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0fc0:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0fc5:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0fcf:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0fd4:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bb96b0fde:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bb96b0fe3:   	hlt
  0x0000028bb96b0fe4:   	hlt
  0x0000028bb96b0fe5:   	hlt
  0x0000028bb96b0fe6:   	hlt
  0x0000028bb96b0fe7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000028bb96b0fe8:   0x00000006238a13e0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000006238a13e0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000028bb96b0ff0:   0x0000028bd8301c38 {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
  0x0000028bb96b0ff8:   0x00000008000a2c70 'java/lang/foreign/MemorySession'
  0x0000028bb96b1000:   0x0000028bd82a6580 {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
  0x0000028bb96b1008:   0x0000028bd82e0e90 {method} {0x0000028bd82e0e98} 'close' '()V' in 'jdk/internal/foreign/MemorySessionImpl'
  0x0000028bb96b1010:   0x0000028bd82de348 {method} {0x0000028bd82de350} 'close' '()V' in 'java/lang/foreign/MemorySession'
  0x0000028bb96b1018:   0x000000080001f948 'java/util/stream/Stream'
  0x0000028bb96b1020:   0x0000028bd819cd60 {method} {0x0000028bd819cd68} 'map' '(Ljava/util/function/Function;)Ljava/util/stream/Stream;' in 'java/util/stream/ReferencePipeline'
  0x0000028bb96b1028:   0x0000028bd8197f18 {method} {0x0000028bd8197f20} 'map' '(Ljava/util/function/Function;)Ljava/util/stream/Stream;' in 'java/util/stream/Stream'
  0x0000028bb96b1030:   0x0000028bd819e178 {method} {0x0000028bd819e180} 'toArray' '()[Ljava/lang/Object;' in 'java/util/stream/ReferencePipeline'
  0x0000028bb96b1038:   0x0000028bd8198f90 {method} {0x0000028bd8198f98} 'toArray' '()[Ljava/lang/Object;' in 'java/util/stream/Stream'
  0x0000028bb96b1040:   0x00000008000a2e70 'jdk/internal/foreign/MemorySessionImpl'
  0x0000028bb96b1048:   0x0000000800008348 'java/util/stream/ReferencePipeline'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000028bb96b02ff offset=ffffffff bits=0):
PcDesc(pc=0x0000028bb96b033e offset=3e bits=0):
   MinimizedStdLibTest20Args::printf@0 (line 105)
PcDesc(pc=0x0000028bb96b035c offset=5c bits=0):
   MinimizedStdLibTest20Args::printf@0 (line 105)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0364 offset=64 bits=0):
   MinimizedStdLibTest20Args::printf@0 (line 105)
PcDesc(pc=0x0000028bb96b0441 offset=141 bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
PcDesc(pc=0x0000028bb96b044c offset=14c bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0454 offset=154 bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
PcDesc(pc=0x0000028bb96b046b offset=16b bits=0):
   MinimizedStdLibTest20Args::printf@13 (line 107)
PcDesc(pc=0x0000028bb96b047c offset=17c bits=0):
   MinimizedStdLibTest20Args::printf@13 (line 107)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0484 offset=184 bits=0):
   MinimizedStdLibTest20Args::printf@13 (line 107)
PcDesc(pc=0x0000028bb96b0528 offset=228 bits=0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
PcDesc(pc=0x0000028bb96b053c offset=23c bits=0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0544 offset=244 bits=0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
PcDesc(pc=0x0000028bb96b0557 offset=257 bits=0):
   MinimizedStdLibTest20Args::printf@25 (line 108)
PcDesc(pc=0x0000028bb96b0564 offset=264 bits=0):
   MinimizedStdLibTest20Args::printf@25 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[72],oop
PcDesc(pc=0x0000028bb96b056c offset=26c bits=0):
   MinimizedStdLibTest20Args::printf@25 (line 108)
PcDesc(pc=0x0000028bb96b06b1 offset=3b1 bits=0):
   MinimizedStdLibTest20Args::printf@30 (line 108)
PcDesc(pc=0x0000028bb96b06bc offset=3bc bits=0):
   MinimizedStdLibTest20Args::printf@30 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b06c4 offset=3c4 bits=0):
   MinimizedStdLibTest20Args::printf@30 (line 108)
PcDesc(pc=0x0000028bb96b0799 offset=499 bits=0):
   MinimizedStdLibTest20Args::printf@35 (line 108)
PcDesc(pc=0x0000028bb96b07a4 offset=4a4 bits=0):
   MinimizedStdLibTest20Args::printf@35 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b07ac offset=4ac bits=0):
   MinimizedStdLibTest20Args::printf@35 (line 108)
PcDesc(pc=0x0000028bb96b093a offset=63a bits=0):
   MinimizedStdLibTest20Args::printf@47 (line 109)
PcDesc(pc=0x0000028bb96b0944 offset=644 bits=0):
   MinimizedStdLibTest20Args::printf@47 (line 109)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b094c offset=64c bits=0):
   MinimizedStdLibTest20Args::printf@47 (line 109)
PcDesc(pc=0x0000028bb96b0990 offset=690 bits=0):
   MinimizedStdLibTest20Args::printf@53 (line 110)
PcDesc(pc=0x0000028bb96b09e5 offset=6e5 bits=0):
   MinimizedStdLibTest20Args::printf@67 (line 105)
PcDesc(pc=0x0000028bb96b0abf offset=7bf bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
PcDesc(pc=0x0000028bb96b0ac4 offset=7c4 bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0acc offset=7cc bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
PcDesc(pc=0x0000028bb96b0ad1 offset=7d1 bits=0):
   MinimizedStdLibTest20Args::printf@76 (line 105)
PcDesc(pc=0x0000028bb96b0ba7 offset=8a7 bits=0):
   MinimizedStdLibTest20Args::printf@57 (line 110)
PcDesc(pc=0x0000028bb96b0bac offset=8ac bits=0):
   MinimizedStdLibTest20Args::printf@57 (line 110)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: stack[88]
PcDesc(pc=0x0000028bb96b0bb4 offset=8b4 bits=0):
   MinimizedStdLibTest20Args::printf@57 (line 110)
PcDesc(pc=0x0000028bb96b0bcb offset=8cb bits=0):
   MinimizedStdLibTest20Args::printf@64 (line 109)
PcDesc(pc=0x0000028bb96b0be5 offset=8e5 bits=0):
   MinimizedStdLibTest20Args::printf@76 (line 105)
PcDesc(pc=0x0000028bb96b0c1f offset=91f bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
PcDesc(pc=0x0000028bb96b0c24 offset=924 bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0c2c offset=92c bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
PcDesc(pc=0x0000028bb96b0c52 offset=952 bits=0):
   MinimizedStdLibTest20Args::printf@-1 (line 105)
   Locals
    - l0: reg rdx [4],oop
    - l1: reg r8 [16],oop
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0c5c offset=95c bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: reg rax [0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0c7d offset=97d bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: reg rax [0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0c9e offset=99e bits=0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: reg rax [0],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0cce offset=9ce bits=1):
   MinimizedStdLibTest20Args::printf@25 (line 108)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
   Expression stack
    - @0: reg rax [0],oop
    - @1: stack[48],oop
PcDesc(pc=0x0000028bb96b0cd8 offset=9d8 bits=0):
   MinimizedStdLibTest20Args::printf@30 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0cf9 offset=9f9 bits=0):
   MinimizedStdLibTest20Args::printf@30 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0d1a offset=a1a bits=0):
   MinimizedStdLibTest20Args::printf@35 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0d3b offset=a3b bits=0):
   MinimizedStdLibTest20Args::printf@35 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0d6b offset=a6b bits=1):
   MinimizedStdLibTest20Args::printf@47 (line 109)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[64],oop
    - @1: stack[56],oop
    - @2: reg rax [0],oop
PcDesc(pc=0x0000028bb96b0d75 offset=a75 bits=0):
   MinimizedStdLibTest20Args::printf@47 (line 109)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0d96 offset=a96 bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0db7 offset=ab7 bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0dd8 offset=ad8 bits=0):
   MinimizedStdLibTest20Args::printf@57 (line 110)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bb96b0fe9 offset=ce9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 25 OopMaps

ImmutableOopMap {[79203812]=Oop [79203820]=Oop } pc offsets: 92 
ImmutableOopMap {[79203820]=Oop [79203828]=Oop } pc offsets: 332 
ImmutableOopMap {[79203820]=Oop [79203828]=Oop [79203836]=Oop } pc offsets: 380 
ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop } pc offsets: 572 
ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop [79203852]=Oop } pc offsets: 612 
ImmutableOopMap {[79203828]=Oop [79203836]=Oop [79203844]=Oop } pc offsets: 956 1188 
ImmutableOopMap {[79203828]=Oop } pc offsets: 1604 
ImmutableOopMap {[79203860]=Oop } pc offsets: 1988 
ImmutableOopMap {} pc offsets: 2220 
ImmutableOopMap {[79203860]=Oop } pc offsets: 2340 
ImmutableOopMap {rdx=Oop r8=Oop [79203820]=Oop } pc offsets: 2386 
ImmutableOopMap {rax=Oop rdx=Oop [79203820]=Oop } pc offsets: 2396 2429 
ImmutableOopMap {rax=Oop r8=Oop [79203820]=Oop [79203828]=Oop [79203836]=Oop } pc offsets: 2462 
ImmutableOopMap {rax=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop } pc offsets: 2510 
ImmutableOopMap {rax=Oop rdx=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop } pc offsets: 2520 2553 
ImmutableOopMap {rax=Oop [79203828]=Oop [79203836]=Oop [79203844]=Oop } pc offsets: 2586 2619 2667 
ImmutableOopMap {rax=Oop rdi=Oop rdx=Oop [79203828]=Oop [79203836]=Oop } pc offsets: 2677 
ImmutableOopMap {rsi=Oop [79203860]=Oop } pc offsets: 2710 2743 
ImmutableOopMap {rsi=Oop } pc offsets: 2776 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000028bb96b033e offset=3e):
   MinimizedStdLibTest20Args::printf@0 (line 105)
ScopeDesc(pc=0x0000028bb96b035c offset=5c):
   MinimizedStdLibTest20Args::printf@0 (line 105)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0364 offset=64):
   MinimizedStdLibTest20Args::printf@0 (line 105)
ScopeDesc(pc=0x0000028bb96b0441 offset=141):
   MinimizedStdLibTest20Args::printf@6 (line 106)
ScopeDesc(pc=0x0000028bb96b044c offset=14c):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0454 offset=154):
   MinimizedStdLibTest20Args::printf@6 (line 106)
ScopeDesc(pc=0x0000028bb96b046b offset=16b):
   MinimizedStdLibTest20Args::printf@13 (line 107)
ScopeDesc(pc=0x0000028bb96b047c offset=17c):
   MinimizedStdLibTest20Args::printf@13 (line 107)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0484 offset=184):
   MinimizedStdLibTest20Args::printf@13 (line 107)
ScopeDesc(pc=0x0000028bb96b0528 offset=228):
   MinimizedStdLibTest20Args::printf@19 (line 108)
ScopeDesc(pc=0x0000028bb96b053c offset=23c):
   MinimizedStdLibTest20Args::printf@19 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0544 offset=244):
   MinimizedStdLibTest20Args::printf@19 (line 108)
ScopeDesc(pc=0x0000028bb96b0557 offset=257):
   MinimizedStdLibTest20Args::printf@25 (line 108)
ScopeDesc(pc=0x0000028bb96b0564 offset=264):
   MinimizedStdLibTest20Args::printf@25 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[72],oop
ScopeDesc(pc=0x0000028bb96b056c offset=26c):
   MinimizedStdLibTest20Args::printf@25 (line 108)
ScopeDesc(pc=0x0000028bb96b06b1 offset=3b1):
   MinimizedStdLibTest20Args::printf@30 (line 108)
ScopeDesc(pc=0x0000028bb96b06bc offset=3bc):
   MinimizedStdLibTest20Args::printf@30 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b06c4 offset=3c4):
   MinimizedStdLibTest20Args::printf@30 (line 108)
ScopeDesc(pc=0x0000028bb96b0799 offset=499):
   MinimizedStdLibTest20Args::printf@35 (line 108)
ScopeDesc(pc=0x0000028bb96b07a4 offset=4a4):
   MinimizedStdLibTest20Args::printf@35 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b07ac offset=4ac):
   MinimizedStdLibTest20Args::printf@35 (line 108)
ScopeDesc(pc=0x0000028bb96b093a offset=63a):
   MinimizedStdLibTest20Args::printf@47 (line 109)
ScopeDesc(pc=0x0000028bb96b0944 offset=644):
   MinimizedStdLibTest20Args::printf@47 (line 109)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b094c offset=64c):
   MinimizedStdLibTest20Args::printf@47 (line 109)
ScopeDesc(pc=0x0000028bb96b0990 offset=690):
   MinimizedStdLibTest20Args::printf@53 (line 110)
ScopeDesc(pc=0x0000028bb96b09e5 offset=6e5):
   MinimizedStdLibTest20Args::printf@67 (line 105)
ScopeDesc(pc=0x0000028bb96b0abf offset=7bf):
   MinimizedStdLibTest20Args::printf@71 (line 105)
ScopeDesc(pc=0x0000028bb96b0ac4 offset=7c4):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0acc offset=7cc):
   MinimizedStdLibTest20Args::printf@71 (line 105)
ScopeDesc(pc=0x0000028bb96b0ad1 offset=7d1):
   MinimizedStdLibTest20Args::printf@76 (line 105)
ScopeDesc(pc=0x0000028bb96b0ba7 offset=8a7):
   MinimizedStdLibTest20Args::printf@57 (line 110)
ScopeDesc(pc=0x0000028bb96b0bac offset=8ac):
   MinimizedStdLibTest20Args::printf@57 (line 110)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: stack[88]
ScopeDesc(pc=0x0000028bb96b0bb4 offset=8b4):
   MinimizedStdLibTest20Args::printf@57 (line 110)
ScopeDesc(pc=0x0000028bb96b0bcb offset=8cb):
   MinimizedStdLibTest20Args::printf@64 (line 109)
ScopeDesc(pc=0x0000028bb96b0be5 offset=8e5):
   MinimizedStdLibTest20Args::printf@76 (line 105)
ScopeDesc(pc=0x0000028bb96b0c1f offset=91f):
   MinimizedStdLibTest20Args::printf@84 (line 105)
ScopeDesc(pc=0x0000028bb96b0c24 offset=924):
   MinimizedStdLibTest20Args::printf@84 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0c2c offset=92c):
   MinimizedStdLibTest20Args::printf@84 (line 105)
ScopeDesc(pc=0x0000028bb96b0c52 offset=952):
   MinimizedStdLibTest20Args::printf@-1 (line 105)
   Locals
    - l0: reg rdx [4],oop
    - l1: reg r8 [16],oop
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0c5c offset=95c):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: reg rax [0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0c7d offset=97d):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: reg rax [0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0c9e offset=99e):
   MinimizedStdLibTest20Args::printf@19 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: reg rax [0],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0cce offset=9ce):
   MinimizedStdLibTest20Args::printf@25 (line 108)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
   Expression stack
    - @0: reg rax [0],oop
    - @1: stack[48],oop
ScopeDesc(pc=0x0000028bb96b0cd8 offset=9d8):
   MinimizedStdLibTest20Args::printf@30 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0cf9 offset=9f9):
   MinimizedStdLibTest20Args::printf@30 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0d1a offset=a1a):
   MinimizedStdLibTest20Args::printf@35 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0d3b offset=a3b):
   MinimizedStdLibTest20Args::printf@35 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: stack[56],oop
    - l4: stack[64],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0d6b offset=a6b):
   MinimizedStdLibTest20Args::printf@47 (line 109)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[64],oop
    - @1: stack[56],oop
    - @2: reg rax [0],oop
ScopeDesc(pc=0x0000028bb96b0d75 offset=a75):
   MinimizedStdLibTest20Args::printf@47 (line 109)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0d96 offset=a96):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0db7 offset=ab7):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[80],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bb96b0dd8 offset=ad8):
   MinimizedStdLibTest20Args::printf@57 (line 110)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000028bb96b0170: 3216
relocInfo@0x0000028bb96b0170 [type=6(runtime_call) addr=0x0000028bb96b0316 offset=22 format=1] | [destination=0x0000028bc0c71b00]
         @0x0000028bb96b0172: 600a
relocInfo@0x0000028bb96b0172 [type=12(metadata) addr=0x0000028bb96b0320 offset=10] | [metadata_addr=0x0000028bb96b0322 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b0174: 6023
relocInfo@0x0000028bb96b0174 [type=12(metadata) addr=0x0000028bb96b0343 offset=35] | [metadata_addr=0x0000028bb96b0345 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b0176: 2214
relocInfo@0x0000028bb96b0176 [type=4(static_call) addr=0x0000028bb96b0357 offset=20 format=1] | [destination=0x0000028bc0d0b220 metadata=0x0000000000000000]
         @0x0000028bb96b0178: 8005
relocInfo@0x0000028bb96b0178 [type=16(post_call_nop) addr=0x0000028bb96b035c offset=5]
         @0x0000028bb96b017a: 6017
relocInfo@0x0000028bb96b017a [type=12(metadata) addr=0x0000028bb96b0373 offset=23] | [metadata_addr=0x0000028bb96b0375 *=0x00000008000a2e70 offset=0]metadata_value=0x00000008000a2e70: 'jdk/internal/foreign/MemorySessionImpl'
         @0x0000028bb96b017c: 6032
relocInfo@0x0000028bb96b017c [type=12(metadata) addr=0x0000028bb96b03a5 offset=50] | [metadata_addr=0x0000028bb96b03a7 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b017e: 1aa2
relocInfo@0x0000028bb96b017e [type=3(opt_virtual_call) addr=0x0000028bb96b0447 offset=162 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b0180: 8005
relocInfo@0x0000028bb96b0180 [type=16(post_call_nop) addr=0x0000028bb96b044c offset=5]
         @0x0000028bb96b0182: 6008
relocInfo@0x0000028bb96b0182 [type=12(metadata) addr=0x0000028bb96b0454 offset=8] | [metadata_addr=0x0000028bb96b0456 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b0184: 2223
relocInfo@0x0000028bb96b0184 [type=4(static_call) addr=0x0000028bb96b0477 offset=35 format=1] | [destination=0x0000028bc0d0b220 metadata=0x0000000000000000]
         @0x0000028bb96b0186: 8005
relocInfo@0x0000028bb96b0186 [type=16(post_call_nop) addr=0x0000028bb96b047c offset=5]
         @0x0000028bb96b0188: 6013
relocInfo@0x0000028bb96b0188 [type=12(metadata) addr=0x0000028bb96b048f offset=19] | [metadata_addr=0x0000028bb96b0491 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b018a: 780a12a8
relocInfo@0x0000028bb96b018c [type=2(virtual_call) addr=0x0000028bb96b0537 offset=168 format=1 data=10] | [destination=0x0000028bc0d0af20 cached_value=0x0000028bb96b052d metadata=0x0000000000000000]
         @0x0000028bb96b018e: 8005
relocInfo@0x0000028bb96b018e [type=16(post_call_nop) addr=0x0000028bb96b053c offset=5]
         @0x0000028bb96b0190: 000c
relocInfo@0x0000028bb96b0190 [type=0(none) addr=0x0000028bb96b0548 offset=12]
         @0x0000028bb96b0192: 2217
relocInfo@0x0000028bb96b0192 [type=4(static_call) addr=0x0000028bb96b055f offset=23 format=1] | [destination=0x0000028bc0d0b220 metadata=0x0000000000000000]
         @0x0000028bb96b0194: 8005
relocInfo@0x0000028bb96b0194 [type=16(post_call_nop) addr=0x0000028bb96b0564 offset=5]
         @0x0000028bb96b0196: 6008
relocInfo@0x0000028bb96b0196 [type=12(metadata) addr=0x0000028bb96b056c offset=8] | [metadata_addr=0x0000028bb96b056e *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b0198: 6079
relocInfo@0x0000028bb96b0198 [type=12(metadata) addr=0x0000028bb96b05e5 offset=121] | [metadata_addr=0x0000028bb96b05e7 *=0x0000000800008348 offset=0]metadata_value=0x0000000800008348: 'java/util/stream/ReferencePipeline'
         @0x0000028bb96b019a: 6032
relocInfo@0x0000028bb96b019a [type=12(metadata) addr=0x0000028bb96b0617 offset=50] | [metadata_addr=0x0000028bb96b0619 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b019c: 1aa0
relocInfo@0x0000028bb96b019c [type=3(opt_virtual_call) addr=0x0000028bb96b06b7 offset=160 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b019e: 8005
relocInfo@0x0000028bb96b019e [type=16(post_call_nop) addr=0x0000028bb96b06bc offset=5]
         @0x0000028bb96b01a0: 6012
relocInfo@0x0000028bb96b01a0 [type=12(metadata) addr=0x0000028bb96b06ce offset=18] | [metadata_addr=0x0000028bb96b06d0 *=0x0000000800008348 offset=0]metadata_value=0x0000000800008348: 'java/util/stream/ReferencePipeline'
         @0x0000028bb96b01a2: 6032
relocInfo@0x0000028bb96b01a2 [type=12(metadata) addr=0x0000028bb96b0700 offset=50] | [metadata_addr=0x0000028bb96b0702 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01a4: 1a9f
relocInfo@0x0000028bb96b01a4 [type=3(opt_virtual_call) addr=0x0000028bb96b079f offset=159 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b01a6: 8005
relocInfo@0x0000028bb96b01a6 [type=16(post_call_nop) addr=0x0000028bb96b07a4 offset=5]
         @0x0000028bb96b01a8: 000c
relocInfo@0x0000028bb96b01a8 [type=0(none) addr=0x0000028bb96b07b0 offset=12]
         @0x0000028bb96b01aa: 6012
relocInfo@0x0000028bb96b01aa [type=12(metadata) addr=0x0000028bb96b07c2 offset=18] | [metadata_addr=0x0000028bb96b07c4 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01ac: 60db
relocInfo@0x0000028bb96b01ac [type=12(metadata) addr=0x0000028bb96b089d offset=219] | [metadata_addr=0x0000028bb96b089f *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01ae: 1aa2
relocInfo@0x0000028bb96b01ae [type=3(opt_virtual_call) addr=0x0000028bb96b093f offset=162 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b01b0: 8005
relocInfo@0x0000028bb96b01b0 [type=16(post_call_nop) addr=0x0000028bb96b0944 offset=5]
         @0x0000028bb96b01b2: 6011
relocInfo@0x0000028bb96b01b2 [type=12(metadata) addr=0x0000028bb96b0955 offset=17] | [metadata_addr=0x0000028bb96b0957 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01b4: 605a
relocInfo@0x0000028bb96b01b4 [type=12(metadata) addr=0x0000028bb96b09af offset=90] | [metadata_addr=0x0000028bb96b09b1 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01b6: 6045
relocInfo@0x0000028bb96b01b6 [type=12(metadata) addr=0x0000028bb96b09f4 offset=69] | [metadata_addr=0x0000028bb96b09f6 *=0x00000008000a2e70 offset=0]metadata_value=0x00000008000a2e70: 'jdk/internal/foreign/MemorySessionImpl'
         @0x0000028bb96b01b8: 6032
relocInfo@0x0000028bb96b01b8 [type=12(metadata) addr=0x0000028bb96b0a26 offset=50] | [metadata_addr=0x0000028bb96b0a28 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01ba: 1a99
relocInfo@0x0000028bb96b01ba [type=3(opt_virtual_call) addr=0x0000028bb96b0abf offset=153 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b01bc: 8005
relocInfo@0x0000028bb96b01bc [type=16(post_call_nop) addr=0x0000028bb96b0ac4 offset=5]
         @0x0000028bb96b01be: 601b
relocInfo@0x0000028bb96b01be [type=12(metadata) addr=0x0000028bb96b0adf offset=27] | [metadata_addr=0x0000028bb96b0ae1 *=0x00000008000a2e70 offset=0]metadata_value=0x00000008000a2e70: 'jdk/internal/foreign/MemorySessionImpl'
         @0x0000028bb96b01c0: 602f
relocInfo@0x0000028bb96b01c0 [type=12(metadata) addr=0x0000028bb96b0b0e offset=47] | [metadata_addr=0x0000028bb96b0b10 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01c2: 1a99
relocInfo@0x0000028bb96b01c2 [type=3(opt_virtual_call) addr=0x0000028bb96b0ba7 offset=153 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b01c4: 8005
relocInfo@0x0000028bb96b01c4 [type=16(post_call_nop) addr=0x0000028bb96b0bac offset=5]
         @0x0000028bb96b01c6: 5811
relocInfo@0x0000028bb96b01c6 [type=11(poll_return) addr=0x0000028bb96b0bbd offset=17]
         @0x0000028bb96b01c8: 600e
relocInfo@0x0000028bb96b01c8 [type=12(metadata) addr=0x0000028bb96b0bcb offset=14] | [metadata_addr=0x0000028bb96b0bcd *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01ca: 603a
relocInfo@0x0000028bb96b01ca [type=12(metadata) addr=0x0000028bb96b0c05 offset=58] | [metadata_addr=0x0000028bb96b0c07 *=0x0000028bd831a7f0 offset=0]metadata_value=0x0000028bd831a7f0: method data for {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01cc: 1a1a
relocInfo@0x0000028bb96b01cc [type=3(opt_virtual_call) addr=0x0000028bb96b0c1f offset=26 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bb96b01ce: 8005
relocInfo@0x0000028bb96b01ce [type=16(post_call_nop) addr=0x0000028bb96b0c24 offset=5]
         @0x0000028bb96b01d0: 6012
relocInfo@0x0000028bb96b01d0 [type=12(metadata) addr=0x0000028bb96b0c36 offset=18] | [metadata_addr=0x0000028bb96b0c38 *=0x0000028bd8301c38 offset=0]metadata_value=0x0000028bd8301c38: {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
         @0x0000028bb96b01d2: 3217
relocInfo@0x0000028bb96b01d2 [type=6(runtime_call) addr=0x0000028bb96b0c4d offset=23 format=1] | [destination=0x0000028bc0da1ea0]
         @0x0000028bb96b01d4: 320a
relocInfo@0x0000028bb96b01d4 [type=6(runtime_call) addr=0x0000028bb96b0c57 offset=10 format=1] | [destination=0x0000028bc0c23fa0]
         @0x0000028bb96b01d6: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b01de [type=7(external_word) addr=0x0000028bb96b0c5c offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b01e0: 300e
relocInfo@0x0000028bb96b01e0 [type=6(runtime_call) addr=0x0000028bb96b0c6a offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b01e2: 320e
relocInfo@0x0000028bb96b01e2 [type=6(runtime_call) addr=0x0000028bb96b0c78 offset=14 format=1] | [destination=0x0000028bc0c26ea0]
         @0x0000028bb96b01e4: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b01ec [type=7(external_word) addr=0x0000028bb96b0c7d offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b01ee: 300e
relocInfo@0x0000028bb96b01ee [type=6(runtime_call) addr=0x0000028bb96b0c8b offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b01f0: 320e
relocInfo@0x0000028bb96b01f0 [type=6(runtime_call) addr=0x0000028bb96b0c99 offset=14 format=1] | [destination=0x0000028bc0c26ea0]
         @0x0000028bb96b01f2: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b01fa [type=7(external_word) addr=0x0000028bb96b0c9e offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b01fc: 300e
relocInfo@0x0000028bb96b01fc [type=6(runtime_call) addr=0x0000028bb96b0cac offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b01fe: 321d
relocInfo@0x0000028bb96b01fe [type=6(runtime_call) addr=0x0000028bb96b0cc9 offset=29 format=1] | [destination=0x0000028bc0da1560]
         @0x0000028bb96b0200: 320a
relocInfo@0x0000028bb96b0200 [type=6(runtime_call) addr=0x0000028bb96b0cd3 offset=10 format=1] | [destination=0x0000028bc0c23fa0]
         @0x0000028bb96b0202: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b020a [type=7(external_word) addr=0x0000028bb96b0cd8 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b020c: 300e
relocInfo@0x0000028bb96b020c [type=6(runtime_call) addr=0x0000028bb96b0ce6 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b020e: 320e
relocInfo@0x0000028bb96b020e [type=6(runtime_call) addr=0x0000028bb96b0cf4 offset=14 format=1] | [destination=0x0000028bc0c26ea0]
         @0x0000028bb96b0210: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b0218 [type=7(external_word) addr=0x0000028bb96b0cf9 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b021a: 300e
relocInfo@0x0000028bb96b021a [type=6(runtime_call) addr=0x0000028bb96b0d07 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b021c: 320e
relocInfo@0x0000028bb96b021c [type=6(runtime_call) addr=0x0000028bb96b0d15 offset=14 format=1] | [destination=0x0000028bc0c23fa0]
         @0x0000028bb96b021e: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b0226 [type=7(external_word) addr=0x0000028bb96b0d1a offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b0228: 300e
relocInfo@0x0000028bb96b0228 [type=6(runtime_call) addr=0x0000028bb96b0d28 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b022a: 320e
relocInfo@0x0000028bb96b022a [type=6(runtime_call) addr=0x0000028bb96b0d36 offset=14 format=1] | [destination=0x0000028bc0c26ea0]
         @0x0000028bb96b022c: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b0234 [type=7(external_word) addr=0x0000028bb96b0d3b offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b0236: 300e
relocInfo@0x0000028bb96b0236 [type=6(runtime_call) addr=0x0000028bb96b0d49 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b0238: 321d
relocInfo@0x0000028bb96b0238 [type=6(runtime_call) addr=0x0000028bb96b0d66 offset=29 format=1] | [destination=0x0000028bc0da1560]
         @0x0000028bb96b023a: 320a
relocInfo@0x0000028bb96b023a [type=6(runtime_call) addr=0x0000028bb96b0d70 offset=10 format=1] | [destination=0x0000028bc0c26ea0]
         @0x0000028bb96b023c: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b0244 [type=7(external_word) addr=0x0000028bb96b0d75 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b0246: 300e
relocInfo@0x0000028bb96b0246 [type=6(runtime_call) addr=0x0000028bb96b0d83 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b0248: 320e
relocInfo@0x0000028bb96b0248 [type=6(runtime_call) addr=0x0000028bb96b0d91 offset=14 format=1] | [destination=0x0000028bc0c23fa0]
         @0x0000028bb96b024a: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b0252 [type=7(external_word) addr=0x0000028bb96b0d96 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b0254: 300e
relocInfo@0x0000028bb96b0254 [type=6(runtime_call) addr=0x0000028bb96b0da4 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b0256: 320e
relocInfo@0x0000028bb96b0256 [type=6(runtime_call) addr=0x0000028bb96b0db2 offset=14 format=1] | [destination=0x0000028bc0c26ea0]
         @0x0000028bb96b0258: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b0260 [type=7(external_word) addr=0x0000028bb96b0db7 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b0262: 300e
relocInfo@0x0000028bb96b0262 [type=6(runtime_call) addr=0x0000028bb96b0dc5 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b0264: 320e
relocInfo@0x0000028bb96b0264 [type=6(runtime_call) addr=0x0000028bb96b0dd3 offset=14 format=1] | [destination=0x0000028bc0c23fa0]
         @0x0000028bb96b0266: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b026e [type=7(external_word) addr=0x0000028bb96b0dd8 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b0270: 300e
relocInfo@0x0000028bb96b0270 [type=6(runtime_call) addr=0x0000028bb96b0de6 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b0272: 7a37400e
relocInfo@0x0000028bb96b0274 [type=8(internal_word) addr=0x0000028bb96b0df4 offset=14 data=567] | [target=0x0000028bb96b0bbd]
         @0x0000028bb96b0276: 3211
relocInfo@0x0000028bb96b0276 [type=6(runtime_call) addr=0x0000028bb96b0e05 offset=17 format=1] | [destination=0x0000028bc0d11ca0]
         @0x0000028bb96b0278: 32cd
relocInfo@0x0000028bb96b0278 [type=6(runtime_call) addr=0x0000028bb96b0ed2 offset=205 format=1] | [destination=0x0000028bc0c27ea0]
         @0x0000028bb96b027a: 0006
relocInfo@0x0000028bb96b027a [type=0(none) addr=0x0000028bb96b0ed8 offset=6]
         @0x0000028bb96b027c: 7c01feb92805
relocInfo@0x0000028bb96b0280 [type=5(static_stub) addr=0x0000028bb96b0edd offset=5 data=-327] | [static_call=0x0000028bb96b0447]
         @0x0000028bb96b0282: 6000
relocInfo@0x0000028bb96b0282 [type=12(metadata) addr=0x0000028bb96b0edd offset=0] | [metadata_addr=0x0000028bb96b0edf *=0x0000000000000000 offset=0]
         @0x0000028bb96b0284: 320a
relocInfo@0x0000028bb96b0284 [type=6(runtime_call) addr=0x0000028bb96b0ee7 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b0286: 7c01fdd32806
relocInfo@0x0000028bb96b028a [type=5(static_stub) addr=0x0000028bb96b0eed offset=6 data=-557] | [static_call=0x0000028bb96b052d]
         @0x0000028bb96b028c: 6000
relocInfo@0x0000028bb96b028c [type=12(metadata) addr=0x0000028bb96b0eed offset=0] | [metadata_addr=0x0000028bb96b0eef *=0x0000000000000000 offset=0]
         @0x0000028bb96b028e: 320a
relocInfo@0x0000028bb96b028e [type=6(runtime_call) addr=0x0000028bb96b0ef7 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b0290: 7c01fda12806
relocInfo@0x0000028bb96b0294 [type=5(static_stub) addr=0x0000028bb96b0efd offset=6 data=-607] | [static_call=0x0000028bb96b055f]
         @0x0000028bb96b0296: 6000
relocInfo@0x0000028bb96b0296 [type=12(metadata) addr=0x0000028bb96b0efd offset=0] | [metadata_addr=0x0000028bb96b0eff *=0x0000000000000000 offset=0]
         @0x0000028bb96b0298: 320a
relocInfo@0x0000028bb96b0298 [type=6(runtime_call) addr=0x0000028bb96b0f07 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b029a: 7c01fc492806
relocInfo@0x0000028bb96b029e [type=5(static_stub) addr=0x0000028bb96b0f0d offset=6 data=-951] | [static_call=0x0000028bb96b06b7]
         @0x0000028bb96b02a0: 6000
relocInfo@0x0000028bb96b02a0 [type=12(metadata) addr=0x0000028bb96b0f0d offset=0] | [metadata_addr=0x0000028bb96b0f0f *=0x0000000000000000 offset=0]
         @0x0000028bb96b02a2: 320a
relocInfo@0x0000028bb96b02a2 [type=6(runtime_call) addr=0x0000028bb96b0f17 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02a4: 7c01fb612806
relocInfo@0x0000028bb96b02a8 [type=5(static_stub) addr=0x0000028bb96b0f1d offset=6 data=-1183] | [static_call=0x0000028bb96b079f]
         @0x0000028bb96b02aa: 6000
relocInfo@0x0000028bb96b02aa [type=12(metadata) addr=0x0000028bb96b0f1d offset=0] | [metadata_addr=0x0000028bb96b0f1f *=0x0000000000000000 offset=0]
         @0x0000028bb96b02ac: 320a
relocInfo@0x0000028bb96b02ac [type=6(runtime_call) addr=0x0000028bb96b0f27 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02ae: 7c01f9c12806
relocInfo@0x0000028bb96b02b2 [type=5(static_stub) addr=0x0000028bb96b0f2d offset=6 data=-1599] | [static_call=0x0000028bb96b093f]
         @0x0000028bb96b02b4: 6000
relocInfo@0x0000028bb96b02b4 [type=12(metadata) addr=0x0000028bb96b0f2d offset=0] | [metadata_addr=0x0000028bb96b0f2f *=0x0000000000000000 offset=0]
         @0x0000028bb96b02b6: 320a
relocInfo@0x0000028bb96b02b6 [type=6(runtime_call) addr=0x0000028bb96b0f37 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02b8: 7c01f8412806
relocInfo@0x0000028bb96b02bc [type=5(static_stub) addr=0x0000028bb96b0f3d offset=6 data=-1983] | [static_call=0x0000028bb96b0abf]
         @0x0000028bb96b02be: 6000
relocInfo@0x0000028bb96b02be [type=12(metadata) addr=0x0000028bb96b0f3d offset=0] | [metadata_addr=0x0000028bb96b0f3f *=0x0000000000000000 offset=0]
         @0x0000028bb96b02c0: 320a
relocInfo@0x0000028bb96b02c0 [type=6(runtime_call) addr=0x0000028bb96b0f47 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02c2: 7c01f7592806
relocInfo@0x0000028bb96b02c6 [type=5(static_stub) addr=0x0000028bb96b0f4d offset=6 data=-2215] | [static_call=0x0000028bb96b0ba7]
         @0x0000028bb96b02c8: 6000
relocInfo@0x0000028bb96b02c8 [type=12(metadata) addr=0x0000028bb96b0f4d offset=0] | [metadata_addr=0x0000028bb96b0f4f *=0x0000000000000000 offset=0]
         @0x0000028bb96b02ca: 320a
relocInfo@0x0000028bb96b02ca [type=6(runtime_call) addr=0x0000028bb96b0f57 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02cc: 322d
relocInfo@0x0000028bb96b02cc [type=6(runtime_call) addr=0x0000028bb96b0f84 offset=45 format=1] | [destination=0x0000028bc0c250c0]
         @0x0000028bb96b02ce: 7c03004c8c107ffd3805
relocInfo@0x0000028bb96b02d6 [type=7(external_word) addr=0x0000028bb96b0f89 offset=5 data={004c8c107ffd}] | [target=0x00007ffd004c8c10]
         @0x0000028bb96b02d8: 300e
relocInfo@0x0000028bb96b02d8 [type=6(runtime_call) addr=0x0000028bb96b0f97 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bb96b02da: 7c01fcce480e
relocInfo@0x0000028bb96b02de [type=9(section_word) addr=0x0000028bb96b0fa5 offset=14 data=-818] | [target=0x0000028bb96b0fa5]
         @0x0000028bb96b02e0: 320c
relocInfo@0x0000028bb96b02e0 [type=6(runtime_call) addr=0x0000028bb96b0fb1 offset=12 format=1] | [destination=0x0000028bc0d10bc0]
         @0x0000028bb96b02e2: 7c01ffa92805
relocInfo@0x0000028bb96b02e6 [type=5(static_stub) addr=0x0000028bb96b0fb6 offset=5 data=-87] | [static_call=0x0000028bb96b0357]
         @0x0000028bb96b02e8: 6000
relocInfo@0x0000028bb96b02e8 [type=12(metadata) addr=0x0000028bb96b0fb6 offset=0] | [metadata_addr=0x0000028bb96b0fb8 *=0x0000000000000000 offset=0]
         @0x0000028bb96b02ea: 320a
relocInfo@0x0000028bb96b02ea [type=6(runtime_call) addr=0x0000028bb96b0fc0 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02ec: 7c01fe892805
relocInfo@0x0000028bb96b02f0 [type=5(static_stub) addr=0x0000028bb96b0fc5 offset=5 data=-375] | [static_call=0x0000028bb96b0477]
         @0x0000028bb96b02f2: 6000
relocInfo@0x0000028bb96b02f2 [type=12(metadata) addr=0x0000028bb96b0fc5 offset=0] | [metadata_addr=0x0000028bb96b0fc7 *=0x0000000000000000 offset=0]
         @0x0000028bb96b02f4: 320a
relocInfo@0x0000028bb96b02f4 [type=6(runtime_call) addr=0x0000028bb96b0fcf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b02f6: 7c01f6e12805
relocInfo@0x0000028bb96b02fa [type=5(static_stub) addr=0x0000028bb96b0fd4 offset=5 data=-2335] | [static_call=0x0000028bb96b0c1f]
         @0x0000028bb96b02fc: 6000
relocInfo@0x0000028bb96b02fc [type=12(metadata) addr=0x0000028bb96b0fd4 offset=0] | [metadata_addr=0x0000028bb96b0fd6 *=0x0000000000000000 offset=0]
         @0x0000028bb96b02fe: 320a
relocInfo@0x0000028bb96b02fe [type=6(runtime_call) addr=0x0000028bb96b0fde offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bb96b0300: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type unique_concrete_method_4
  context = *java.lang.foreign.MemorySession
  method  = {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
  class   = java.lang.foreign.MemorySession
  method  = {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
   [nmethod<=klass]java.lang.foreign.MemorySession
Dependency of type unique_concrete_method_4
  context = *java.lang.foreign.MemorySession
  method  = {method} {0x0000028bd82e0e98} 'close' '()V' in 'jdk/internal/foreign/MemorySessionImpl'
  class   = java.lang.foreign.MemorySession
  method  = *{method} {0x0000028bd82de350} 'close' '()V' in 'java/lang/foreign/MemorySession'
   [nmethod<=klass]java.lang.foreign.MemorySession
Dependency of type unique_concrete_method_4
  context = *java.util.stream.Stream
  method  = {method} {0x0000028bd819cd68} 'map' '(Ljava/util/function/Function;)Ljava/util/stream/Stream;' in 'java/util/stream/ReferencePipeline'
  class   = java.util.stream.Stream
  method  = *{method} {0x0000028bd8197f20} 'map' '(Ljava/util/function/Function;)Ljava/util/stream/Stream;' in 'java/util/stream/Stream'
   [nmethod<=klass]java.util.stream.Stream
Dependency of type unique_concrete_method_4
  context = *java.util.stream.Stream
  method  = {method} {0x0000028bd819e180} 'toArray' '()[Ljava/lang/Object;' in 'java/util/stream/ReferencePipeline'
  class   = java.util.stream.Stream
  method  = *{method} {0x0000028bd8198f98} 'toArray' '()[Ljava/lang/Object;' in 'java/util/stream/Stream'
   [nmethod<=klass]java.util.stream.Stream
Dependency of type unique_implementor
  context = *java.lang.foreign.MemorySession
  class   = jdk.internal.foreign.MemorySessionImpl
   [nmethod<=klass]java.lang.foreign.MemorySession
Dependency of type unique_implementor
  context = *java.util.stream.Stream
  class   = java.util.stream.ReferencePipeline
   [nmethod<=klass]java.util.stream.Stream
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 480 bytes)
catch_pco = 332 (pc=0x0000028bb96b044c, 1 entries)
  bci 65 at scope depth 0 -> pco 2826 (pc=0x0000028bb96b0e0a)
catch_pco = 380 (pc=0x0000028bb96b047c, 1 entries)
  bci 65 at scope depth 0 -> pco 2836 (pc=0x0000028bb96b0e14)
catch_pco = 572 (pc=0x0000028bb96b053c, 1 entries)
  bci 65 at scope depth 0 -> pco 2846 (pc=0x0000028bb96b0e1e)
catch_pco = 612 (pc=0x0000028bb96b0564, 1 entries)
  bci 65 at scope depth 0 -> pco 2856 (pc=0x0000028bb96b0e28)
catch_pco = 956 (pc=0x0000028bb96b06bc, 1 entries)
  bci 65 at scope depth 0 -> pco 2866 (pc=0x0000028bb96b0e32)
catch_pco = 1188 (pc=0x0000028bb96b07a4, 1 entries)
  bci 65 at scope depth 0 -> pco 2876 (pc=0x0000028bb96b0e3c)
catch_pco = 1604 (pc=0x0000028bb96b0944, 1 entries)
  bci 65 at scope depth 0 -> pco 2886 (pc=0x0000028bb96b0e46)
catch_pco = 1988 (pc=0x0000028bb96b0ac4, 1 entries)
  bci 79 at scope depth 0 -> pco 2277 (pc=0x0000028bb96b0be5)
catch_pco = 2396 (pc=0x0000028bb96b0c5c, 1 entries)
  bci 65 at scope depth 0 -> pco 2896 (pc=0x0000028bb96b0e50)
catch_pco = 2429 (pc=0x0000028bb96b0c7d, 1 entries)
  bci 65 at scope depth 0 -> pco 2904 (pc=0x0000028bb96b0e58)
catch_pco = 2462 (pc=0x0000028bb96b0c9e, 1 entries)
  bci 65 at scope depth 0 -> pco 2912 (pc=0x0000028bb96b0e60)
catch_pco = 2510 (pc=0x0000028bb96b0cce, 1 entries)
  bci 65 at scope depth 0 -> pco 2922 (pc=0x0000028bb96b0e6a)
catch_pco = 2520 (pc=0x0000028bb96b0cd8, 1 entries)
  bci 65 at scope depth 0 -> pco 2932 (pc=0x0000028bb96b0e74)
catch_pco = 2553 (pc=0x0000028bb96b0cf9, 1 entries)
  bci 65 at scope depth 0 -> pco 2942 (pc=0x0000028bb96b0e7e)
catch_pco = 2586 (pc=0x0000028bb96b0d1a, 1 entries)
  bci 65 at scope depth 0 -> pco 2952 (pc=0x0000028bb96b0e88)
catch_pco = 2619 (pc=0x0000028bb96b0d3b, 1 entries)
  bci 65 at scope depth 0 -> pco 2962 (pc=0x0000028bb96b0e92)
catch_pco = 2667 (pc=0x0000028bb96b0d6b, 1 entries)
  bci 65 at scope depth 0 -> pco 2972 (pc=0x0000028bb96b0e9c)
catch_pco = 2677 (pc=0x0000028bb96b0d75, 1 entries)
  bci 65 at scope depth 0 -> pco 2982 (pc=0x0000028bb96b0ea6)
catch_pco = 2710 (pc=0x0000028bb96b0d96, 1 entries)
  bci 79 at scope depth 0 -> pco 2277 (pc=0x0000028bb96b0be5)
catch_pco = 2743 (pc=0x0000028bb96b0db7, 1 entries)
  bci 79 at scope depth 0 -> pco 2277 (pc=0x0000028bb96b0be5)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 6 entries, 52 bytes):
{
   < 0x0000028bb96b039f, 0x0000028bb96b0c78 > < 0x0000028bb96b0489, 0x0000028bb96b0c99 > < 0x0000028bb96b0611, 0x0000028bb96b0cf4 > 
   < 0x0000028bb96b06fa, 0x0000028bb96b0d36 > < 0x0000028bb96b07bf, 0x0000028bb96b0d70 > < 0x0000028bb96b0a20, 0x0000028bb96b0db2 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x00000006238a13e0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000006238a13e0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x0000028bd8301c38 {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
# 2: 0x00000008000a2c70 'java/lang/foreign/MemorySession'
# 3: 0x0000028bd82a6580 {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
# 4: 0x0000028bd82e0e90 {method} {0x0000028bd82e0e98} 'close' '()V' in 'jdk/internal/foreign/MemorySessionImpl'
# 5: 0x0000028bd82de348 {method} {0x0000028bd82de350} 'close' '()V' in 'java/lang/foreign/MemorySession'
# 6: 0x000000080001f948 'java/util/stream/Stream'
# 7: 0x0000028bd819cd60 {method} {0x0000028bd819cd68} 'map' '(Ljava/util/function/Function;)Ljava/util/stream/Stream;' in 'java/util/stream/ReferencePipeline'
# 8: 0x0000028bd8197f18 {method} {0x0000028bd8197f20} 'map' '(Ljava/util/function/Function;)Ljava/util/stream/Stream;' in 'java/util/stream/Stream'
# 9: 0x0000028bd819e178 {method} {0x0000028bd819e180} 'toArray' '()[Ljava/lang/Object;' in 'java/util/stream/ReferencePipeline'
#10: 0x0000028bd8198f90 {method} {0x0000028bd8198f98} 'toArray' '()[Ljava/lang/Object;' in 'java/util/stream/Stream'
#11: 0x00000008000a2e70 'jdk/internal/foreign/MemorySessionImpl'
#12: 0x0000000800008348 'java/util/stream/ReferencePipeline'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r016 rdx:rdx   : parm 0: java/lang/String:exact *
#r004 r8:r8   : parm 1: java/util/List *
# -- Old rsp -- Framesize: 64 --
#r591 rsp+60: in_preserve
#r590 rsp+56: return address
#r589 rsp+52: in_preserve
#r588 rsp+48: saved fp register
#r587 rsp+44: pad2, stack alignment
#r586 rsp+40: pad2, stack alignment
#r585 rsp+36: Fixed slot 1
#r584 rsp+32: Fixed slot 0
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 78 ------------------------
{method}
 - this oop:          0x0000028bd8301c38
 - method holder:     'MinimizedStdLibTest20Args'
 - constants:         0x0000028bd8300218 constant pool [527]/operands[86] {0x0000028bd8300220} for 'MinimizedStdLibTest20Args' cache=0x0000028bd8302778
 - access:            0x81000008  static 
 - name:              'printf'
 - signature:         '(Ljava/lang/String;Ljava/util/List;)I'
 - max stack:         4
 - max locals:        7
 - size of params:    2
 - method size:       14
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000028bc0bffe60
 - adapters:          AHE@0x0000028bd76ff040: 0xbb i2c: 0x0000028bc0c64160 c2i: 0x0000028bc0c6425c c2iUV: 0x0000028bc0c64226 c2iNCI: 0x0000028bc0c64296
 - compiled entry     0x0000028bb96b0300
 - code size:         89
 - code start:        0x0000028bd8301b68
 - code end (excl):   0x0000028bd8301bc1
 - method data:       0x0000028bd831a7f0
 - checked ex length: 1
 - checked ex start:  0x0000028bd8301c32
 - linenumber start:  0x0000028bd8301bc1
 - localvar length:   6
 - localvar start:    0x0000028bd8301bd6
 - compiled code: nmethod   2980   77   !   3       MinimizedStdLibTest20Args::printf (89 bytes)

------------------------ OptoAssembly for Compile_id = 78 -----------------------
#
#  int ( java/lang/String:exact *, java/util/List * )
#
000     N1: #	out( B1 ) <- in( B9 B8 B7 B19 )  Freq: 1

000     B1: #	out( B18 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (176 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

01a     movq    [rsp + #0], R8	# spill
01e     movq    [rsp + #16], RDX	# spill
023     call,static  java.lang.foreign.MemorySession::openConfined
        # MinimizedStdLibTest20Args::printf @ bci:0 (line 105) L[0]=rsp + #16 L[1]=rsp + #0 L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {[79203780]=Oop [79203796]=Oop off=40/0x28}

030     B2: #	out( B9 B3 ) <- in( B1 )  Freq: 0.99998
        # Block is sole successor of call
030     movl    R10, [RAX + #8 (8-bit)]	# compressed klass ptr
034     NullCheck RAX

034     B3: #	out( B8 B4 ) <- in( B2 )  Freq: 0.999979
034     movq    R11, precise jdk/internal/foreign/MemorySessionImpl: 0x0000028bdc2abd30:Constant:exact *	# ptr
03e     decode_and_move_klass_not_null R8,R10
04b     movq    R10, [R8 + #64 (8-bit)]	# class
04f     cmpq    R10, R11	# ptr
052     jne,u   B8  P=0.000001 C=-1.000000

058     B4: #	out( B13 B5 ) <- in( B3 )  Freq: 0.999978
058     movq    RBP, RAX	# spill
05b     # checkcastPP of RBP
05b     movq    RDX, RBP	# spill
05e     movq    R8, [rsp + #16]	# spill
063     call,static  java.lang.foreign.SegmentAllocator::allocateUtf8String
        # MinimizedStdLibTest20Args::printf @ bci:6 (line 106) L[0]=_ L[1]=rsp + #0 L[2]=RBP L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [79203780]=Oop off=104/0x68}

070     B5: #	out( B14 B6 ) <- in( B4 )  Freq: 0.999958
        # Block is sole successor of call
070     movq    [rsp + #8], RAX	# spill
075     movq    RDX, [rsp + #0]	# spill
        nop 	# 2 bytes pad for loops and calls
07b     call,static  MinimizedStdLibTest20Args::specializedPrintf
        # MinimizedStdLibTest20Args::printf @ bci:13 (line 107) L[0]=_ L[1]=rsp + #0 L[2]=RBP L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [79203780]=Oop [79203788]=Oop off=128/0x80}

088     B6: #	out( B15 B7 ) <- in( B5 )  Freq: 0.999938
        # Block is sole successor of call
088     movq    [rsp + #16], RAX	# spill
08d     movq    RDX, [rsp + #0]	# spill
091     movq    rax, #Universe::non_oop_word()
	call,dynamic  java.util.Collection::stream
        # MinimizedStdLibTest20Args::printf @ bci:19 (line 108) L[0]=_ L[1]=_ L[2]=RBP L[3]=rsp + #8 L[4]=rsp + #16 L[5]=_ L[6]=_
        # OopMap {rbp=Oop [79203788]=Oop [79203796]=Oop off=160/0xa0}

0a8     B7: #	out( N1 ) <- in( B6 )  Freq: 0.999918
        # Block is sole successor of call
0a8     movl    RDX, #-83	# int
0ad     pushq   [rsp + #8]	# 64-bit mem-mem spill
	popq    [rsp + #0]
0b6     pushq   [rsp + #16]	# 64-bit mem-mem spill
	popq    [rsp + #8]
0c0     movq    [rsp + #16], RAX	# spill
        nop 	# 2 bytes pad for loops and calls
0c7     call,static  wrapper for: uncommon_trap(reason='uninitialized' action='reinterpret' debug_id='0')
        # MinimizedStdLibTest20Args::printf @ bci:25 (line 108) L[0]=_ L[1]=_ L[2]=RBP L[3]=rsp + #0 L[4]=rsp + #8 L[5]=_ L[6]=_ STK[0]=rsp + #16 STK[1]=RBP
        # OopMap {rbp=Oop [79203780]=Oop [79203788]=Oop [79203796]=Oop off=204/0xcc}
0d4     stop	# ShouldNotReachHere

0f0     B8: #	out( N1 ) <- in( B3 )  Freq: 9.99979e-07
0f0     movl    RDX, #-33	# int
0f5     movq    RBP, [rsp + #0]	# spill
0f9     movq    [rsp + #8], RAX	# spill
        nop 	# 1 bytes pad for loops and calls
0ff     call,static  wrapper for: uncommon_trap(reason='class_check' action='none' debug_id='0')
        # MinimizedStdLibTest20Args::printf @ bci:6 (line 106) L[0]=_ L[1]=RBP L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=rsp + #8 STK[1]=rsp + #16
        # OopMap {rbp=Oop [79203788]=Oop [79203796]=Oop off=260/0x104}
10c     stop	# ShouldNotReachHere

128     B9: #	out( N1 ) <- in( B2 )  Freq: 1.01326e-06
128     movl    RDX, #-10	# int
12d     movq    RBP, [rsp + #0]	# spill
        nop 	# 2 bytes pad for loops and calls
133     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # MinimizedStdLibTest20Args::printf @ bci:6 (line 106) L[0]=_ L[1]=RBP L[2]=#NULL L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=#NULL STK[1]=rsp + #16
        # OopMap {rbp=Oop [79203796]=Oop off=312/0x138}
140     stop	# ShouldNotReachHere

15c     B10: #	out( B19 ) <- in( B11 )  Freq: 2.99987e-15
15c     # exception oop is in rax; no code emitted
15c     movq    RDX, RAX	# spill
        nop 	# 1 bytes pad for loops and calls
160     jmp     B19

165     B11: #	out( B10 B12 ) <- in( B16 )  Freq: 2.99987e-10
165     # exception oop is in rax; no code emitted
165     movq    RDX, [rsp + #0]	# spill
169     movq    R8, RAX	# spill
        nop 	# 3 bytes pad for loops and calls
16f     call,static  java.lang.Throwable::addSuppressed
        # MinimizedStdLibTest20Args::printf @ bci:84 (line 105) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #0 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[79203780]=Oop off=372/0x174}

17c     B12: #	out( B17 ) <- in( B11 )  Freq: 2.99981e-10
        # Block is sole successor of call
17c     jmp,s   B17

17e     B13: #	out( B16 ) <- in( B4 )  Freq: 9.99978e-06
17e     # exception oop is in rax; no code emitted
17e     movq    [rsp + #0], RAX	# spill
182     jmp,s   B16

184     B14: #	out( B16 ) <- in( B5 )  Freq: 9.99958e-06
184     # exception oop is in rax; no code emitted
184     movq    [rsp + #0], RAX	# spill
188     jmp,s   B16

18a     B15: #	out( B16 ) <- in( B6 )  Freq: 9.99938e-06
18a     # exception oop is in rax; no code emitted
18a     movq    [rsp + #0], RAX	# spill

18e     B16: #	out( B11 B17 ) <- in( B15 B13 B14 )  Freq: 2.99987e-05
18e     movq    RDX, RBP	# spill
        nop 	# 2 bytes pad for loops and calls
193     call,static  jdk.internal.foreign.MemorySessionImpl::close
        # MinimizedStdLibTest20Args::printf @ bci:71 (line 105) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #0 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[79203780]=Oop off=408/0x198}

1a0     B17: #	out( B19 ) <- in( B12 B16 )  Freq: 2.99984e-05
1a0     movq    RDX, [rsp + #0]	# spill
1a4     jmp,s   B19

1a6     B18: #	out( B19 ) <- in( B1 )  Freq: 1e-05
1a6     # exception oop is in rax; no code emitted
1a6     movq    RDX, RAX	# spill

1a9     B19: #	out( N1 ) <- in( B18 B10 B17 )  Freq: 3.99984e-05
1a9     addq    rsp, 48	# Destroy frame
	popq    rbp

1ae     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2983   78   !   4       MinimizedStdLibTest20Args::printf (89 bytes)
 total in heap  [0x0000028bc1191110,0x0000028bc11918c8] = 1976
 relocation     [0x0000028bc1191270,0x0000028bc11912f8] = 136
 main code      [0x0000028bc1191300,0x0000028bc11914c0] = 448
 stub code      [0x0000028bc11914c0,0x0000028bc1191520] = 96
 oops           [0x0000028bc1191520,0x0000028bc1191528] = 8
 metadata       [0x0000028bc1191528,0x0000028bc1191560] = 56
 scopes data    [0x0000028bc1191560,0x0000028bc1191660] = 256
 scopes pcs     [0x0000028bc1191660,0x0000028bc1191810] = 432
 dependencies   [0x0000028bc1191810,0x0000028bc1191828] = 24
 handler table  [0x0000028bc1191828,0x0000028bc11918b8] = 144
 nul chk table  [0x0000028bc11918b8,0x0000028bc11918c8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    r8:r8     = 'java/util/List'
  #           [sp+0x40]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B9 B8 B7 B19 )  Freq: 1
 ;; B1: #	out( B18 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000028bc1191300:   	movl	%eax, -0xc000(%rsp)
  0x0000028bc1191307:   	pushq	%rbp
  0x0000028bc1191308:   	subq	$0x30, %rsp
  0x0000028bc119130c:   	cmpl	$0x1, 0x20(%r15)
  0x0000028bc1191314:   	jne	0x199               ;*synchronization entry
                                                            ; - MinimizedStdLibTest20Args::printf@-1 (line 105)
  0x0000028bc119131a:   	movq	%r8, (%rsp)
  0x0000028bc119131e:   	movq	%rdx, 0x10(%rsp)
  0x0000028bc1191323:   	callq	-0x486108           ; ImmutableOopMap {[79203780]=Oop [79203796]=Oop }
                                                            ;*invokestatic openConfined {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - MinimizedStdLibTest20Args::printf@0 (line 105)
                                                            ;   {static_call}
  0x0000028bc1191328:   	nopl	0x218(%rax,%rax)    ;*invokestatic openConfined {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@0 (line 105)
                                                            ;   {other}
 ;; B2: #	out( B9 B3 ) <- in( B1 )  Freq: 0.99998
  0x0000028bc1191330:   	movl	0x8(%rax), %r10d    ; implicit exception: dispatches to 0x0000028bc1191428
 ;; B3: #	out( B8 B4 ) <- in( B2 )  Freq: 0.999979
  0x0000028bc1191334:   	movabsq	$0x8000a2e70, %r11  ;   {metadata('jdk/internal/foreign/MemorySessionImpl')}
  0x0000028bc119133e:   	movabsq	$0x800000000, %r8
  0x0000028bc1191348:   	addq	%r10, %r8
  0x0000028bc119134b:   	movq	0x40(%r8), %r10
  0x0000028bc119134f:   	cmpq	%r11, %r10
  0x0000028bc1191352:   	jne	0x98
 ;; B4: #	out( B13 B5 ) <- in( B3 )  Freq: 0.999978
  0x0000028bc1191358:   	movq	%rax, %rbp
  0x0000028bc119135b:   	movq	%rbp, %rdx
  0x0000028bc119135e:   	movq	0x10(%rsp), %r8
  0x0000028bc1191363:   	callq	-0x486748           ; ImmutableOopMap {rbp=Oop [79203780]=Oop }
                                                            ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {optimized virtual_call}
  0x0000028bc1191368:   	nopl	0x1000258(%rax,%rax);*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {other}
 ;; B5: #	out( B14 B6 ) <- in( B4 )  Freq: 0.999958
  0x0000028bc1191370:   	movq	%rax, 0x8(%rsp)
  0x0000028bc1191375:   	movq	(%rsp), %rdx
  0x0000028bc1191379:   	nop
  0x0000028bc119137a:   	nop
  0x0000028bc119137b:   	callq	-0x486160           ; ImmutableOopMap {rbp=Oop [79203780]=Oop [79203788]=Oop }
                                                            ;*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
                                                            ;   {static_call}
  0x0000028bc1191380:   	nopl	0x2000270(%rax,%rax);*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
                                                            ;   {other}
 ;; B6: #	out( B15 B7 ) <- in( B5 )  Freq: 0.999938
  0x0000028bc1191388:   	movq	%rax, 0x10(%rsp)
  0x0000028bc119138d:   	movq	(%rsp), %rdx
  0x0000028bc1191391:   	movabsq	$-0x1, %rax
  0x0000028bc119139b:   	callq	-0x486480           ; ImmutableOopMap {rbp=Oop [79203788]=Oop [79203796]=Oop }
                                                            ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
                                                            ;   {virtual_call}
  0x0000028bc11913a0:   	nopl	0x3000290(%rax,%rax);*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
                                                            ;   {other}
 ;; B7: #	out( N1 ) <- in( B6 )  Freq: 0.999918
  0x0000028bc11913a8:   	movl	$0xffffffad, %edx
  0x0000028bc11913ad:   	pushq	0x8(%rsp)
  0x0000028bc11913b2:   	popq	(%rsp)
  0x0000028bc11913b6:   	pushq	0x10(%rsp)
  0x0000028bc11913bb:   	popq	0x8(%rsp)
  0x0000028bc11913c0:   	movq	%rax, 0x10(%rsp)
  0x0000028bc11913c5:   	nop
  0x0000028bc11913c6:   	nop
  0x0000028bc11913c7:   	callq	-0x47e92c           ; ImmutableOopMap {rbp=Oop [79203780]=Oop [79203788]=Oop [79203796]=Oop }
                                                            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@25 (line 108)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000028bc11913cc:   	nopl	0x40002bc(%rax,%rax);   {other}
  0x0000028bc11913d4:   	movabsq	$0x7ffd00966728, %rcx;   {external_word}
  0x0000028bc11913de:   	andq	$-0x10, %rsp
  0x0000028bc11913e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11913ec:   	callq	*%r10
  0x0000028bc11913ef:   	hlt                         ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@25 (line 108)
 ;; B8: #	out( N1 ) <- in( B3 )  Freq: 9.99979e-07
  0x0000028bc11913f0:   	movl	$0xffffffdf, %edx
  0x0000028bc11913f5:   	movq	(%rsp), %rbp
  0x0000028bc11913f9:   	movq	%rax, 0x8(%rsp)
  0x0000028bc11913fe:   	nop
  0x0000028bc11913ff:   	callq	-0x47e964           ; ImmutableOopMap {rbp=Oop [79203788]=Oop [79203796]=Oop }
                                                            ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000028bc1191404:   	nopl	0x50002f4(%rax,%rax);   {other}
  0x0000028bc119140c:   	movabsq	$0x7ffd00966728, %rcx;   {external_word}
  0x0000028bc1191416:   	andq	$-0x10, %rsp
  0x0000028bc119141a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191424:   	callq	*%r10
  0x0000028bc1191427:   	hlt
 ;; B9: #	out( N1 ) <- in( B2 )  Freq: 1.01326e-06
  0x0000028bc1191428:   	movl	$0xfffffff6, %edx
  0x0000028bc119142d:   	movq	(%rsp), %rbp
  0x0000028bc1191431:   	nop
  0x0000028bc1191432:   	nop
  0x0000028bc1191433:   	callq	-0x47e998           ; ImmutableOopMap {rbp=Oop [79203796]=Oop }
                                                            ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000028bc1191438:   	nopl	0x6000328(%rax,%rax);   {other}
  0x0000028bc1191440:   	movabsq	$0x7ffd00966728, %rcx;   {external_word}
  0x0000028bc119144a:   	andq	$-0x10, %rsp
  0x0000028bc119144e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191458:   	callq	*%r10
  0x0000028bc119145b:   	hlt                         ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
 ;; B10: #	out( B19 ) <- in( B11 )  Freq: 2.99987e-15
  0x0000028bc119145c:   	movq	%rax, %rdx
  0x0000028bc119145f:   	nop
  0x0000028bc1191460:   	jmp	0x44                ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
 ;; B11: #	out( B10 B12 ) <- in( B16 )  Freq: 2.99987e-10
  0x0000028bc1191465:   	movq	(%rsp), %rdx
  0x0000028bc1191469:   	movq	%rax, %r8
  0x0000028bc119146c:   	nop
  0x0000028bc119146d:   	nop
  0x0000028bc119146e:   	nop
  0x0000028bc119146f:   	callq	-0x486854           ; ImmutableOopMap {[79203780]=Oop }
                                                            ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
                                                            ;   {optimized virtual_call}
  0x0000028bc1191474:   	nopl	0x7000364(%rax,%rax);*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
                                                            ;   {other}
 ;; B12: #	out( B17 ) <- in( B11 )  Freq: 2.99981e-10
  0x0000028bc119147c:   	jmp	0x22                ;*invokeinterface allocateUtf8String {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@6 (line 106)
 ;; B13: #	out( B16 ) <- in( B4 )  Freq: 9.99978e-06
  0x0000028bc119147e:   	movq	%rax, (%rsp)
  0x0000028bc1191482:   	jmp	0xa                 ;*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
 ;; B14: #	out( B16 ) <- in( B5 )  Freq: 9.99958e-06
  0x0000028bc1191484:   	movq	%rax, (%rsp)
  0x0000028bc1191488:   	jmp	0x4                 ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@19 (line 108)
 ;; B15: #	out( B16 ) <- in( B6 )  Freq: 9.99938e-06
  0x0000028bc119148a:   	movq	%rax, (%rsp)        ;*invokestatic specializedPrintf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@13 (line 107)
 ;; B16: #	out( B11 B17 ) <- in( B15 B13 B14 )  Freq: 2.99987e-05
  0x0000028bc119148e:   	movq	%rbp, %rdx
  0x0000028bc1191491:   	nop
  0x0000028bc1191492:   	nop
  0x0000028bc1191493:   	callq	-0x486878           ; ImmutableOopMap {[79203780]=Oop }
                                                            ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@71 (line 105)
                                                            ;   {optimized virtual_call}
  0x0000028bc1191498:   	nopl	0x8000388(%rax,%rax);*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@76 (line 105)
                                                            ;   {other}
 ;; B17: #	out( B19 ) <- in( B12 B16 )  Freq: 2.99984e-05
  0x0000028bc11914a0:   	movq	(%rsp), %rdx
  0x0000028bc11914a4:   	jmp	0x3                 ;*invokestatic openConfined {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@0 (line 105)
 ;; B18: #	out( B19 ) <- in( B1 )  Freq: 1e-05
  0x0000028bc11914a6:   	movq	%rax, %rdx          ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MinimizedStdLibTest20Args::printf@84 (line 105)
 ;; B19: #	out( N1 ) <- in( B18 B10 B17 )  Freq: 3.99984e-05
  0x0000028bc11914a9:   	addq	$0x30, %rsp
  0x0000028bc11914ad:   	popq	%rbp
  0x0000028bc11914ae:   	jmp	-0x3e8d93           ;   {runtime_call _rethrow_Java}
  0x0000028bc11914b3:   	callq	-0x51f9b8           ;   {runtime_call StubRoutines (2)}
  0x0000028bc11914b8:   	jmp	-0x1a3
  0x0000028bc11914bd:   	hlt
  0x0000028bc11914be:   	hlt
  0x0000028bc11914bf:   	hlt
[Stub Code]
  0x0000028bc11914c0:   	movabsq	$0x0, %rbx          ;   {no_reloc}
  0x0000028bc11914ca:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bc11914cf:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bc11914d9:   	jmp	-0x5                ;   {runtime_call}
[Exception Handler]
  0x0000028bc11914de:   	jmp	-0x529cc3           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000028bc11914e3:   	callq	0x0
  0x0000028bc11914e8:   	subq	$0x5, (%rsp)
  0x0000028bc11914ed:   	jmp	-0x480932           ;   {runtime_call DeoptimizationBlob}
  0x0000028bc11914f2:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bc11914fc:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bc1191501:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bc119150b:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bc1191510:   	movabsq	$0x0, %rbx          ;   {static_stub}
  0x0000028bc119151a:   	jmp	-0x5                ;   {runtime_call}
  0x0000028bc119151f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000028bc1191520:   0x00000006238a13e0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000006238a13e0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000028bc1191528:   0x0000028bd8301c38 {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
  0x0000028bc1191530:   0x00000008000a4d58 'jdk/internal/foreign/MemorySessionImpl$GlobalSessionImpl'
  0x0000028bc1191538:   0x00000008000a2e70 'jdk/internal/foreign/MemorySessionImpl'
  0x0000028bc1191540:   0x00000008000a2c70 'java/lang/foreign/MemorySession'
  0x0000028bc1191548:   0x0000028bd82a6580 {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
  0x0000028bc1191550:   0x0000028bd82e0e90 {method} {0x0000028bd82e0e98} 'close' '()V' in 'jdk/internal/foreign/MemorySessionImpl'
  0x0000028bc1191558:   0x0000028bd82de348 {method} {0x0000028bd82de350} 'close' '()V' in 'java/lang/foreign/MemorySession'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000028bc11912ff offset=ffffffff bits=0):
PcDesc(pc=0x0000028bc119131a offset=1a bits=0):
   MinimizedStdLibTest20Args::printf@-1 (line 105)
PcDesc(pc=0x0000028bc1191328 offset=28 bits=4):
   MinimizedStdLibTest20Args::printf@0 (line 105)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bc1191330 offset=30 bits=0):
   MinimizedStdLibTest20Args::printf@0 (line 105)
PcDesc(pc=0x0000028bc1191368 offset=68 bits=4):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: reg rbp [10],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bc1191370 offset=70 bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
PcDesc(pc=0x0000028bc1191380 offset=80 bits=4):
   MinimizedStdLibTest20Args::printf@13 (line 107)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: reg rbp [10],oop
    - l3: stack[8],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bc1191388 offset=88 bits=0):
   MinimizedStdLibTest20Args::printf@13 (line 107)
PcDesc(pc=0x0000028bc11913a0 offset=a0 bits=4):
   MinimizedStdLibTest20Args::printf@19 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: reg rbp [10],oop
    - l3: stack[8],oop
    - l4: stack[16],oop
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bc11913a8 offset=a8 bits=0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
PcDesc(pc=0x0000028bc11913cc offset=cc bits=0):
   MinimizedStdLibTest20Args::printf@25 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: reg rbp [10],oop
    - l3: stack[0],oop
    - l4: stack[8],oop
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[16],oop
    - @1: reg rbp [10],oop
PcDesc(pc=0x0000028bc11913f0 offset=f0 bits=0):
   MinimizedStdLibTest20Args::printf@25 (line 108)
PcDesc(pc=0x0000028bc1191404 offset=104 bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[8],oop
    - @1: stack[16],oop
PcDesc(pc=0x0000028bc1191438 offset=138 bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: NULL
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: NULL
    - @1: stack[16],oop
PcDesc(pc=0x0000028bc119145c offset=15c bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
PcDesc(pc=0x0000028bc1191465 offset=165 bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
PcDesc(pc=0x0000028bc1191474 offset=174 bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[0],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bc119147c offset=17c bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
PcDesc(pc=0x0000028bc119147e offset=17e bits=0):
   MinimizedStdLibTest20Args::printf@6 (line 106)
PcDesc(pc=0x0000028bc1191484 offset=184 bits=0):
   MinimizedStdLibTest20Args::printf@13 (line 107)
PcDesc(pc=0x0000028bc119148a offset=18a bits=0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
PcDesc(pc=0x0000028bc119148e offset=18e bits=0):
   MinimizedStdLibTest20Args::printf@13 (line 107)
PcDesc(pc=0x0000028bc1191498 offset=198 bits=0):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[0],oop
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x0000028bc11914a0 offset=1a0 bits=0):
   MinimizedStdLibTest20Args::printf@76 (line 105)
PcDesc(pc=0x0000028bc11914a6 offset=1a6 bits=0):
   MinimizedStdLibTest20Args::printf@0 (line 105)
PcDesc(pc=0x0000028bc11914a9 offset=1a9 bits=0):
   MinimizedStdLibTest20Args::printf@84 (line 105)
PcDesc(pc=0x0000028bc1191521 offset=221 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 9 OopMaps

ImmutableOopMap {[79203780]=Oop [79203796]=Oop } pc offsets: 40 
ImmutableOopMap {rbp=Oop [79203780]=Oop } pc offsets: 104 
ImmutableOopMap {rbp=Oop [79203780]=Oop [79203788]=Oop } pc offsets: 128 
ImmutableOopMap {rbp=Oop [79203788]=Oop [79203796]=Oop } pc offsets: 160 
ImmutableOopMap {rbp=Oop [79203780]=Oop [79203788]=Oop [79203796]=Oop } pc offsets: 204 
ImmutableOopMap {rbp=Oop [79203788]=Oop [79203796]=Oop } pc offsets: 260 
ImmutableOopMap {rbp=Oop [79203796]=Oop } pc offsets: 312 
ImmutableOopMap {[79203780]=Oop } pc offsets: 372 408 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000028bc119131a offset=1a):
   MinimizedStdLibTest20Args::printf@-1 (line 105)
ScopeDesc(pc=0x0000028bc1191328 offset=28):
   MinimizedStdLibTest20Args::printf@0 (line 105)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bc1191330 offset=30):
   MinimizedStdLibTest20Args::printf@0 (line 105)
ScopeDesc(pc=0x0000028bc1191368 offset=68):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: reg rbp [10],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bc1191370 offset=70):
   MinimizedStdLibTest20Args::printf@6 (line 106)
ScopeDesc(pc=0x0000028bc1191380 offset=80):
   MinimizedStdLibTest20Args::printf@13 (line 107)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: reg rbp [10],oop
    - l3: stack[8],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bc1191388 offset=88):
   MinimizedStdLibTest20Args::printf@13 (line 107)
ScopeDesc(pc=0x0000028bc11913a0 offset=a0):
   MinimizedStdLibTest20Args::printf@19 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: reg rbp [10],oop
    - l3: stack[8],oop
    - l4: stack[16],oop
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bc11913a8 offset=a8):
   MinimizedStdLibTest20Args::printf@19 (line 108)
ScopeDesc(pc=0x0000028bc11913cc offset=cc):
   MinimizedStdLibTest20Args::printf@25 (line 108)
   Locals
    - l0: empty
    - l1: empty
    - l2: reg rbp [10],oop
    - l3: stack[0],oop
    - l4: stack[8],oop
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[16],oop
    - @1: reg rbp [10],oop
ScopeDesc(pc=0x0000028bc11913f0 offset=f0):
   MinimizedStdLibTest20Args::printf@25 (line 108)
ScopeDesc(pc=0x0000028bc1191404 offset=104):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[8],oop
    - @1: stack[16],oop
ScopeDesc(pc=0x0000028bc1191438 offset=138):
   MinimizedStdLibTest20Args::printf@6 (line 106)
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: NULL
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: NULL
    - @1: stack[16],oop
ScopeDesc(pc=0x0000028bc119145c offset=15c):
   MinimizedStdLibTest20Args::printf@84 (line 105)
ScopeDesc(pc=0x0000028bc1191465 offset=165):
   MinimizedStdLibTest20Args::printf@71 (line 105)
ScopeDesc(pc=0x0000028bc1191474 offset=174):
   MinimizedStdLibTest20Args::printf@84 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[0],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bc119147c offset=17c):
   MinimizedStdLibTest20Args::printf@84 (line 105)
ScopeDesc(pc=0x0000028bc119147e offset=17e):
   MinimizedStdLibTest20Args::printf@6 (line 106)
ScopeDesc(pc=0x0000028bc1191484 offset=184):
   MinimizedStdLibTest20Args::printf@13 (line 107)
ScopeDesc(pc=0x0000028bc119148a offset=18a):
   MinimizedStdLibTest20Args::printf@19 (line 108)
ScopeDesc(pc=0x0000028bc119148e offset=18e):
   MinimizedStdLibTest20Args::printf@13 (line 107)
ScopeDesc(pc=0x0000028bc1191498 offset=198):
   MinimizedStdLibTest20Args::printf@71 (line 105)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[0],oop
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x0000028bc11914a0 offset=1a0):
   MinimizedStdLibTest20Args::printf@76 (line 105)
ScopeDesc(pc=0x0000028bc11914a6 offset=1a6):
   MinimizedStdLibTest20Args::printf@0 (line 105)
ScopeDesc(pc=0x0000028bc11914a9 offset=1a9):
   MinimizedStdLibTest20Args::printf@84 (line 105)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000028bc1191270: 2223
relocInfo@0x0000028bc1191270 [type=4(static_call) addr=0x0000028bc1191323 offset=35 format=1] | [destination=0x0000028bc0d0b220 metadata=0x0000000000000000]
         @0x0000028bc1191272: 8005
relocInfo@0x0000028bc1191272 [type=16(post_call_nop) addr=0x0000028bc1191328 offset=5]
         @0x0000028bc1191274: 600c
relocInfo@0x0000028bc1191274 [type=12(metadata) addr=0x0000028bc1191334 offset=12] | [metadata_addr=0x0000028bc1191336 *=0x00000008000a2e70 offset=0]metadata_value=0x00000008000a2e70: 'jdk/internal/foreign/MemorySessionImpl'
         @0x0000028bc1191276: 1a2f
relocInfo@0x0000028bc1191276 [type=3(opt_virtual_call) addr=0x0000028bc1191363 offset=47 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bc1191278: 8005
relocInfo@0x0000028bc1191278 [type=16(post_call_nop) addr=0x0000028bc1191368 offset=5]
         @0x0000028bc119127a: 2213
relocInfo@0x0000028bc119127a [type=4(static_call) addr=0x0000028bc119137b offset=19 format=1] | [destination=0x0000028bc0d0b220 metadata=0x0000000000000000]
         @0x0000028bc119127c: 8005
relocInfo@0x0000028bc119127c [type=16(post_call_nop) addr=0x0000028bc1191380 offset=5]
         @0x0000028bc119127e: 780a121b
relocInfo@0x0000028bc1191280 [type=2(virtual_call) addr=0x0000028bc119139b offset=27 format=1 data=10] | [destination=0x0000028bc0d0af20 cached_value=0x0000028bc1191391 metadata=0x0000000000000000]
         @0x0000028bc1191282: 8005
relocInfo@0x0000028bc1191282 [type=16(post_call_nop) addr=0x0000028bc11913a0 offset=5]
         @0x0000028bc1191284: 3227
relocInfo@0x0000028bc1191284 [type=6(runtime_call) addr=0x0000028bc11913c7 offset=39 format=1] | [destination=0x0000028bc0d12aa0]
         @0x0000028bc1191286: 8005
relocInfo@0x0000028bc1191286 [type=16(post_call_nop) addr=0x0000028bc11913cc offset=5]
         @0x0000028bc1191288: 7c03009667287ffd3808
relocInfo@0x0000028bc1191290 [type=7(external_word) addr=0x0000028bc11913d4 offset=8 data={009667287ffd}] | [target=0x00007ffd00966728]
         @0x0000028bc1191292: 300e
relocInfo@0x0000028bc1191292 [type=6(runtime_call) addr=0x0000028bc11913e2 offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bc1191294: 321d
relocInfo@0x0000028bc1191294 [type=6(runtime_call) addr=0x0000028bc11913ff offset=29 format=1] | [destination=0x0000028bc0d12aa0]
         @0x0000028bc1191296: 8005
relocInfo@0x0000028bc1191296 [type=16(post_call_nop) addr=0x0000028bc1191404 offset=5]
         @0x0000028bc1191298: 7c03009667287ffd3808
relocInfo@0x0000028bc11912a0 [type=7(external_word) addr=0x0000028bc119140c offset=8 data={009667287ffd}] | [target=0x00007ffd00966728]
         @0x0000028bc11912a2: 300e
relocInfo@0x0000028bc11912a2 [type=6(runtime_call) addr=0x0000028bc119141a offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bc11912a4: 3219
relocInfo@0x0000028bc11912a4 [type=6(runtime_call) addr=0x0000028bc1191433 offset=25 format=1] | [destination=0x0000028bc0d12aa0]
         @0x0000028bc11912a6: 8005
relocInfo@0x0000028bc11912a6 [type=16(post_call_nop) addr=0x0000028bc1191438 offset=5]
         @0x0000028bc11912a8: 7c03009667287ffd3808
relocInfo@0x0000028bc11912b0 [type=7(external_word) addr=0x0000028bc1191440 offset=8 data={009667287ffd}] | [target=0x00007ffd00966728]
         @0x0000028bc11912b2: 300e
relocInfo@0x0000028bc11912b2 [type=6(runtime_call) addr=0x0000028bc119144e offset=14] | [destination=0x00007ffcffe67ef0]
         @0x0000028bc11912b4: 1a21
relocInfo@0x0000028bc11912b4 [type=3(opt_virtual_call) addr=0x0000028bc119146f offset=33 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bc11912b6: 8005
relocInfo@0x0000028bc11912b6 [type=16(post_call_nop) addr=0x0000028bc1191474 offset=5]
         @0x0000028bc11912b8: 1a1f
relocInfo@0x0000028bc11912b8 [type=3(opt_virtual_call) addr=0x0000028bc1191493 offset=31 format=1] | [destination=0x0000028bc0d0ac20 metadata=0x0000000000000000]
         @0x0000028bc11912ba: 8005
relocInfo@0x0000028bc11912ba [type=16(post_call_nop) addr=0x0000028bc1191498 offset=5]
         @0x0000028bc11912bc: 3216
relocInfo@0x0000028bc11912bc [type=6(runtime_call) addr=0x0000028bc11914ae offset=22 format=1] | [destination=0x0000028bc0da8720]
         @0x0000028bc11912be: 3205
relocInfo@0x0000028bc11912be [type=6(runtime_call) addr=0x0000028bc11914b3 offset=5 format=1] | [destination=0x0000028bc0c71b00]
         @0x0000028bc11912c0: 000d
relocInfo@0x0000028bc11912c0 [type=0(none) addr=0x0000028bc11914c0 offset=13]
         @0x0000028bc11912c2: 7c01ff9d2800
relocInfo@0x0000028bc11912c6 [type=5(static_stub) addr=0x0000028bc11914c0 offset=0 data=-99] | [static_call=0x0000028bc1191363]
         @0x0000028bc11912c8: 6000
relocInfo@0x0000028bc11912c8 [type=12(metadata) addr=0x0000028bc11914c0 offset=0] | [metadata_addr=0x0000028bc11914c2 *=0x0000000000000000 offset=0]
         @0x0000028bc11912ca: 320a
relocInfo@0x0000028bc11912ca [type=6(runtime_call) addr=0x0000028bc11914ca offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bc11912cc: 7c01fe6d2805
relocInfo@0x0000028bc11912d0 [type=5(static_stub) addr=0x0000028bc11914cf offset=5 data=-403] | [static_call=0x0000028bc1191493]
         @0x0000028bc11912d2: 6000
relocInfo@0x0000028bc11912d2 [type=12(metadata) addr=0x0000028bc11914cf offset=0] | [metadata_addr=0x0000028bc11914d1 *=0x0000000000000000 offset=0]
         @0x0000028bc11912d4: 320a
relocInfo@0x0000028bc11912d4 [type=6(runtime_call) addr=0x0000028bc11914d9 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bc11912d6: 3205
relocInfo@0x0000028bc11912d6 [type=6(runtime_call) addr=0x0000028bc11914de offset=5 format=1] | [destination=0x0000028bc0c67820]
         @0x0000028bc11912d8: 320f
relocInfo@0x0000028bc11912d8 [type=6(runtime_call) addr=0x0000028bc11914ed offset=15 format=1] | [destination=0x0000028bc0d10bc0]
         @0x0000028bc11912da: 7c01ffdd2805
relocInfo@0x0000028bc11912de [type=5(static_stub) addr=0x0000028bc11914f2 offset=5 data=-35] | [static_call=0x0000028bc1191323]
         @0x0000028bc11912e0: 6000
relocInfo@0x0000028bc11912e0 [type=12(metadata) addr=0x0000028bc11914f2 offset=0] | [metadata_addr=0x0000028bc11914f4 *=0x0000000000000000 offset=0]
         @0x0000028bc11912e2: 320a
relocInfo@0x0000028bc11912e2 [type=6(runtime_call) addr=0x0000028bc11914fc offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bc11912e4: 7c01ff852805
relocInfo@0x0000028bc11912e8 [type=5(static_stub) addr=0x0000028bc1191501 offset=5 data=-123] | [static_call=0x0000028bc119137b]
         @0x0000028bc11912ea: 6000
relocInfo@0x0000028bc11912ea [type=12(metadata) addr=0x0000028bc1191501 offset=0] | [metadata_addr=0x0000028bc1191503 *=0x0000000000000000 offset=0]
         @0x0000028bc11912ec: 320a
relocInfo@0x0000028bc11912ec [type=6(runtime_call) addr=0x0000028bc119150b offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bc11912ee: 7c01fe912805
relocInfo@0x0000028bc11912f2 [type=5(static_stub) addr=0x0000028bc1191510 offset=5 data=-367] | [static_call=0x0000028bc119146f]
         @0x0000028bc11912f4: 6000
relocInfo@0x0000028bc11912f4 [type=12(metadata) addr=0x0000028bc1191510 offset=0] | [metadata_addr=0x0000028bc1191512 *=0x0000000000000000 offset=0]
         @0x0000028bc11912f6: 320a
relocInfo@0x0000028bc11912f6 [type=6(runtime_call) addr=0x0000028bc119151a offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000028bc11912f8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = jdk.internal.foreign.MemorySessionImpl$GlobalSessionImpl
   [nmethod<=klass]jdk.internal.foreign.MemorySessionImpl$GlobalSessionImpl
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.internal.foreign.MemorySessionImpl
  class   = jdk.internal.foreign.MemorySessionImpl$GlobalSessionImpl
   [nmethod<=klass]jdk.internal.foreign.MemorySessionImpl
Dependency of type unique_concrete_method_4
  context = *java.lang.foreign.MemorySession
  method  = {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
  class   = java.lang.foreign.MemorySession
  method  = {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
   [nmethod<=klass]java.lang.foreign.MemorySession
Dependency of type unique_concrete_method_4
  context = *java.lang.foreign.MemorySession
  method  = {method} {0x0000028bd82e0e98} 'close' '()V' in 'jdk/internal/foreign/MemorySessionImpl'
  class   = java.lang.foreign.MemorySession
  method  = *{method} {0x0000028bd82de350} 'close' '()V' in 'java/lang/foreign/MemorySession'
   [nmethod<=klass]java.lang.foreign.MemorySession
Dependency of type unique_implementor
  context = *java.lang.foreign.MemorySession
  class   = jdk.internal.foreign.MemorySessionImpl
   [nmethod<=klass]java.lang.foreign.MemorySession
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 144 bytes)
catch_pco = 40 (pc=0x0000028bc1191328, 1 entries)
  bci -1 at scope depth 0 -> pco 422 (pc=0x0000028bc11914a6)
catch_pco = 104 (pc=0x0000028bc1191368, 1 entries)
  bci -1 at scope depth 0 -> pco 382 (pc=0x0000028bc119147e)
catch_pco = 128 (pc=0x0000028bc1191380, 1 entries)
  bci -1 at scope depth 0 -> pco 388 (pc=0x0000028bc1191484)
catch_pco = 160 (pc=0x0000028bc11913a0, 1 entries)
  bci -1 at scope depth 0 -> pco 394 (pc=0x0000028bc119148a)
catch_pco = 372 (pc=0x0000028bc1191474, 1 entries)
  bci -1 at scope depth 0 -> pco 348 (pc=0x0000028bc119145c)
catch_pco = 408 (pc=0x0000028bc1191498, 1 entries)
  bci -1 at scope depth 0 -> pco 357 (pc=0x0000028bc1191465)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 1 entries, 12 bytes):
{
   < 0x0000028bc1191330, 0x0000028bc1191428 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x00000006238a13e0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000006238a13e0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000028bd8301c38 {method} {0x0000028bd8301c40} 'printf' '(Ljava/lang/String;Ljava/util/List;)I' in 'MinimizedStdLibTest20Args'
#2: 0x00000008000a4d58 'jdk/internal/foreign/MemorySessionImpl$GlobalSessionImpl'
#3: 0x00000008000a2e70 'jdk/internal/foreign/MemorySessionImpl'
#4: 0x00000008000a2c70 'java/lang/foreign/MemorySession'
#5: 0x0000028bd82a6580 {method} {0x0000028bd82a6588} 'allocateUtf8String' '(Ljava/lang/String;)Ljava/lang/foreign/MemorySegment;' in 'java/lang/foreign/SegmentAllocator'
#6: 0x0000028bd82e0e90 {method} {0x0000028bd82e0e98} 'close' '()V' in 'jdk/internal/foreign/MemorySessionImpl'
#7: 0x0000028bd82de348 {method} {0x0000028bd82de350} 'close' '()V' in 'java/lang/foreign/MemorySession'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3042   79     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLJIL)V (native)
 total in heap  [0x0000028bc1191910,0x0000028bc1191ba8] = 664
 relocation     [0x0000028bc1191a70,0x0000028bc1191ab8] = 72
 main code      [0x0000028bc1191ac0,0x0000028bc1191ba5] = 229
 stub code      [0x0000028bc1191ba5,0x0000028bc1191ba8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8455760} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;JILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = long
  # parm3:    rdi       = int
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1191ac0:   	testq	%rsi, %rsi
  0x0000028bc1191ac3:   	je	0x40
  0x0000028bc1191ac9:   	pushq	%rdi
  0x0000028bc1191aca:   	pushq	%r10
  0x0000028bc1191acc:   	movl	0x8(%rsi), %edi
  0x0000028bc1191acf:   	movabsq	$0x800000000, %r10
  0x0000028bc1191ad9:   	addq	%r10, %rdi
  0x0000028bc1191adc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191ae6:   	cmpq	(%r10), %rdi
  0x0000028bc1191ae9:   	je	0x36
  0x0000028bc1191aef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1191af3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191afd:   	cmpq	(%r10), %rdi
  0x0000028bc1191b00:   	je	0x1f
  0x0000028bc1191b06:   	popq	%r10
  0x0000028bc1191b08:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1191b09:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1191b13:   	andq	$-0x10, %rsp
  0x0000028bc1191b17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191b21:   	callq	*%r10
  0x0000028bc1191b24:   	hlt
 ;; L_ok:
  0x0000028bc1191b25:   	popq	%r10
  0x0000028bc1191b27:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1191b28:   	movl	0xc(%rsi), %eax
  0x0000028bc1191b2b:   	shrl	$0x18, %eax
  0x0000028bc1191b2e:   	andl	$0xf, %eax
  0x0000028bc1191b31:   	cmpl	$0x6, %eax
  0x0000028bc1191b34:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1191b3a:   	movabsq	$0x28bdc210a90, %rcx;   {external_word}
  0x0000028bc1191b44:   	andq	$-0x10, %rsp
  0x0000028bc1191b48:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191b52:   	callq	*%r10
  0x0000028bc1191b55:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1191b56:   	movl	0x24(%rsi), %ebx
  0x0000028bc1191b59:   	pushq	%r10
  0x0000028bc1191b5b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191b65:   	cmpq	(%r10), %r12
  0x0000028bc1191b68:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191b6e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1191b78:   	andq	$-0x10, %rsp
  0x0000028bc1191b7c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191b86:   	callq	*%r10
  0x0000028bc1191b89:   	hlt
  0x0000028bc1191b8a:   	popq	%r10
  0x0000028bc1191b8c:   	shlq	$0x3, %rbx
  0x0000028bc1191b90:   	movq	0x10(%rbx), %rbx
  0x0000028bc1191b94:   	testq	%rbx, %rbx
  0x0000028bc1191b97:   	je	0x3
  0x0000028bc1191b9d:   	jmpq	*0x58(%rbx)
  0x0000028bc1191ba0:   	jmp	-0x52a685           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1191ba5:   	hlt
  0x0000028bc1191ba6:   	hlt
  0x0000028bc1191ba7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3047   79     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLJIL)V (native)
 total in heap  [0x0000028bc1191910,0x0000028bc1191ba8] = 664
 relocation     [0x0000028bc1191a70,0x0000028bc1191ab8] = 72
 main code      [0x0000028bc1191ac0,0x0000028bc1191ba5] = 229
 stub code      [0x0000028bc1191ba5,0x0000028bc1191ba8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8455760} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;JILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = long
  # parm3:    rdi       = int
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1191ac0:   	testq	%rsi, %rsi
  0x0000028bc1191ac3:   	je	0x40
  0x0000028bc1191ac9:   	pushq	%rdi
  0x0000028bc1191aca:   	pushq	%r10
  0x0000028bc1191acc:   	movl	0x8(%rsi), %edi
  0x0000028bc1191acf:   	movabsq	$0x800000000, %r10
  0x0000028bc1191ad9:   	addq	%r10, %rdi
  0x0000028bc1191adc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191ae6:   	cmpq	(%r10), %rdi
  0x0000028bc1191ae9:   	je	0x36
  0x0000028bc1191aef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1191af3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191afd:   	cmpq	(%r10), %rdi
  0x0000028bc1191b00:   	je	0x1f
  0x0000028bc1191b06:   	popq	%r10
  0x0000028bc1191b08:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1191b09:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1191b13:   	andq	$-0x10, %rsp
  0x0000028bc1191b17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191b21:   	callq	*%r10
  0x0000028bc1191b24:   	hlt
 ;; L_ok:
  0x0000028bc1191b25:   	popq	%r10
  0x0000028bc1191b27:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1191b28:   	movl	0xc(%rsi), %eax
  0x0000028bc1191b2b:   	shrl	$0x18, %eax
  0x0000028bc1191b2e:   	andl	$0xf, %eax
  0x0000028bc1191b31:   	cmpl	$0x6, %eax
  0x0000028bc1191b34:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1191b3a:   	movabsq	$0x28bdc210a90, %rcx;   {external_word}
  0x0000028bc1191b44:   	andq	$-0x10, %rsp
  0x0000028bc1191b48:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191b52:   	callq	*%r10
  0x0000028bc1191b55:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1191b56:   	movl	0x24(%rsi), %ebx
  0x0000028bc1191b59:   	pushq	%r10
  0x0000028bc1191b5b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191b65:   	cmpq	(%r10), %r12
  0x0000028bc1191b68:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191b6e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1191b78:   	andq	$-0x10, %rsp
  0x0000028bc1191b7c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191b86:   	callq	*%r10
  0x0000028bc1191b89:   	hlt
  0x0000028bc1191b8a:   	popq	%r10
  0x0000028bc1191b8c:   	shlq	$0x3, %rbx
  0x0000028bc1191b90:   	movq	0x10(%rbx), %rbx
  0x0000028bc1191b94:   	testq	%rbx, %rbx
  0x0000028bc1191b97:   	je	0x3
  0x0000028bc1191b9d:   	jmpq	*0x58(%rbx)
  0x0000028bc1191ba0:   	jmp	-0x52a685           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1191ba5:   	hlt
  0x0000028bc1191ba6:   	hlt
  0x0000028bc1191ba7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3101   80     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)I (native)
 total in heap  [0x0000028bc1191c10,0x0000028bc1192010] = 1024
 relocation     [0x0000028bc1191d70,0x0000028bc1191e00] = 144
 main code      [0x0000028bc1191e00,0x0000028bc119200e] = 526
 stub code      [0x0000028bc119200e,0x0000028bc1192010] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd846d448} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1191e00:   	testq	%r9, %r9
  0x0000028bc1191e03:   	je	0x41
  0x0000028bc1191e09:   	pushq	%rdi
  0x0000028bc1191e0a:   	pushq	%r10
  0x0000028bc1191e0c:   	movl	0x8(%r9), %edi
  0x0000028bc1191e10:   	movabsq	$0x800000000, %r10
  0x0000028bc1191e1a:   	addq	%r10, %rdi
  0x0000028bc1191e1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191e27:   	cmpq	(%r10), %rdi
  0x0000028bc1191e2a:   	je	0x36
  0x0000028bc1191e30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1191e34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191e3e:   	cmpq	(%r10), %rdi
  0x0000028bc1191e41:   	je	0x1f
  0x0000028bc1191e47:   	popq	%r10
  0x0000028bc1191e49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1191e4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1191e54:   	andq	$-0x10, %rsp
  0x0000028bc1191e58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191e62:   	callq	*%r10
  0x0000028bc1191e65:   	hlt
 ;; L_ok:
  0x0000028bc1191e66:   	popq	%r10
  0x0000028bc1191e68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1191e69:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1191e6c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1191e70:   	movabsq	$0x800000000, %r11
  0x0000028bc1191e7a:   	addq	%r11, %r10
  0x0000028bc1191e7d:   	movl	0x18(%r9), %r11d
  0x0000028bc1191e81:   	pushq	%r10
  0x0000028bc1191e83:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191e8d:   	cmpq	(%r10), %r12
  0x0000028bc1191e90:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191e96:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1191ea0:   	andq	$-0x10, %rsp
  0x0000028bc1191ea4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191eae:   	callq	*%r10
  0x0000028bc1191eb1:   	hlt
  0x0000028bc1191eb2:   	popq	%r10
  0x0000028bc1191eb4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1191eb8:   	testq	%r11, %r11
  0x0000028bc1191ebb:   	je	0x41
  0x0000028bc1191ec1:   	pushq	%rdi
  0x0000028bc1191ec2:   	pushq	%r10
  0x0000028bc1191ec4:   	movl	0x8(%r11), %edi
  0x0000028bc1191ec8:   	movabsq	$0x800000000, %r10
  0x0000028bc1191ed2:   	addq	%r10, %rdi
  0x0000028bc1191ed5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1191edf:   	cmpq	(%r10), %rdi
  0x0000028bc1191ee2:   	je	0x36
  0x0000028bc1191ee8:   	movq	0x40(%rdi), %rdi
  0x0000028bc1191eec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1191ef6:   	cmpq	(%r10), %rdi
  0x0000028bc1191ef9:   	je	0x1f
  0x0000028bc1191eff:   	popq	%r10
  0x0000028bc1191f01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1191f02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1191f0c:   	andq	$-0x10, %rsp
  0x0000028bc1191f10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191f1a:   	callq	*%r10
  0x0000028bc1191f1d:   	hlt
 ;; L_ok:
  0x0000028bc1191f1e:   	popq	%r10
  0x0000028bc1191f20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1191f21:   	movq	0x10(%r11), %r11
  0x0000028bc1191f25:   	cmpq	%r11, %r10
  0x0000028bc1191f28:   	je	0x61
  0x0000028bc1191f2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1191f32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1191f36:   	je	0x53
  0x0000028bc1191f3c:   	cmpl	$0x28, %eax
  0x0000028bc1191f3f:   	jne	0x2e
  0x0000028bc1191f45:   	movq	%r11, %rax
  0x0000028bc1191f48:   	pushq	%rcx
  0x0000028bc1191f49:   	pushq	%rdi
  0x0000028bc1191f4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1191f54:   	incl	(%rcx)
  0x0000028bc1191f56:   	movq	0x30(%r10), %rdi
  0x0000028bc1191f5a:   	movl	(%rdi), %ecx
  0x0000028bc1191f5c:   	addq	$0x8, %rdi
  0x0000028bc1191f60:   	testq	%rax, %rax
  0x0000028bc1191f63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1191f66:   	popq	%rdi
  0x0000028bc1191f67:   	popq	%rcx
  0x0000028bc1191f68:   	jne	0x9
  0x0000028bc1191f6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1191f6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1191f73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1191f7d:   	andq	$-0x10, %rsp
  0x0000028bc1191f81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191f8b:   	callq	*%r10
  0x0000028bc1191f8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1191f8f:   	movl	0xc(%r9), %eax
  0x0000028bc1191f93:   	shrl	$0x18, %eax
  0x0000028bc1191f96:   	andl	$0xf, %eax
  0x0000028bc1191f99:   	cmpl	$0x7, %eax
  0x0000028bc1191f9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1191fa2:   	movabsq	$0x28bdc210390, %rcx;   {external_word}
  0x0000028bc1191fac:   	andq	$-0x10, %rsp
  0x0000028bc1191fb0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191fba:   	callq	*%r10
  0x0000028bc1191fbd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1191fbe:   	movl	0x24(%r9), %ebx
  0x0000028bc1191fc2:   	pushq	%r10
  0x0000028bc1191fc4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191fce:   	cmpq	(%r10), %r12
  0x0000028bc1191fd1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191fd7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1191fe1:   	andq	$-0x10, %rsp
  0x0000028bc1191fe5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191fef:   	callq	*%r10
  0x0000028bc1191ff2:   	hlt
  0x0000028bc1191ff3:   	popq	%r10
  0x0000028bc1191ff5:   	shlq	$0x3, %rbx
  0x0000028bc1191ff9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1191ffd:   	testq	%rbx, %rbx
  0x0000028bc1192000:   	je	0x3
  0x0000028bc1192006:   	jmpq	*0x58(%rbx)
  0x0000028bc1192009:   	jmp	-0x52aaee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119200e:   	hlt
  0x0000028bc119200f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3110   80     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)I (native)
 total in heap  [0x0000028bc1191c10,0x0000028bc1192010] = 1024
 relocation     [0x0000028bc1191d70,0x0000028bc1191e00] = 144
 main code      [0x0000028bc1191e00,0x0000028bc119200e] = 526
 stub code      [0x0000028bc119200e,0x0000028bc1192010] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd846d448} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1191e00:   	testq	%r9, %r9
  0x0000028bc1191e03:   	je	0x41
  0x0000028bc1191e09:   	pushq	%rdi
  0x0000028bc1191e0a:   	pushq	%r10
  0x0000028bc1191e0c:   	movl	0x8(%r9), %edi
  0x0000028bc1191e10:   	movabsq	$0x800000000, %r10
  0x0000028bc1191e1a:   	addq	%r10, %rdi
  0x0000028bc1191e1d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191e27:   	cmpq	(%r10), %rdi
  0x0000028bc1191e2a:   	je	0x36
  0x0000028bc1191e30:   	movq	0x40(%rdi), %rdi
  0x0000028bc1191e34:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1191e3e:   	cmpq	(%r10), %rdi
  0x0000028bc1191e41:   	je	0x1f
  0x0000028bc1191e47:   	popq	%r10
  0x0000028bc1191e49:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1191e4a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1191e54:   	andq	$-0x10, %rsp
  0x0000028bc1191e58:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191e62:   	callq	*%r10
  0x0000028bc1191e65:   	hlt
 ;; L_ok:
  0x0000028bc1191e66:   	popq	%r10
  0x0000028bc1191e68:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1191e69:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1191e6c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1191e70:   	movabsq	$0x800000000, %r11
  0x0000028bc1191e7a:   	addq	%r11, %r10
  0x0000028bc1191e7d:   	movl	0x18(%r9), %r11d
  0x0000028bc1191e81:   	pushq	%r10
  0x0000028bc1191e83:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191e8d:   	cmpq	(%r10), %r12
  0x0000028bc1191e90:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191e96:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1191ea0:   	andq	$-0x10, %rsp
  0x0000028bc1191ea4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191eae:   	callq	*%r10
  0x0000028bc1191eb1:   	hlt
  0x0000028bc1191eb2:   	popq	%r10
  0x0000028bc1191eb4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1191eb8:   	testq	%r11, %r11
  0x0000028bc1191ebb:   	je	0x41
  0x0000028bc1191ec1:   	pushq	%rdi
  0x0000028bc1191ec2:   	pushq	%r10
  0x0000028bc1191ec4:   	movl	0x8(%r11), %edi
  0x0000028bc1191ec8:   	movabsq	$0x800000000, %r10
  0x0000028bc1191ed2:   	addq	%r10, %rdi
  0x0000028bc1191ed5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1191edf:   	cmpq	(%r10), %rdi
  0x0000028bc1191ee2:   	je	0x36
  0x0000028bc1191ee8:   	movq	0x40(%rdi), %rdi
  0x0000028bc1191eec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1191ef6:   	cmpq	(%r10), %rdi
  0x0000028bc1191ef9:   	je	0x1f
  0x0000028bc1191eff:   	popq	%r10
  0x0000028bc1191f01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1191f02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1191f0c:   	andq	$-0x10, %rsp
  0x0000028bc1191f10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191f1a:   	callq	*%r10
  0x0000028bc1191f1d:   	hlt
 ;; L_ok:
  0x0000028bc1191f1e:   	popq	%r10
  0x0000028bc1191f20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1191f21:   	movq	0x10(%r11), %r11
  0x0000028bc1191f25:   	cmpq	%r11, %r10
  0x0000028bc1191f28:   	je	0x61
  0x0000028bc1191f2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1191f32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1191f36:   	je	0x53
  0x0000028bc1191f3c:   	cmpl	$0x28, %eax
  0x0000028bc1191f3f:   	jne	0x2e
  0x0000028bc1191f45:   	movq	%r11, %rax
  0x0000028bc1191f48:   	pushq	%rcx
  0x0000028bc1191f49:   	pushq	%rdi
  0x0000028bc1191f4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1191f54:   	incl	(%rcx)
  0x0000028bc1191f56:   	movq	0x30(%r10), %rdi
  0x0000028bc1191f5a:   	movl	(%rdi), %ecx
  0x0000028bc1191f5c:   	addq	$0x8, %rdi
  0x0000028bc1191f60:   	testq	%rax, %rax
  0x0000028bc1191f63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1191f66:   	popq	%rdi
  0x0000028bc1191f67:   	popq	%rcx
  0x0000028bc1191f68:   	jne	0x9
  0x0000028bc1191f6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1191f6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1191f73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1191f7d:   	andq	$-0x10, %rsp
  0x0000028bc1191f81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191f8b:   	callq	*%r10
  0x0000028bc1191f8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1191f8f:   	movl	0xc(%r9), %eax
  0x0000028bc1191f93:   	shrl	$0x18, %eax
  0x0000028bc1191f96:   	andl	$0xf, %eax
  0x0000028bc1191f99:   	cmpl	$0x7, %eax
  0x0000028bc1191f9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1191fa2:   	movabsq	$0x28bdc210390, %rcx;   {external_word}
  0x0000028bc1191fac:   	andq	$-0x10, %rsp
  0x0000028bc1191fb0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191fba:   	callq	*%r10
  0x0000028bc1191fbd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1191fbe:   	movl	0x24(%r9), %ebx
  0x0000028bc1191fc2:   	pushq	%r10
  0x0000028bc1191fc4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1191fce:   	cmpq	(%r10), %r12
  0x0000028bc1191fd1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1191fd7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1191fe1:   	andq	$-0x10, %rsp
  0x0000028bc1191fe5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1191fef:   	callq	*%r10
  0x0000028bc1191ff2:   	hlt
  0x0000028bc1191ff3:   	popq	%r10
  0x0000028bc1191ff5:   	shlq	$0x3, %rbx
  0x0000028bc1191ff9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1191ffd:   	testq	%rbx, %rbx
  0x0000028bc1192000:   	je	0x3
  0x0000028bc1192006:   	jmpq	*0x58(%rbx)
  0x0000028bc1192009:   	jmp	-0x52aaee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119200e:   	hlt
  0x0000028bc119200f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3163   81     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLLLL)L (native)
 total in heap  [0x0000028bc1192090,0x0000028bc1192480] = 1008
 relocation     [0x0000028bc11921f0,0x0000028bc1192278] = 136
 main code      [0x0000028bc1192280,0x0000028bc119247c] = 508
 stub code      [0x0000028bc119247c,0x0000028bc1192480] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd848fc48} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1192280:   	testq	%rsi, %rsi
  0x0000028bc1192283:   	je	0x40
  0x0000028bc1192289:   	pushq	%rdi
  0x0000028bc119228a:   	pushq	%r10
  0x0000028bc119228c:   	movl	0x8(%rsi), %edi
  0x0000028bc119228f:   	movabsq	$0x800000000, %r10
  0x0000028bc1192299:   	addq	%r10, %rdi
  0x0000028bc119229c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11922a6:   	cmpq	(%r10), %rdi
  0x0000028bc11922a9:   	je	0x36
  0x0000028bc11922af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11922b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11922bd:   	cmpq	(%r10), %rdi
  0x0000028bc11922c0:   	je	0x1f
  0x0000028bc11922c6:   	popq	%r10
  0x0000028bc11922c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11922c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11922d3:   	andq	$-0x10, %rsp
  0x0000028bc11922d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11922e1:   	callq	*%r10
  0x0000028bc11922e4:   	hlt
 ;; L_ok:
  0x0000028bc11922e5:   	popq	%r10
  0x0000028bc11922e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11922e8:   	movl	0x8(%rdx), %r10d
  0x0000028bc11922ec:   	movabsq	$0x800000000, %r11
  0x0000028bc11922f6:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc11922f9:   	movl	0x18(%rsi), %r11d
  0x0000028bc11922fd:   	pushq	%r10
  0x0000028bc11922ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192309:   	cmpq	(%r10), %r12
  0x0000028bc119230c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119231c:   	andq	$-0x10, %rsp
  0x0000028bc1192320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119232a:   	callq	*%r10
  0x0000028bc119232d:   	hlt
  0x0000028bc119232e:   	popq	%r10
  0x0000028bc1192330:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1192334:   	testq	%r11, %r11
  0x0000028bc1192337:   	je	0x41
  0x0000028bc119233d:   	pushq	%rdi
  0x0000028bc119233e:   	pushq	%r10
  0x0000028bc1192340:   	movl	0x8(%r11), %edi
  0x0000028bc1192344:   	movabsq	$0x800000000, %r10
  0x0000028bc119234e:   	addq	%r10, %rdi
  0x0000028bc1192351:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119235b:   	cmpq	(%r10), %rdi
  0x0000028bc119235e:   	je	0x36
  0x0000028bc1192364:   	movq	0x40(%rdi), %rdi
  0x0000028bc1192368:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1192372:   	cmpq	(%r10), %rdi
  0x0000028bc1192375:   	je	0x1f
  0x0000028bc119237b:   	popq	%r10
  0x0000028bc119237d:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119237e:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1192388:   	andq	$-0x10, %rsp
  0x0000028bc119238c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192396:   	callq	*%r10
  0x0000028bc1192399:   	hlt
 ;; L_ok:
  0x0000028bc119239a:   	popq	%r10
  0x0000028bc119239c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119239d:   	movq	0x10(%r11), %r11
  0x0000028bc11923a1:   	cmpq	%r11, %r10
  0x0000028bc11923a4:   	je	0x61
  0x0000028bc11923aa:   	movl	0x1c(%r11), %eax
  0x0000028bc11923ae:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11923b2:   	je	0x53
  0x0000028bc11923b8:   	cmpl	$0x28, %eax
  0x0000028bc11923bb:   	jne	0x2e
  0x0000028bc11923c1:   	movq	%r11, %rax
  0x0000028bc11923c4:   	pushq	%rcx
  0x0000028bc11923c5:   	pushq	%rdi
  0x0000028bc11923c6:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11923d0:   	incl	(%rcx)
  0x0000028bc11923d2:   	movq	0x30(%r10), %rdi
  0x0000028bc11923d6:   	movl	(%rdi), %ecx
  0x0000028bc11923d8:   	addq	$0x8, %rdi
  0x0000028bc11923dc:   	testq	%rax, %rax
  0x0000028bc11923df:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11923e2:   	popq	%rdi
  0x0000028bc11923e3:   	popq	%rcx
  0x0000028bc11923e4:   	jne	0x9
  0x0000028bc11923e6:   	movq	%r11, 0x28(%r10)
  0x0000028bc11923ea:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11923ef:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11923f9:   	andq	$-0x10, %rsp
  0x0000028bc11923fd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192407:   	callq	*%r10
  0x0000028bc119240a:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119240b:   	movl	0xc(%rsi), %eax
  0x0000028bc119240e:   	shrl	$0x18, %eax
  0x0000028bc1192411:   	andl	$0xf, %eax
  0x0000028bc1192414:   	cmpl	$0x5, %eax
  0x0000028bc1192417:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc119241d:   	movabsq	$0x28bdc210e90, %rcx;   {external_word}
  0x0000028bc1192427:   	andq	$-0x10, %rsp
  0x0000028bc119242b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192435:   	callq	*%r10
  0x0000028bc1192438:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1192439:   	movq	0x10(%rsi), %r11
  0x0000028bc119243d:   	cmpl	$0x0, %r11d
  0x0000028bc1192441:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1192447:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1192451:   	andq	$-0x10, %rsp
  0x0000028bc1192455:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119245f:   	callq	*%r10
  0x0000028bc1192462:   	hlt
 ;; L_index_ok:
  0x0000028bc1192463:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc119246b:   	testq	%rbx, %rbx
  0x0000028bc119246e:   	je	0x3
  0x0000028bc1192474:   	jmpq	*0x58(%rbx)
  0x0000028bc1192477:   	jmp	-0x52af5c           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119247c:   	hlt
  0x0000028bc119247d:   	hlt
  0x0000028bc119247e:   	hlt
  0x0000028bc119247f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3168   81     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLLLL)L (native)
 total in heap  [0x0000028bc1192090,0x0000028bc1192480] = 1008
 relocation     [0x0000028bc11921f0,0x0000028bc1192278] = 136
 main code      [0x0000028bc1192280,0x0000028bc119247c] = 508
 stub code      [0x0000028bc119247c,0x0000028bc1192480] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd848fc48} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1192280:   	testq	%rsi, %rsi
  0x0000028bc1192283:   	je	0x40
  0x0000028bc1192289:   	pushq	%rdi
  0x0000028bc119228a:   	pushq	%r10
  0x0000028bc119228c:   	movl	0x8(%rsi), %edi
  0x0000028bc119228f:   	movabsq	$0x800000000, %r10
  0x0000028bc1192299:   	addq	%r10, %rdi
  0x0000028bc119229c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11922a6:   	cmpq	(%r10), %rdi
  0x0000028bc11922a9:   	je	0x36
  0x0000028bc11922af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11922b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11922bd:   	cmpq	(%r10), %rdi
  0x0000028bc11922c0:   	je	0x1f
  0x0000028bc11922c6:   	popq	%r10
  0x0000028bc11922c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11922c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11922d3:   	andq	$-0x10, %rsp
  0x0000028bc11922d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11922e1:   	callq	*%r10
  0x0000028bc11922e4:   	hlt
 ;; L_ok:
  0x0000028bc11922e5:   	popq	%r10
  0x0000028bc11922e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11922e8:   	movl	0x8(%rdx), %r10d
  0x0000028bc11922ec:   	movabsq	$0x800000000, %r11
  0x0000028bc11922f6:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc11922f9:   	movl	0x18(%rsi), %r11d
  0x0000028bc11922fd:   	pushq	%r10
  0x0000028bc11922ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192309:   	cmpq	(%r10), %r12
  0x0000028bc119230c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119231c:   	andq	$-0x10, %rsp
  0x0000028bc1192320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119232a:   	callq	*%r10
  0x0000028bc119232d:   	hlt
  0x0000028bc119232e:   	popq	%r10
  0x0000028bc1192330:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1192334:   	testq	%r11, %r11
  0x0000028bc1192337:   	je	0x41
  0x0000028bc119233d:   	pushq	%rdi
  0x0000028bc119233e:   	pushq	%r10
  0x0000028bc1192340:   	movl	0x8(%r11), %edi
  0x0000028bc1192344:   	movabsq	$0x800000000, %r10
  0x0000028bc119234e:   	addq	%r10, %rdi
  0x0000028bc1192351:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119235b:   	cmpq	(%r10), %rdi
  0x0000028bc119235e:   	je	0x36
  0x0000028bc1192364:   	movq	0x40(%rdi), %rdi
  0x0000028bc1192368:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1192372:   	cmpq	(%r10), %rdi
  0x0000028bc1192375:   	je	0x1f
  0x0000028bc119237b:   	popq	%r10
  0x0000028bc119237d:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119237e:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1192388:   	andq	$-0x10, %rsp
  0x0000028bc119238c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192396:   	callq	*%r10
  0x0000028bc1192399:   	hlt
 ;; L_ok:
  0x0000028bc119239a:   	popq	%r10
  0x0000028bc119239c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119239d:   	movq	0x10(%r11), %r11
  0x0000028bc11923a1:   	cmpq	%r11, %r10
  0x0000028bc11923a4:   	je	0x61
  0x0000028bc11923aa:   	movl	0x1c(%r11), %eax
  0x0000028bc11923ae:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11923b2:   	je	0x53
  0x0000028bc11923b8:   	cmpl	$0x28, %eax
  0x0000028bc11923bb:   	jne	0x2e
  0x0000028bc11923c1:   	movq	%r11, %rax
  0x0000028bc11923c4:   	pushq	%rcx
  0x0000028bc11923c5:   	pushq	%rdi
  0x0000028bc11923c6:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11923d0:   	incl	(%rcx)
  0x0000028bc11923d2:   	movq	0x30(%r10), %rdi
  0x0000028bc11923d6:   	movl	(%rdi), %ecx
  0x0000028bc11923d8:   	addq	$0x8, %rdi
  0x0000028bc11923dc:   	testq	%rax, %rax
  0x0000028bc11923df:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11923e2:   	popq	%rdi
  0x0000028bc11923e3:   	popq	%rcx
  0x0000028bc11923e4:   	jne	0x9
  0x0000028bc11923e6:   	movq	%r11, 0x28(%r10)
  0x0000028bc11923ea:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11923ef:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11923f9:   	andq	$-0x10, %rsp
  0x0000028bc11923fd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192407:   	callq	*%r10
  0x0000028bc119240a:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119240b:   	movl	0xc(%rsi), %eax
  0x0000028bc119240e:   	shrl	$0x18, %eax
  0x0000028bc1192411:   	andl	$0xf, %eax
  0x0000028bc1192414:   	cmpl	$0x5, %eax
  0x0000028bc1192417:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc119241d:   	movabsq	$0x28bdc210e90, %rcx;   {external_word}
  0x0000028bc1192427:   	andq	$-0x10, %rsp
  0x0000028bc119242b:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192435:   	callq	*%r10
  0x0000028bc1192438:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1192439:   	movq	0x10(%rsi), %r11
  0x0000028bc119243d:   	cmpl	$0x0, %r11d
  0x0000028bc1192441:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1192447:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1192451:   	andq	$-0x10, %rsp
  0x0000028bc1192455:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119245f:   	callq	*%r10
  0x0000028bc1192462:   	hlt
 ;; L_index_ok:
  0x0000028bc1192463:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc119246b:   	testq	%rbx, %rbx
  0x0000028bc119246e:   	je	0x3
  0x0000028bc1192474:   	jmpq	*0x58(%rbx)
  0x0000028bc1192477:   	jmp	-0x52af5c           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119247c:   	hlt
  0x0000028bc119247d:   	hlt
  0x0000028bc119247e:   	hlt
  0x0000028bc119247f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3207   82     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLILL)L (native)
 total in heap  [0x0000028bc1192490,0x0000028bc1192730] = 672
 relocation     [0x0000028bc11925f0,0x0000028bc1192638] = 72
 main code      [0x0000028bc1192640,0x0000028bc119272a] = 234
 stub code      [0x0000028bc119272a,0x0000028bc1192730] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8494070} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi       = int
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc1192640:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1192645:   	testq	%rbx, %rbx
  0x0000028bc1192648:   	je	0x40
  0x0000028bc119264e:   	pushq	%rdi
  0x0000028bc119264f:   	pushq	%r10
  0x0000028bc1192651:   	movl	0x8(%rbx), %edi
  0x0000028bc1192654:   	movabsq	$0x800000000, %r10
  0x0000028bc119265e:   	addq	%r10, %rdi
  0x0000028bc1192661:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119266b:   	cmpq	(%r10), %rdi
  0x0000028bc119266e:   	je	0x36
  0x0000028bc1192674:   	movq	0x40(%rdi), %rdi
  0x0000028bc1192678:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1192682:   	cmpq	(%r10), %rdi
  0x0000028bc1192685:   	je	0x1f
  0x0000028bc119268b:   	popq	%r10
  0x0000028bc119268d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119268e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1192698:   	andq	$-0x10, %rsp
  0x0000028bc119269c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11926a6:   	callq	*%r10
  0x0000028bc11926a9:   	hlt
 ;; L_ok:
  0x0000028bc11926aa:   	popq	%r10
  0x0000028bc11926ac:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11926ad:   	movl	0xc(%rbx), %eax
  0x0000028bc11926b0:   	shrl	$0x18, %eax
  0x0000028bc11926b3:   	andl	$0xf, %eax
  0x0000028bc11926b6:   	cmpl	$0x6, %eax
  0x0000028bc11926b9:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11926bf:   	movabsq	$0x28bdc210f10, %rcx;   {external_word}
  0x0000028bc11926c9:   	andq	$-0x10, %rsp
  0x0000028bc11926cd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11926d7:   	callq	*%r10
  0x0000028bc11926da:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11926db:   	movl	0x24(%rbx), %ebx
  0x0000028bc11926de:   	pushq	%r10
  0x0000028bc11926e0:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11926ea:   	cmpq	(%r10), %r12
  0x0000028bc11926ed:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11926f3:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11926fd:   	andq	$-0x10, %rsp
  0x0000028bc1192701:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119270b:   	callq	*%r10
  0x0000028bc119270e:   	hlt
  0x0000028bc119270f:   	popq	%r10
  0x0000028bc1192711:   	shlq	$0x3, %rbx
  0x0000028bc1192715:   	movq	0x10(%rbx), %rbx
  0x0000028bc1192719:   	testq	%rbx, %rbx
  0x0000028bc119271c:   	je	0x3
  0x0000028bc1192722:   	jmpq	*0x58(%rbx)
  0x0000028bc1192725:   	jmp	-0x52b20a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119272a:   	hlt
  0x0000028bc119272b:   	hlt
  0x0000028bc119272c:   	hlt
  0x0000028bc119272d:   	hlt
  0x0000028bc119272e:   	hlt
  0x0000028bc119272f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3213   82     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLILL)L (native)
 total in heap  [0x0000028bc1192490,0x0000028bc1192730] = 672
 relocation     [0x0000028bc11925f0,0x0000028bc1192638] = 72
 main code      [0x0000028bc1192640,0x0000028bc119272a] = 234
 stub code      [0x0000028bc119272a,0x0000028bc1192730] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8494070} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi       = int
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc1192640:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1192645:   	testq	%rbx, %rbx
  0x0000028bc1192648:   	je	0x40
  0x0000028bc119264e:   	pushq	%rdi
  0x0000028bc119264f:   	pushq	%r10
  0x0000028bc1192651:   	movl	0x8(%rbx), %edi
  0x0000028bc1192654:   	movabsq	$0x800000000, %r10
  0x0000028bc119265e:   	addq	%r10, %rdi
  0x0000028bc1192661:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119266b:   	cmpq	(%r10), %rdi
  0x0000028bc119266e:   	je	0x36
  0x0000028bc1192674:   	movq	0x40(%rdi), %rdi
  0x0000028bc1192678:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1192682:   	cmpq	(%r10), %rdi
  0x0000028bc1192685:   	je	0x1f
  0x0000028bc119268b:   	popq	%r10
  0x0000028bc119268d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119268e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1192698:   	andq	$-0x10, %rsp
  0x0000028bc119269c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11926a6:   	callq	*%r10
  0x0000028bc11926a9:   	hlt
 ;; L_ok:
  0x0000028bc11926aa:   	popq	%r10
  0x0000028bc11926ac:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11926ad:   	movl	0xc(%rbx), %eax
  0x0000028bc11926b0:   	shrl	$0x18, %eax
  0x0000028bc11926b3:   	andl	$0xf, %eax
  0x0000028bc11926b6:   	cmpl	$0x6, %eax
  0x0000028bc11926b9:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11926bf:   	movabsq	$0x28bdc210f10, %rcx;   {external_word}
  0x0000028bc11926c9:   	andq	$-0x10, %rsp
  0x0000028bc11926cd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11926d7:   	callq	*%r10
  0x0000028bc11926da:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11926db:   	movl	0x24(%rbx), %ebx
  0x0000028bc11926de:   	pushq	%r10
  0x0000028bc11926e0:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11926ea:   	cmpq	(%r10), %r12
  0x0000028bc11926ed:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11926f3:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11926fd:   	andq	$-0x10, %rsp
  0x0000028bc1192701:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119270b:   	callq	*%r10
  0x0000028bc119270e:   	hlt
  0x0000028bc119270f:   	popq	%r10
  0x0000028bc1192711:   	shlq	$0x3, %rbx
  0x0000028bc1192715:   	movq	0x10(%rbx), %rbx
  0x0000028bc1192719:   	testq	%rbx, %rbx
  0x0000028bc119271c:   	je	0x3
  0x0000028bc1192722:   	jmpq	*0x58(%rbx)
  0x0000028bc1192725:   	jmp	-0x52b20a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119272a:   	hlt
  0x0000028bc119272b:   	hlt
  0x0000028bc119272c:   	hlt
  0x0000028bc119272d:   	hlt
  0x0000028bc119272e:   	hlt
  0x0000028bc119272f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3225   83     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLIL)V (native)
 total in heap  [0x0000028bc1192790,0x0000028bc1192b90] = 1024
 relocation     [0x0000028bc11928f0,0x0000028bc1192980] = 144
 main code      [0x0000028bc1192980,0x0000028bc1192b90] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8494ef8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx       = int
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc1192980:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1192985:   	testq	%rbx, %rbx
  0x0000028bc1192988:   	je	0x40
  0x0000028bc119298e:   	pushq	%rdi
  0x0000028bc119298f:   	pushq	%r10
  0x0000028bc1192991:   	movl	0x8(%rbx), %edi
  0x0000028bc1192994:   	movabsq	$0x800000000, %r10
  0x0000028bc119299e:   	addq	%r10, %rdi
  0x0000028bc11929a1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11929ab:   	cmpq	(%r10), %rdi
  0x0000028bc11929ae:   	je	0x36
  0x0000028bc11929b4:   	movq	0x40(%rdi), %rdi
  0x0000028bc11929b8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11929c2:   	cmpq	(%r10), %rdi
  0x0000028bc11929c5:   	je	0x1f
  0x0000028bc11929cb:   	popq	%r10
  0x0000028bc11929cd:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11929ce:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11929d8:   	andq	$-0x10, %rsp
  0x0000028bc11929dc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11929e6:   	callq	*%r10
  0x0000028bc11929e9:   	hlt
 ;; L_ok:
  0x0000028bc11929ea:   	popq	%r10
  0x0000028bc11929ec:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11929ed:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11929f0:   	movl	0x8(%rdx), %r10d
  0x0000028bc11929f4:   	movabsq	$0x800000000, %r11
  0x0000028bc11929fe:   	addq	%r11, %r10
  0x0000028bc1192a01:   	movl	0x18(%rbx), %r11d
  0x0000028bc1192a05:   	pushq	%r10
  0x0000028bc1192a07:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192a11:   	cmpq	(%r10), %r12
  0x0000028bc1192a14:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192a1a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192a24:   	andq	$-0x10, %rsp
  0x0000028bc1192a28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192a32:   	callq	*%r10
  0x0000028bc1192a35:   	hlt
  0x0000028bc1192a36:   	popq	%r10
  0x0000028bc1192a38:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1192a3c:   	testq	%r11, %r11
  0x0000028bc1192a3f:   	je	0x41
  0x0000028bc1192a45:   	pushq	%rdi
  0x0000028bc1192a46:   	pushq	%r10
  0x0000028bc1192a48:   	movl	0x8(%r11), %edi
  0x0000028bc1192a4c:   	movabsq	$0x800000000, %r10
  0x0000028bc1192a56:   	addq	%r10, %rdi
  0x0000028bc1192a59:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1192a63:   	cmpq	(%r10), %rdi
  0x0000028bc1192a66:   	je	0x36
  0x0000028bc1192a6c:   	movq	0x40(%rdi), %rdi
  0x0000028bc1192a70:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1192a7a:   	cmpq	(%r10), %rdi
  0x0000028bc1192a7d:   	je	0x1f
  0x0000028bc1192a83:   	popq	%r10
  0x0000028bc1192a85:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1192a86:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1192a90:   	andq	$-0x10, %rsp
  0x0000028bc1192a94:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192a9e:   	callq	*%r10
  0x0000028bc1192aa1:   	hlt
 ;; L_ok:
  0x0000028bc1192aa2:   	popq	%r10
  0x0000028bc1192aa4:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1192aa5:   	movq	0x10(%r11), %r11
  0x0000028bc1192aa9:   	cmpq	%r11, %r10
  0x0000028bc1192aac:   	je	0x61
  0x0000028bc1192ab2:   	movl	0x1c(%r11), %eax
  0x0000028bc1192ab6:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1192aba:   	je	0x53
  0x0000028bc1192ac0:   	cmpl	$0x28, %eax
  0x0000028bc1192ac3:   	jne	0x2e
  0x0000028bc1192ac9:   	movq	%r11, %rax
  0x0000028bc1192acc:   	pushq	%rcx
  0x0000028bc1192acd:   	pushq	%rdi
  0x0000028bc1192ace:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1192ad8:   	incl	(%rcx)
  0x0000028bc1192ada:   	movq	0x30(%r10), %rdi
  0x0000028bc1192ade:   	movl	(%rdi), %ecx
  0x0000028bc1192ae0:   	addq	$0x8, %rdi
  0x0000028bc1192ae4:   	testq	%rax, %rax
  0x0000028bc1192ae7:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1192aea:   	popq	%rdi
  0x0000028bc1192aeb:   	popq	%rcx
  0x0000028bc1192aec:   	jne	0x9
  0x0000028bc1192aee:   	movq	%r11, 0x28(%r10)
  0x0000028bc1192af2:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1192af7:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1192b01:   	andq	$-0x10, %rsp
  0x0000028bc1192b05:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192b0f:   	callq	*%r10
  0x0000028bc1192b12:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1192b13:   	movl	0xc(%rbx), %eax
  0x0000028bc1192b16:   	shrl	$0x18, %eax
  0x0000028bc1192b19:   	andl	$0xf, %eax
  0x0000028bc1192b1c:   	cmpl	$0x7, %eax
  0x0000028bc1192b1f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1192b25:   	movabsq	$0x28bdc0ce130, %rcx;   {external_word}
  0x0000028bc1192b2f:   	andq	$-0x10, %rsp
  0x0000028bc1192b33:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192b3d:   	callq	*%r10
  0x0000028bc1192b40:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1192b41:   	movl	0x24(%rbx), %ebx
  0x0000028bc1192b44:   	pushq	%r10
  0x0000028bc1192b46:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192b50:   	cmpq	(%r10), %r12
  0x0000028bc1192b53:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192b59:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192b63:   	andq	$-0x10, %rsp
  0x0000028bc1192b67:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192b71:   	callq	*%r10
  0x0000028bc1192b74:   	hlt
  0x0000028bc1192b75:   	popq	%r10
  0x0000028bc1192b77:   	shlq	$0x3, %rbx
  0x0000028bc1192b7b:   	movq	0x10(%rbx), %rbx
  0x0000028bc1192b7f:   	testq	%rbx, %rbx
  0x0000028bc1192b82:   	je	0x3
  0x0000028bc1192b88:   	jmpq	*0x58(%rbx)
  0x0000028bc1192b8b:   	jmp	-0x52b670           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3237   83     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLIL)V (native)
 total in heap  [0x0000028bc1192790,0x0000028bc1192b90] = 1024
 relocation     [0x0000028bc11928f0,0x0000028bc1192980] = 144
 main code      [0x0000028bc1192980,0x0000028bc1192b90] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8494ef8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx       = int
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc1192980:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1192985:   	testq	%rbx, %rbx
  0x0000028bc1192988:   	je	0x40
  0x0000028bc119298e:   	pushq	%rdi
  0x0000028bc119298f:   	pushq	%r10
  0x0000028bc1192991:   	movl	0x8(%rbx), %edi
  0x0000028bc1192994:   	movabsq	$0x800000000, %r10
  0x0000028bc119299e:   	addq	%r10, %rdi
  0x0000028bc11929a1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11929ab:   	cmpq	(%r10), %rdi
  0x0000028bc11929ae:   	je	0x36
  0x0000028bc11929b4:   	movq	0x40(%rdi), %rdi
  0x0000028bc11929b8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11929c2:   	cmpq	(%r10), %rdi
  0x0000028bc11929c5:   	je	0x1f
  0x0000028bc11929cb:   	popq	%r10
  0x0000028bc11929cd:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11929ce:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11929d8:   	andq	$-0x10, %rsp
  0x0000028bc11929dc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11929e6:   	callq	*%r10
  0x0000028bc11929e9:   	hlt
 ;; L_ok:
  0x0000028bc11929ea:   	popq	%r10
  0x0000028bc11929ec:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11929ed:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11929f0:   	movl	0x8(%rdx), %r10d
  0x0000028bc11929f4:   	movabsq	$0x800000000, %r11
  0x0000028bc11929fe:   	addq	%r11, %r10
  0x0000028bc1192a01:   	movl	0x18(%rbx), %r11d
  0x0000028bc1192a05:   	pushq	%r10
  0x0000028bc1192a07:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192a11:   	cmpq	(%r10), %r12
  0x0000028bc1192a14:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192a1a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192a24:   	andq	$-0x10, %rsp
  0x0000028bc1192a28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192a32:   	callq	*%r10
  0x0000028bc1192a35:   	hlt
  0x0000028bc1192a36:   	popq	%r10
  0x0000028bc1192a38:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1192a3c:   	testq	%r11, %r11
  0x0000028bc1192a3f:   	je	0x41
  0x0000028bc1192a45:   	pushq	%rdi
  0x0000028bc1192a46:   	pushq	%r10
  0x0000028bc1192a48:   	movl	0x8(%r11), %edi
  0x0000028bc1192a4c:   	movabsq	$0x800000000, %r10
  0x0000028bc1192a56:   	addq	%r10, %rdi
  0x0000028bc1192a59:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1192a63:   	cmpq	(%r10), %rdi
  0x0000028bc1192a66:   	je	0x36
  0x0000028bc1192a6c:   	movq	0x40(%rdi), %rdi
  0x0000028bc1192a70:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1192a7a:   	cmpq	(%r10), %rdi
  0x0000028bc1192a7d:   	je	0x1f
  0x0000028bc1192a83:   	popq	%r10
  0x0000028bc1192a85:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1192a86:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1192a90:   	andq	$-0x10, %rsp
  0x0000028bc1192a94:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192a9e:   	callq	*%r10
  0x0000028bc1192aa1:   	hlt
 ;; L_ok:
  0x0000028bc1192aa2:   	popq	%r10
  0x0000028bc1192aa4:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1192aa5:   	movq	0x10(%r11), %r11
  0x0000028bc1192aa9:   	cmpq	%r11, %r10
  0x0000028bc1192aac:   	je	0x61
  0x0000028bc1192ab2:   	movl	0x1c(%r11), %eax
  0x0000028bc1192ab6:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1192aba:   	je	0x53
  0x0000028bc1192ac0:   	cmpl	$0x28, %eax
  0x0000028bc1192ac3:   	jne	0x2e
  0x0000028bc1192ac9:   	movq	%r11, %rax
  0x0000028bc1192acc:   	pushq	%rcx
  0x0000028bc1192acd:   	pushq	%rdi
  0x0000028bc1192ace:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1192ad8:   	incl	(%rcx)
  0x0000028bc1192ada:   	movq	0x30(%r10), %rdi
  0x0000028bc1192ade:   	movl	(%rdi), %ecx
  0x0000028bc1192ae0:   	addq	$0x8, %rdi
  0x0000028bc1192ae4:   	testq	%rax, %rax
  0x0000028bc1192ae7:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1192aea:   	popq	%rdi
  0x0000028bc1192aeb:   	popq	%rcx
  0x0000028bc1192aec:   	jne	0x9
  0x0000028bc1192aee:   	movq	%r11, 0x28(%r10)
  0x0000028bc1192af2:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1192af7:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1192b01:   	andq	$-0x10, %rsp
  0x0000028bc1192b05:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192b0f:   	callq	*%r10
  0x0000028bc1192b12:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1192b13:   	movl	0xc(%rbx), %eax
  0x0000028bc1192b16:   	shrl	$0x18, %eax
  0x0000028bc1192b19:   	andl	$0xf, %eax
  0x0000028bc1192b1c:   	cmpl	$0x7, %eax
  0x0000028bc1192b1f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1192b25:   	movabsq	$0x28bdc0ce130, %rcx;   {external_word}
  0x0000028bc1192b2f:   	andq	$-0x10, %rsp
  0x0000028bc1192b33:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192b3d:   	callq	*%r10
  0x0000028bc1192b40:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1192b41:   	movl	0x24(%rbx), %ebx
  0x0000028bc1192b44:   	pushq	%r10
  0x0000028bc1192b46:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192b50:   	cmpq	(%r10), %r12
  0x0000028bc1192b53:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192b59:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192b63:   	andq	$-0x10, %rsp
  0x0000028bc1192b67:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192b71:   	callq	*%r10
  0x0000028bc1192b74:   	hlt
  0x0000028bc1192b75:   	popq	%r10
  0x0000028bc1192b77:   	shlq	$0x3, %rbx
  0x0000028bc1192b7b:   	movq	0x10(%rbx), %rbx
  0x0000028bc1192b7f:   	testq	%rbx, %rbx
  0x0000028bc1192b82:   	je	0x3
  0x0000028bc1192b88:   	jmpq	*0x58(%rbx)
  0x0000028bc1192b8b:   	jmp	-0x52b670           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3251   84     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLI)L (native)
 total in heap  [0x0000028bc1192c10,0x0000028bc1192e88] = 632
 relocation     [0x0000028bc1192d70,0x0000028bc1192db8] = 72
 main code      [0x0000028bc1192dc0,0x0000028bc1192e83] = 195
 stub code      [0x0000028bc1192e83,0x0000028bc1192e88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8495248} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx       = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1192dc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc1192dc3:   	pushq	%r10
  0x0000028bc1192dc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192dcf:   	cmpq	(%r10), %r12
  0x0000028bc1192dd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192dd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192de2:   	andq	$-0x10, %rsp
  0x0000028bc1192de6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192df0:   	callq	*%r10
  0x0000028bc1192df3:   	hlt
  0x0000028bc1192df4:   	popq	%r10
  0x0000028bc1192df6:   	shlq	$0x3, %rbx
  0x0000028bc1192dfa:   	movl	0x28(%rbx), %ebx
  0x0000028bc1192dfd:   	pushq	%r10
  0x0000028bc1192dff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192e09:   	cmpq	(%r10), %r12
  0x0000028bc1192e0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192e12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192e1c:   	andq	$-0x10, %rsp
  0x0000028bc1192e20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192e2a:   	callq	*%r10
  0x0000028bc1192e2d:   	hlt
  0x0000028bc1192e2e:   	popq	%r10
  0x0000028bc1192e30:   	shlq	$0x3, %rbx
  0x0000028bc1192e34:   	movl	0x24(%rbx), %ebx
  0x0000028bc1192e37:   	pushq	%r10
  0x0000028bc1192e39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192e43:   	cmpq	(%r10), %r12
  0x0000028bc1192e46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192e4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192e56:   	andq	$-0x10, %rsp
  0x0000028bc1192e5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192e64:   	callq	*%r10
  0x0000028bc1192e67:   	hlt
  0x0000028bc1192e68:   	popq	%r10
  0x0000028bc1192e6a:   	shlq	$0x3, %rbx
  0x0000028bc1192e6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1192e72:   	testq	%rbx, %rbx
  0x0000028bc1192e75:   	je	0x3
  0x0000028bc1192e7b:   	jmpq	*0x58(%rbx)
  0x0000028bc1192e7e:   	jmp	-0x52b963           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1192e83:   	hlt
  0x0000028bc1192e84:   	hlt
  0x0000028bc1192e85:   	hlt
  0x0000028bc1192e86:   	hlt
  0x0000028bc1192e87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3256   84     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLI)L (native)
 total in heap  [0x0000028bc1192c10,0x0000028bc1192e88] = 632
 relocation     [0x0000028bc1192d70,0x0000028bc1192db8] = 72
 main code      [0x0000028bc1192dc0,0x0000028bc1192e83] = 195
 stub code      [0x0000028bc1192e83,0x0000028bc1192e88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8495248} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx       = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1192dc0:   	movl	0x14(%rdx), %ebx
  0x0000028bc1192dc3:   	pushq	%r10
  0x0000028bc1192dc5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192dcf:   	cmpq	(%r10), %r12
  0x0000028bc1192dd2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192dd8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192de2:   	andq	$-0x10, %rsp
  0x0000028bc1192de6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192df0:   	callq	*%r10
  0x0000028bc1192df3:   	hlt
  0x0000028bc1192df4:   	popq	%r10
  0x0000028bc1192df6:   	shlq	$0x3, %rbx
  0x0000028bc1192dfa:   	movl	0x28(%rbx), %ebx
  0x0000028bc1192dfd:   	pushq	%r10
  0x0000028bc1192dff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192e09:   	cmpq	(%r10), %r12
  0x0000028bc1192e0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192e12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192e1c:   	andq	$-0x10, %rsp
  0x0000028bc1192e20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192e2a:   	callq	*%r10
  0x0000028bc1192e2d:   	hlt
  0x0000028bc1192e2e:   	popq	%r10
  0x0000028bc1192e30:   	shlq	$0x3, %rbx
  0x0000028bc1192e34:   	movl	0x24(%rbx), %ebx
  0x0000028bc1192e37:   	pushq	%r10
  0x0000028bc1192e39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1192e43:   	cmpq	(%r10), %r12
  0x0000028bc1192e46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1192e4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1192e56:   	andq	$-0x10, %rsp
  0x0000028bc1192e5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1192e64:   	callq	*%r10
  0x0000028bc1192e67:   	hlt
  0x0000028bc1192e68:   	popq	%r10
  0x0000028bc1192e6a:   	shlq	$0x3, %rbx
  0x0000028bc1192e6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1192e72:   	testq	%rbx, %rbx
  0x0000028bc1192e75:   	je	0x3
  0x0000028bc1192e7b:   	jmpq	*0x58(%rbx)
  0x0000028bc1192e7e:   	jmp	-0x52b963           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1192e83:   	hlt
  0x0000028bc1192e84:   	hlt
  0x0000028bc1192e85:   	hlt
  0x0000028bc1192e86:   	hlt
  0x0000028bc1192e87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3261   85     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLIL)L (native)
 total in heap  [0x0000028bc1192f10,0x0000028bc1193310] = 1024
 relocation     [0x0000028bc1193070,0x0000028bc1193100] = 144
 main code      [0x0000028bc1193100,0x0000028bc1193310] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8495380} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx       = int
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc1193100:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1193105:   	testq	%rbx, %rbx
  0x0000028bc1193108:   	je	0x40
  0x0000028bc119310e:   	pushq	%rdi
  0x0000028bc119310f:   	pushq	%r10
  0x0000028bc1193111:   	movl	0x8(%rbx), %edi
  0x0000028bc1193114:   	movabsq	$0x800000000, %r10
  0x0000028bc119311e:   	addq	%r10, %rdi
  0x0000028bc1193121:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119312b:   	cmpq	(%r10), %rdi
  0x0000028bc119312e:   	je	0x36
  0x0000028bc1193134:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193138:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193142:   	cmpq	(%r10), %rdi
  0x0000028bc1193145:   	je	0x1f
  0x0000028bc119314b:   	popq	%r10
  0x0000028bc119314d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119314e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1193158:   	andq	$-0x10, %rsp
  0x0000028bc119315c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193166:   	callq	*%r10
  0x0000028bc1193169:   	hlt
 ;; L_ok:
  0x0000028bc119316a:   	popq	%r10
  0x0000028bc119316c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119316d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1193170:   	movl	0x8(%rdx), %r10d
  0x0000028bc1193174:   	movabsq	$0x800000000, %r11
  0x0000028bc119317e:   	addq	%r11, %r10
  0x0000028bc1193181:   	movl	0x18(%rbx), %r11d
  0x0000028bc1193185:   	pushq	%r10
  0x0000028bc1193187:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193191:   	cmpq	(%r10), %r12
  0x0000028bc1193194:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119319a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11931a4:   	andq	$-0x10, %rsp
  0x0000028bc11931a8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11931b2:   	callq	*%r10
  0x0000028bc11931b5:   	hlt
  0x0000028bc11931b6:   	popq	%r10
  0x0000028bc11931b8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11931bc:   	testq	%r11, %r11
  0x0000028bc11931bf:   	je	0x41
  0x0000028bc11931c5:   	pushq	%rdi
  0x0000028bc11931c6:   	pushq	%r10
  0x0000028bc11931c8:   	movl	0x8(%r11), %edi
  0x0000028bc11931cc:   	movabsq	$0x800000000, %r10
  0x0000028bc11931d6:   	addq	%r10, %rdi
  0x0000028bc11931d9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11931e3:   	cmpq	(%r10), %rdi
  0x0000028bc11931e6:   	je	0x36
  0x0000028bc11931ec:   	movq	0x40(%rdi), %rdi
  0x0000028bc11931f0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11931fa:   	cmpq	(%r10), %rdi
  0x0000028bc11931fd:   	je	0x1f
  0x0000028bc1193203:   	popq	%r10
  0x0000028bc1193205:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1193206:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1193210:   	andq	$-0x10, %rsp
  0x0000028bc1193214:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119321e:   	callq	*%r10
  0x0000028bc1193221:   	hlt
 ;; L_ok:
  0x0000028bc1193222:   	popq	%r10
  0x0000028bc1193224:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1193225:   	movq	0x10(%r11), %r11
  0x0000028bc1193229:   	cmpq	%r11, %r10
  0x0000028bc119322c:   	je	0x61
  0x0000028bc1193232:   	movl	0x1c(%r11), %eax
  0x0000028bc1193236:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119323a:   	je	0x53
  0x0000028bc1193240:   	cmpl	$0x28, %eax
  0x0000028bc1193243:   	jne	0x2e
  0x0000028bc1193249:   	movq	%r11, %rax
  0x0000028bc119324c:   	pushq	%rcx
  0x0000028bc119324d:   	pushq	%rdi
  0x0000028bc119324e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1193258:   	incl	(%rcx)
  0x0000028bc119325a:   	movq	0x30(%r10), %rdi
  0x0000028bc119325e:   	movl	(%rdi), %ecx
  0x0000028bc1193260:   	addq	$0x8, %rdi
  0x0000028bc1193264:   	testq	%rax, %rax
  0x0000028bc1193267:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119326a:   	popq	%rdi
  0x0000028bc119326b:   	popq	%rcx
  0x0000028bc119326c:   	jne	0x9
  0x0000028bc119326e:   	movq	%r11, 0x28(%r10)
  0x0000028bc1193272:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1193277:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1193281:   	andq	$-0x10, %rsp
  0x0000028bc1193285:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119328f:   	callq	*%r10
  0x0000028bc1193292:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1193293:   	movl	0xc(%rbx), %eax
  0x0000028bc1193296:   	shrl	$0x18, %eax
  0x0000028bc1193299:   	andl	$0xf, %eax
  0x0000028bc119329c:   	cmpl	$0x7, %eax
  0x0000028bc119329f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11932a5:   	movabsq	$0x28bdc1157e0, %rcx;   {external_word}
  0x0000028bc11932af:   	andq	$-0x10, %rsp
  0x0000028bc11932b3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11932bd:   	callq	*%r10
  0x0000028bc11932c0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11932c1:   	movl	0x24(%rbx), %ebx
  0x0000028bc11932c4:   	pushq	%r10
  0x0000028bc11932c6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11932d0:   	cmpq	(%r10), %r12
  0x0000028bc11932d3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11932d9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11932e3:   	andq	$-0x10, %rsp
  0x0000028bc11932e7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11932f1:   	callq	*%r10
  0x0000028bc11932f4:   	hlt
  0x0000028bc11932f5:   	popq	%r10
  0x0000028bc11932f7:   	shlq	$0x3, %rbx
  0x0000028bc11932fb:   	movq	0x10(%rbx), %rbx
  0x0000028bc11932ff:   	testq	%rbx, %rbx
  0x0000028bc1193302:   	je	0x3
  0x0000028bc1193308:   	jmpq	*0x58(%rbx)
  0x0000028bc119330b:   	jmp	-0x52bdf0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3267   85     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLIL)L (native)
 total in heap  [0x0000028bc1192f10,0x0000028bc1193310] = 1024
 relocation     [0x0000028bc1193070,0x0000028bc1193100] = 144
 main code      [0x0000028bc1193100,0x0000028bc1193310] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd8495380} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx       = int
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000028bc1193100:   	movq	0x8(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1193105:   	testq	%rbx, %rbx
  0x0000028bc1193108:   	je	0x40
  0x0000028bc119310e:   	pushq	%rdi
  0x0000028bc119310f:   	pushq	%r10
  0x0000028bc1193111:   	movl	0x8(%rbx), %edi
  0x0000028bc1193114:   	movabsq	$0x800000000, %r10
  0x0000028bc119311e:   	addq	%r10, %rdi
  0x0000028bc1193121:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119312b:   	cmpq	(%r10), %rdi
  0x0000028bc119312e:   	je	0x36
  0x0000028bc1193134:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193138:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193142:   	cmpq	(%r10), %rdi
  0x0000028bc1193145:   	je	0x1f
  0x0000028bc119314b:   	popq	%r10
  0x0000028bc119314d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119314e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1193158:   	andq	$-0x10, %rsp
  0x0000028bc119315c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193166:   	callq	*%r10
  0x0000028bc1193169:   	hlt
 ;; L_ok:
  0x0000028bc119316a:   	popq	%r10
  0x0000028bc119316c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119316d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1193170:   	movl	0x8(%rdx), %r10d
  0x0000028bc1193174:   	movabsq	$0x800000000, %r11
  0x0000028bc119317e:   	addq	%r11, %r10
  0x0000028bc1193181:   	movl	0x18(%rbx), %r11d
  0x0000028bc1193185:   	pushq	%r10
  0x0000028bc1193187:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193191:   	cmpq	(%r10), %r12
  0x0000028bc1193194:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119319a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11931a4:   	andq	$-0x10, %rsp
  0x0000028bc11931a8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11931b2:   	callq	*%r10
  0x0000028bc11931b5:   	hlt
  0x0000028bc11931b6:   	popq	%r10
  0x0000028bc11931b8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11931bc:   	testq	%r11, %r11
  0x0000028bc11931bf:   	je	0x41
  0x0000028bc11931c5:   	pushq	%rdi
  0x0000028bc11931c6:   	pushq	%r10
  0x0000028bc11931c8:   	movl	0x8(%r11), %edi
  0x0000028bc11931cc:   	movabsq	$0x800000000, %r10
  0x0000028bc11931d6:   	addq	%r10, %rdi
  0x0000028bc11931d9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11931e3:   	cmpq	(%r10), %rdi
  0x0000028bc11931e6:   	je	0x36
  0x0000028bc11931ec:   	movq	0x40(%rdi), %rdi
  0x0000028bc11931f0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11931fa:   	cmpq	(%r10), %rdi
  0x0000028bc11931fd:   	je	0x1f
  0x0000028bc1193203:   	popq	%r10
  0x0000028bc1193205:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1193206:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1193210:   	andq	$-0x10, %rsp
  0x0000028bc1193214:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119321e:   	callq	*%r10
  0x0000028bc1193221:   	hlt
 ;; L_ok:
  0x0000028bc1193222:   	popq	%r10
  0x0000028bc1193224:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1193225:   	movq	0x10(%r11), %r11
  0x0000028bc1193229:   	cmpq	%r11, %r10
  0x0000028bc119322c:   	je	0x61
  0x0000028bc1193232:   	movl	0x1c(%r11), %eax
  0x0000028bc1193236:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119323a:   	je	0x53
  0x0000028bc1193240:   	cmpl	$0x28, %eax
  0x0000028bc1193243:   	jne	0x2e
  0x0000028bc1193249:   	movq	%r11, %rax
  0x0000028bc119324c:   	pushq	%rcx
  0x0000028bc119324d:   	pushq	%rdi
  0x0000028bc119324e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1193258:   	incl	(%rcx)
  0x0000028bc119325a:   	movq	0x30(%r10), %rdi
  0x0000028bc119325e:   	movl	(%rdi), %ecx
  0x0000028bc1193260:   	addq	$0x8, %rdi
  0x0000028bc1193264:   	testq	%rax, %rax
  0x0000028bc1193267:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119326a:   	popq	%rdi
  0x0000028bc119326b:   	popq	%rcx
  0x0000028bc119326c:   	jne	0x9
  0x0000028bc119326e:   	movq	%r11, 0x28(%r10)
  0x0000028bc1193272:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1193277:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1193281:   	andq	$-0x10, %rsp
  0x0000028bc1193285:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119328f:   	callq	*%r10
  0x0000028bc1193292:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1193293:   	movl	0xc(%rbx), %eax
  0x0000028bc1193296:   	shrl	$0x18, %eax
  0x0000028bc1193299:   	andl	$0xf, %eax
  0x0000028bc119329c:   	cmpl	$0x7, %eax
  0x0000028bc119329f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11932a5:   	movabsq	$0x28bdc1157e0, %rcx;   {external_word}
  0x0000028bc11932af:   	andq	$-0x10, %rsp
  0x0000028bc11932b3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11932bd:   	callq	*%r10
  0x0000028bc11932c0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11932c1:   	movl	0x24(%rbx), %ebx
  0x0000028bc11932c4:   	pushq	%r10
  0x0000028bc11932c6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11932d0:   	cmpq	(%r10), %r12
  0x0000028bc11932d3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11932d9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11932e3:   	andq	$-0x10, %rsp
  0x0000028bc11932e7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11932f1:   	callq	*%r10
  0x0000028bc11932f4:   	hlt
  0x0000028bc11932f5:   	popq	%r10
  0x0000028bc11932f7:   	shlq	$0x3, %rbx
  0x0000028bc11932fb:   	movq	0x10(%rbx), %rbx
  0x0000028bc11932ff:   	testq	%rbx, %rbx
  0x0000028bc1193302:   	je	0x3
  0x0000028bc1193308:   	jmpq	*0x58(%rbx)
  0x0000028bc119330b:   	jmp	-0x52bdf0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3294   86     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)L (native)
 total in heap  [0x0000028bc1193390,0x0000028bc1193628] = 664
 relocation     [0x0000028bc11934f0,0x0000028bc1193538] = 72
 main code      [0x0000028bc1193540,0x0000028bc1193628] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd849dfd8} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1193540:   	testq	%r9, %r9
  0x0000028bc1193543:   	je	0x41
  0x0000028bc1193549:   	pushq	%rdi
  0x0000028bc119354a:   	pushq	%r10
  0x0000028bc119354c:   	movl	0x8(%r9), %edi
  0x0000028bc1193550:   	movabsq	$0x800000000, %r10
  0x0000028bc119355a:   	addq	%r10, %rdi
  0x0000028bc119355d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193567:   	cmpq	(%r10), %rdi
  0x0000028bc119356a:   	je	0x36
  0x0000028bc1193570:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193574:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119357e:   	cmpq	(%r10), %rdi
  0x0000028bc1193581:   	je	0x1f
  0x0000028bc1193587:   	popq	%r10
  0x0000028bc1193589:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119358a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1193594:   	andq	$-0x10, %rsp
  0x0000028bc1193598:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11935a2:   	callq	*%r10
  0x0000028bc11935a5:   	hlt
 ;; L_ok:
  0x0000028bc11935a6:   	popq	%r10
  0x0000028bc11935a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11935a9:   	movl	0xc(%r9), %eax
  0x0000028bc11935ad:   	shrl	$0x18, %eax
  0x0000028bc11935b0:   	andl	$0xf, %eax
  0x0000028bc11935b3:   	cmpl	$0x6, %eax
  0x0000028bc11935b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11935bc:   	movabsq	$0x28bdc33c9b0, %rcx;   {external_word}
  0x0000028bc11935c6:   	andq	$-0x10, %rsp
  0x0000028bc11935ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11935d4:   	callq	*%r10
  0x0000028bc11935d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11935d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11935dc:   	pushq	%r10
  0x0000028bc11935de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11935e8:   	cmpq	(%r10), %r12
  0x0000028bc11935eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11935f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11935fb:   	andq	$-0x10, %rsp
  0x0000028bc11935ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193609:   	callq	*%r10
  0x0000028bc119360c:   	hlt
  0x0000028bc119360d:   	popq	%r10
  0x0000028bc119360f:   	shlq	$0x3, %rbx
  0x0000028bc1193613:   	movq	0x10(%rbx), %rbx
  0x0000028bc1193617:   	testq	%rbx, %rbx
  0x0000028bc119361a:   	je	0x3
  0x0000028bc1193620:   	jmpq	*0x58(%rbx)
  0x0000028bc1193623:   	jmp	-0x52c108           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3297   86     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)L (native)
 total in heap  [0x0000028bc1193390,0x0000028bc1193628] = 664
 relocation     [0x0000028bc11934f0,0x0000028bc1193538] = 72
 main code      [0x0000028bc1193540,0x0000028bc1193628] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd849dfd8} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1193540:   	testq	%r9, %r9
  0x0000028bc1193543:   	je	0x41
  0x0000028bc1193549:   	pushq	%rdi
  0x0000028bc119354a:   	pushq	%r10
  0x0000028bc119354c:   	movl	0x8(%r9), %edi
  0x0000028bc1193550:   	movabsq	$0x800000000, %r10
  0x0000028bc119355a:   	addq	%r10, %rdi
  0x0000028bc119355d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193567:   	cmpq	(%r10), %rdi
  0x0000028bc119356a:   	je	0x36
  0x0000028bc1193570:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193574:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119357e:   	cmpq	(%r10), %rdi
  0x0000028bc1193581:   	je	0x1f
  0x0000028bc1193587:   	popq	%r10
  0x0000028bc1193589:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119358a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1193594:   	andq	$-0x10, %rsp
  0x0000028bc1193598:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11935a2:   	callq	*%r10
  0x0000028bc11935a5:   	hlt
 ;; L_ok:
  0x0000028bc11935a6:   	popq	%r10
  0x0000028bc11935a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11935a9:   	movl	0xc(%r9), %eax
  0x0000028bc11935ad:   	shrl	$0x18, %eax
  0x0000028bc11935b0:   	andl	$0xf, %eax
  0x0000028bc11935b3:   	cmpl	$0x6, %eax
  0x0000028bc11935b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11935bc:   	movabsq	$0x28bdc33c9b0, %rcx;   {external_word}
  0x0000028bc11935c6:   	andq	$-0x10, %rsp
  0x0000028bc11935ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11935d4:   	callq	*%r10
  0x0000028bc11935d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11935d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11935dc:   	pushq	%r10
  0x0000028bc11935de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11935e8:   	cmpq	(%r10), %r12
  0x0000028bc11935eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11935f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11935fb:   	andq	$-0x10, %rsp
  0x0000028bc11935ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193609:   	callq	*%r10
  0x0000028bc119360c:   	hlt
  0x0000028bc119360d:   	popq	%r10
  0x0000028bc119360f:   	shlq	$0x3, %rbx
  0x0000028bc1193613:   	movq	0x10(%rbx), %rbx
  0x0000028bc1193617:   	testq	%rbx, %rbx
  0x0000028bc119361a:   	je	0x3
  0x0000028bc1193620:   	jmpq	*0x58(%rbx)
  0x0000028bc1193623:   	jmp	-0x52c108           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3311   87     n 0       java.lang.invoke.MethodHandle::invokeBasic(LI)L (native)
 total in heap  [0x0000028bc1193690,0x0000028bc1193908] = 632
 relocation     [0x0000028bc11937f0,0x0000028bc1193838] = 72
 main code      [0x0000028bc1193840,0x0000028bc1193903] = 195
 stub code      [0x0000028bc1193903,0x0000028bc1193908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd849e150} 'invokeBasic' '(Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1193840:   	movl	0x14(%rdx), %ebx
  0x0000028bc1193843:   	pushq	%r10
  0x0000028bc1193845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119384f:   	cmpq	(%r10), %r12
  0x0000028bc1193852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1193862:   	andq	$-0x10, %rsp
  0x0000028bc1193866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193870:   	callq	*%r10
  0x0000028bc1193873:   	hlt
  0x0000028bc1193874:   	popq	%r10
  0x0000028bc1193876:   	shlq	$0x3, %rbx
  0x0000028bc119387a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119387d:   	pushq	%r10
  0x0000028bc119387f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193889:   	cmpq	(%r10), %r12
  0x0000028bc119388c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119389c:   	andq	$-0x10, %rsp
  0x0000028bc11938a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11938aa:   	callq	*%r10
  0x0000028bc11938ad:   	hlt
  0x0000028bc11938ae:   	popq	%r10
  0x0000028bc11938b0:   	shlq	$0x3, %rbx
  0x0000028bc11938b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11938b7:   	pushq	%r10
  0x0000028bc11938b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11938c3:   	cmpq	(%r10), %r12
  0x0000028bc11938c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11938cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11938d6:   	andq	$-0x10, %rsp
  0x0000028bc11938da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11938e4:   	callq	*%r10
  0x0000028bc11938e7:   	hlt
  0x0000028bc11938e8:   	popq	%r10
  0x0000028bc11938ea:   	shlq	$0x3, %rbx
  0x0000028bc11938ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11938f2:   	testq	%rbx, %rbx
  0x0000028bc11938f5:   	je	0x3
  0x0000028bc11938fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11938fe:   	jmp	-0x52c3e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1193903:   	hlt
  0x0000028bc1193904:   	hlt
  0x0000028bc1193905:   	hlt
  0x0000028bc1193906:   	hlt
  0x0000028bc1193907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3316   87     n 0       java.lang.invoke.MethodHandle::invokeBasic(LI)L (native)
 total in heap  [0x0000028bc1193690,0x0000028bc1193908] = 632
 relocation     [0x0000028bc11937f0,0x0000028bc1193838] = 72
 main code      [0x0000028bc1193840,0x0000028bc1193903] = 195
 stub code      [0x0000028bc1193903,0x0000028bc1193908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd849e150} 'invokeBasic' '(Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1193840:   	movl	0x14(%rdx), %ebx
  0x0000028bc1193843:   	pushq	%r10
  0x0000028bc1193845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119384f:   	cmpq	(%r10), %r12
  0x0000028bc1193852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1193862:   	andq	$-0x10, %rsp
  0x0000028bc1193866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193870:   	callq	*%r10
  0x0000028bc1193873:   	hlt
  0x0000028bc1193874:   	popq	%r10
  0x0000028bc1193876:   	shlq	$0x3, %rbx
  0x0000028bc119387a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119387d:   	pushq	%r10
  0x0000028bc119387f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193889:   	cmpq	(%r10), %r12
  0x0000028bc119388c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119389c:   	andq	$-0x10, %rsp
  0x0000028bc11938a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11938aa:   	callq	*%r10
  0x0000028bc11938ad:   	hlt
  0x0000028bc11938ae:   	popq	%r10
  0x0000028bc11938b0:   	shlq	$0x3, %rbx
  0x0000028bc11938b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11938b7:   	pushq	%r10
  0x0000028bc11938b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11938c3:   	cmpq	(%r10), %r12
  0x0000028bc11938c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11938cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11938d6:   	andq	$-0x10, %rsp
  0x0000028bc11938da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11938e4:   	callq	*%r10
  0x0000028bc11938e7:   	hlt
  0x0000028bc11938e8:   	popq	%r10
  0x0000028bc11938ea:   	shlq	$0x3, %rbx
  0x0000028bc11938ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11938f2:   	testq	%rbx, %rbx
  0x0000028bc11938f5:   	je	0x3
  0x0000028bc11938fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11938fe:   	jmp	-0x52c3e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1193903:   	hlt
  0x0000028bc1193904:   	hlt
  0x0000028bc1193905:   	hlt
  0x0000028bc1193906:   	hlt
  0x0000028bc1193907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3321   88     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLIL)L (native)
 total in heap  [0x0000028bc1193990,0x0000028bc1193d90] = 1024
 relocation     [0x0000028bc1193af0,0x0000028bc1193b80] = 144
 main code      [0x0000028bc1193b80,0x0000028bc1193d8b] = 523
 stub code      [0x0000028bc1193d8b,0x0000028bc1193d90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd849e288} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1193b80:   	testq	%rdi, %rdi
  0x0000028bc1193b83:   	je	0x40
  0x0000028bc1193b89:   	pushq	%rdi
  0x0000028bc1193b8a:   	pushq	%r10
  0x0000028bc1193b8c:   	movl	0x8(%rdi), %edi
  0x0000028bc1193b8f:   	movabsq	$0x800000000, %r10
  0x0000028bc1193b99:   	addq	%r10, %rdi
  0x0000028bc1193b9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193ba6:   	cmpq	(%r10), %rdi
  0x0000028bc1193ba9:   	je	0x36
  0x0000028bc1193baf:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193bb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193bbd:   	cmpq	(%r10), %rdi
  0x0000028bc1193bc0:   	je	0x1f
  0x0000028bc1193bc6:   	popq	%r10
  0x0000028bc1193bc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1193bc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1193bd3:   	andq	$-0x10, %rsp
  0x0000028bc1193bd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193be1:   	callq	*%r10
  0x0000028bc1193be4:   	hlt
 ;; L_ok:
  0x0000028bc1193be5:   	popq	%r10
  0x0000028bc1193be7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1193be8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1193beb:   	movl	0x8(%rdx), %r10d
  0x0000028bc1193bef:   	movabsq	$0x800000000, %r11
  0x0000028bc1193bf9:   	addq	%r11, %r10
  0x0000028bc1193bfc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1193c00:   	pushq	%r10
  0x0000028bc1193c02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193c0c:   	cmpq	(%r10), %r12
  0x0000028bc1193c0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193c15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1193c1f:   	andq	$-0x10, %rsp
  0x0000028bc1193c23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193c2d:   	callq	*%r10
  0x0000028bc1193c30:   	hlt
  0x0000028bc1193c31:   	popq	%r10
  0x0000028bc1193c33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1193c37:   	testq	%r11, %r11
  0x0000028bc1193c3a:   	je	0x41
  0x0000028bc1193c40:   	pushq	%rdi
  0x0000028bc1193c41:   	pushq	%r10
  0x0000028bc1193c43:   	movl	0x8(%r11), %edi
  0x0000028bc1193c47:   	movabsq	$0x800000000, %r10
  0x0000028bc1193c51:   	addq	%r10, %rdi
  0x0000028bc1193c54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1193c5e:   	cmpq	(%r10), %rdi
  0x0000028bc1193c61:   	je	0x36
  0x0000028bc1193c67:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193c6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1193c75:   	cmpq	(%r10), %rdi
  0x0000028bc1193c78:   	je	0x1f
  0x0000028bc1193c7e:   	popq	%r10
  0x0000028bc1193c80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1193c81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1193c8b:   	andq	$-0x10, %rsp
  0x0000028bc1193c8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193c99:   	callq	*%r10
  0x0000028bc1193c9c:   	hlt
 ;; L_ok:
  0x0000028bc1193c9d:   	popq	%r10
  0x0000028bc1193c9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1193ca0:   	movq	0x10(%r11), %r11
  0x0000028bc1193ca4:   	cmpq	%r11, %r10
  0x0000028bc1193ca7:   	je	0x61
  0x0000028bc1193cad:   	movl	0x1c(%r11), %eax
  0x0000028bc1193cb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1193cb5:   	je	0x53
  0x0000028bc1193cbb:   	cmpl	$0x28, %eax
  0x0000028bc1193cbe:   	jne	0x2e
  0x0000028bc1193cc4:   	movq	%r11, %rax
  0x0000028bc1193cc7:   	pushq	%rcx
  0x0000028bc1193cc8:   	pushq	%rdi
  0x0000028bc1193cc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1193cd3:   	incl	(%rcx)
  0x0000028bc1193cd5:   	movq	0x30(%r10), %rdi
  0x0000028bc1193cd9:   	movl	(%rdi), %ecx
  0x0000028bc1193cdb:   	addq	$0x8, %rdi
  0x0000028bc1193cdf:   	testq	%rax, %rax
  0x0000028bc1193ce2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1193ce5:   	popq	%rdi
  0x0000028bc1193ce6:   	popq	%rcx
  0x0000028bc1193ce7:   	jne	0x9
  0x0000028bc1193ce9:   	movq	%r11, 0x28(%r10)
  0x0000028bc1193ced:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1193cf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1193cfc:   	andq	$-0x10, %rsp
  0x0000028bc1193d00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193d0a:   	callq	*%r10
  0x0000028bc1193d0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1193d0e:   	movl	0xc(%rdi), %eax
  0x0000028bc1193d11:   	shrl	$0x18, %eax
  0x0000028bc1193d14:   	andl	$0xf, %eax
  0x0000028bc1193d17:   	cmpl	$0x7, %eax
  0x0000028bc1193d1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1193d20:   	movabsq	$0x28bdc33d0b0, %rcx;   {external_word}
  0x0000028bc1193d2a:   	andq	$-0x10, %rsp
  0x0000028bc1193d2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193d38:   	callq	*%r10
  0x0000028bc1193d3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1193d3c:   	movl	0x24(%rdi), %ebx
  0x0000028bc1193d3f:   	pushq	%r10
  0x0000028bc1193d41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193d4b:   	cmpq	(%r10), %r12
  0x0000028bc1193d4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193d54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1193d5e:   	andq	$-0x10, %rsp
  0x0000028bc1193d62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193d6c:   	callq	*%r10
  0x0000028bc1193d6f:   	hlt
  0x0000028bc1193d70:   	popq	%r10
  0x0000028bc1193d72:   	shlq	$0x3, %rbx
  0x0000028bc1193d76:   	movq	0x10(%rbx), %rbx
  0x0000028bc1193d7a:   	testq	%rbx, %rbx
  0x0000028bc1193d7d:   	je	0x3
  0x0000028bc1193d83:   	jmpq	*0x58(%rbx)
  0x0000028bc1193d86:   	jmp	-0x52c86b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1193d8b:   	hlt
  0x0000028bc1193d8c:   	hlt
  0x0000028bc1193d8d:   	hlt
  0x0000028bc1193d8e:   	hlt
  0x0000028bc1193d8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3327   88     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLIL)L (native)
 total in heap  [0x0000028bc1193990,0x0000028bc1193d90] = 1024
 relocation     [0x0000028bc1193af0,0x0000028bc1193b80] = 144
 main code      [0x0000028bc1193b80,0x0000028bc1193d8b] = 523
 stub code      [0x0000028bc1193d8b,0x0000028bc1193d90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd849e288} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1193b80:   	testq	%rdi, %rdi
  0x0000028bc1193b83:   	je	0x40
  0x0000028bc1193b89:   	pushq	%rdi
  0x0000028bc1193b8a:   	pushq	%r10
  0x0000028bc1193b8c:   	movl	0x8(%rdi), %edi
  0x0000028bc1193b8f:   	movabsq	$0x800000000, %r10
  0x0000028bc1193b99:   	addq	%r10, %rdi
  0x0000028bc1193b9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193ba6:   	cmpq	(%r10), %rdi
  0x0000028bc1193ba9:   	je	0x36
  0x0000028bc1193baf:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193bb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193bbd:   	cmpq	(%r10), %rdi
  0x0000028bc1193bc0:   	je	0x1f
  0x0000028bc1193bc6:   	popq	%r10
  0x0000028bc1193bc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1193bc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1193bd3:   	andq	$-0x10, %rsp
  0x0000028bc1193bd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193be1:   	callq	*%r10
  0x0000028bc1193be4:   	hlt
 ;; L_ok:
  0x0000028bc1193be5:   	popq	%r10
  0x0000028bc1193be7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1193be8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1193beb:   	movl	0x8(%rdx), %r10d
  0x0000028bc1193bef:   	movabsq	$0x800000000, %r11
  0x0000028bc1193bf9:   	addq	%r11, %r10
  0x0000028bc1193bfc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1193c00:   	pushq	%r10
  0x0000028bc1193c02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193c0c:   	cmpq	(%r10), %r12
  0x0000028bc1193c0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193c15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1193c1f:   	andq	$-0x10, %rsp
  0x0000028bc1193c23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193c2d:   	callq	*%r10
  0x0000028bc1193c30:   	hlt
  0x0000028bc1193c31:   	popq	%r10
  0x0000028bc1193c33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1193c37:   	testq	%r11, %r11
  0x0000028bc1193c3a:   	je	0x41
  0x0000028bc1193c40:   	pushq	%rdi
  0x0000028bc1193c41:   	pushq	%r10
  0x0000028bc1193c43:   	movl	0x8(%r11), %edi
  0x0000028bc1193c47:   	movabsq	$0x800000000, %r10
  0x0000028bc1193c51:   	addq	%r10, %rdi
  0x0000028bc1193c54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1193c5e:   	cmpq	(%r10), %rdi
  0x0000028bc1193c61:   	je	0x36
  0x0000028bc1193c67:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193c6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1193c75:   	cmpq	(%r10), %rdi
  0x0000028bc1193c78:   	je	0x1f
  0x0000028bc1193c7e:   	popq	%r10
  0x0000028bc1193c80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1193c81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1193c8b:   	andq	$-0x10, %rsp
  0x0000028bc1193c8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193c99:   	callq	*%r10
  0x0000028bc1193c9c:   	hlt
 ;; L_ok:
  0x0000028bc1193c9d:   	popq	%r10
  0x0000028bc1193c9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1193ca0:   	movq	0x10(%r11), %r11
  0x0000028bc1193ca4:   	cmpq	%r11, %r10
  0x0000028bc1193ca7:   	je	0x61
  0x0000028bc1193cad:   	movl	0x1c(%r11), %eax
  0x0000028bc1193cb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1193cb5:   	je	0x53
  0x0000028bc1193cbb:   	cmpl	$0x28, %eax
  0x0000028bc1193cbe:   	jne	0x2e
  0x0000028bc1193cc4:   	movq	%r11, %rax
  0x0000028bc1193cc7:   	pushq	%rcx
  0x0000028bc1193cc8:   	pushq	%rdi
  0x0000028bc1193cc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1193cd3:   	incl	(%rcx)
  0x0000028bc1193cd5:   	movq	0x30(%r10), %rdi
  0x0000028bc1193cd9:   	movl	(%rdi), %ecx
  0x0000028bc1193cdb:   	addq	$0x8, %rdi
  0x0000028bc1193cdf:   	testq	%rax, %rax
  0x0000028bc1193ce2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1193ce5:   	popq	%rdi
  0x0000028bc1193ce6:   	popq	%rcx
  0x0000028bc1193ce7:   	jne	0x9
  0x0000028bc1193ce9:   	movq	%r11, 0x28(%r10)
  0x0000028bc1193ced:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1193cf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1193cfc:   	andq	$-0x10, %rsp
  0x0000028bc1193d00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193d0a:   	callq	*%r10
  0x0000028bc1193d0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1193d0e:   	movl	0xc(%rdi), %eax
  0x0000028bc1193d11:   	shrl	$0x18, %eax
  0x0000028bc1193d14:   	andl	$0xf, %eax
  0x0000028bc1193d17:   	cmpl	$0x7, %eax
  0x0000028bc1193d1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1193d20:   	movabsq	$0x28bdc33d0b0, %rcx;   {external_word}
  0x0000028bc1193d2a:   	andq	$-0x10, %rsp
  0x0000028bc1193d2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193d38:   	callq	*%r10
  0x0000028bc1193d3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1193d3c:   	movl	0x24(%rdi), %ebx
  0x0000028bc1193d3f:   	pushq	%r10
  0x0000028bc1193d41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1193d4b:   	cmpq	(%r10), %r12
  0x0000028bc1193d4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1193d54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1193d5e:   	andq	$-0x10, %rsp
  0x0000028bc1193d62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1193d6c:   	callq	*%r10
  0x0000028bc1193d6f:   	hlt
  0x0000028bc1193d70:   	popq	%r10
  0x0000028bc1193d72:   	shlq	$0x3, %rbx
  0x0000028bc1193d76:   	movq	0x10(%rbx), %rbx
  0x0000028bc1193d7a:   	testq	%rbx, %rbx
  0x0000028bc1193d7d:   	je	0x3
  0x0000028bc1193d83:   	jmpq	*0x58(%rbx)
  0x0000028bc1193d86:   	jmp	-0x52c86b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1193d8b:   	hlt
  0x0000028bc1193d8c:   	hlt
  0x0000028bc1193d8d:   	hlt
  0x0000028bc1193d8e:   	hlt
  0x0000028bc1193d8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3348   89     n 0       java.lang.invoke.MethodHandle::linkToStatic(LILL)V (native)
 total in heap  [0x0000028bc1193e10,0x0000028bc11940a8] = 664
 relocation     [0x0000028bc1193f70,0x0000028bc1193fb8] = 72
 main code      [0x0000028bc1193fc0,0x0000028bc11940a5] = 229
 stub code      [0x0000028bc11940a5,0x0000028bc11940a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a3c08} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1193fc0:   	testq	%rdi, %rdi
  0x0000028bc1193fc3:   	je	0x40
  0x0000028bc1193fc9:   	pushq	%rdi
  0x0000028bc1193fca:   	pushq	%r10
  0x0000028bc1193fcc:   	movl	0x8(%rdi), %edi
  0x0000028bc1193fcf:   	movabsq	$0x800000000, %r10
  0x0000028bc1193fd9:   	addq	%r10, %rdi
  0x0000028bc1193fdc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193fe6:   	cmpq	(%r10), %rdi
  0x0000028bc1193fe9:   	je	0x36
  0x0000028bc1193fef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193ff3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193ffd:   	cmpq	(%r10), %rdi
  0x0000028bc1194000:   	je	0x1f
  0x0000028bc1194006:   	popq	%r10
  0x0000028bc1194008:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1194009:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1194013:   	andq	$-0x10, %rsp
  0x0000028bc1194017:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194021:   	callq	*%r10
  0x0000028bc1194024:   	hlt
 ;; L_ok:
  0x0000028bc1194025:   	popq	%r10
  0x0000028bc1194027:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1194028:   	movl	0xc(%rdi), %eax
  0x0000028bc119402b:   	shrl	$0x18, %eax
  0x0000028bc119402e:   	andl	$0xf, %eax
  0x0000028bc1194031:   	cmpl	$0x6, %eax
  0x0000028bc1194034:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119403a:   	movabsq	$0x28bdc33cbb0, %rcx;   {external_word}
  0x0000028bc1194044:   	andq	$-0x10, %rsp
  0x0000028bc1194048:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194052:   	callq	*%r10
  0x0000028bc1194055:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1194056:   	movl	0x24(%rdi), %ebx
  0x0000028bc1194059:   	pushq	%r10
  0x0000028bc119405b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194065:   	cmpq	(%r10), %r12
  0x0000028bc1194068:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119406e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194078:   	andq	$-0x10, %rsp
  0x0000028bc119407c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194086:   	callq	*%r10
  0x0000028bc1194089:   	hlt
  0x0000028bc119408a:   	popq	%r10
  0x0000028bc119408c:   	shlq	$0x3, %rbx
  0x0000028bc1194090:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194094:   	testq	%rbx, %rbx
  0x0000028bc1194097:   	je	0x3
  0x0000028bc119409d:   	jmpq	*0x58(%rbx)
  0x0000028bc11940a0:   	jmp	-0x52cb85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11940a5:   	hlt
  0x0000028bc11940a6:   	hlt
  0x0000028bc11940a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3350   89     n 0       java.lang.invoke.MethodHandle::linkToStatic(LILL)V (native)
 total in heap  [0x0000028bc1193e10,0x0000028bc11940a8] = 664
 relocation     [0x0000028bc1193f70,0x0000028bc1193fb8] = 72
 main code      [0x0000028bc1193fc0,0x0000028bc11940a5] = 229
 stub code      [0x0000028bc11940a5,0x0000028bc11940a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a3c08} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1193fc0:   	testq	%rdi, %rdi
  0x0000028bc1193fc3:   	je	0x40
  0x0000028bc1193fc9:   	pushq	%rdi
  0x0000028bc1193fca:   	pushq	%r10
  0x0000028bc1193fcc:   	movl	0x8(%rdi), %edi
  0x0000028bc1193fcf:   	movabsq	$0x800000000, %r10
  0x0000028bc1193fd9:   	addq	%r10, %rdi
  0x0000028bc1193fdc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193fe6:   	cmpq	(%r10), %rdi
  0x0000028bc1193fe9:   	je	0x36
  0x0000028bc1193fef:   	movq	0x40(%rdi), %rdi
  0x0000028bc1193ff3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1193ffd:   	cmpq	(%r10), %rdi
  0x0000028bc1194000:   	je	0x1f
  0x0000028bc1194006:   	popq	%r10
  0x0000028bc1194008:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1194009:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1194013:   	andq	$-0x10, %rsp
  0x0000028bc1194017:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194021:   	callq	*%r10
  0x0000028bc1194024:   	hlt
 ;; L_ok:
  0x0000028bc1194025:   	popq	%r10
  0x0000028bc1194027:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1194028:   	movl	0xc(%rdi), %eax
  0x0000028bc119402b:   	shrl	$0x18, %eax
  0x0000028bc119402e:   	andl	$0xf, %eax
  0x0000028bc1194031:   	cmpl	$0x6, %eax
  0x0000028bc1194034:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119403a:   	movabsq	$0x28bdc33cbb0, %rcx;   {external_word}
  0x0000028bc1194044:   	andq	$-0x10, %rsp
  0x0000028bc1194048:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194052:   	callq	*%r10
  0x0000028bc1194055:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1194056:   	movl	0x24(%rdi), %ebx
  0x0000028bc1194059:   	pushq	%r10
  0x0000028bc119405b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194065:   	cmpq	(%r10), %r12
  0x0000028bc1194068:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119406e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194078:   	andq	$-0x10, %rsp
  0x0000028bc119407c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194086:   	callq	*%r10
  0x0000028bc1194089:   	hlt
  0x0000028bc119408a:   	popq	%r10
  0x0000028bc119408c:   	shlq	$0x3, %rbx
  0x0000028bc1194090:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194094:   	testq	%rbx, %rbx
  0x0000028bc1194097:   	je	0x3
  0x0000028bc119409d:   	jmpq	*0x58(%rbx)
  0x0000028bc11940a0:   	jmp	-0x52cb85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc11940a5:   	hlt
  0x0000028bc11940a6:   	hlt
  0x0000028bc11940a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3354   90     n 0       java.lang.invoke.MethodHandle::invokeBasic(LIL)V (native)
 total in heap  [0x0000028bc1194110,0x0000028bc1194388] = 632
 relocation     [0x0000028bc1194270,0x0000028bc11942b8] = 72
 main code      [0x0000028bc11942c0,0x0000028bc1194383] = 195
 stub code      [0x0000028bc1194383,0x0000028bc1194388] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a4030} 'invokeBasic' '(Ljava/lang/Object;ILjava/lang/Object;)V' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11942c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11942c3:   	pushq	%r10
  0x0000028bc11942c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11942cf:   	cmpq	(%r10), %r12
  0x0000028bc11942d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11942d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11942e2:   	andq	$-0x10, %rsp
  0x0000028bc11942e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11942f0:   	callq	*%r10
  0x0000028bc11942f3:   	hlt
  0x0000028bc11942f4:   	popq	%r10
  0x0000028bc11942f6:   	shlq	$0x3, %rbx
  0x0000028bc11942fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11942fd:   	pushq	%r10
  0x0000028bc11942ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194309:   	cmpq	(%r10), %r12
  0x0000028bc119430c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119431c:   	andq	$-0x10, %rsp
  0x0000028bc1194320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119432a:   	callq	*%r10
  0x0000028bc119432d:   	hlt
  0x0000028bc119432e:   	popq	%r10
  0x0000028bc1194330:   	shlq	$0x3, %rbx
  0x0000028bc1194334:   	movl	0x24(%rbx), %ebx
  0x0000028bc1194337:   	pushq	%r10
  0x0000028bc1194339:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194343:   	cmpq	(%r10), %r12
  0x0000028bc1194346:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119434c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194356:   	andq	$-0x10, %rsp
  0x0000028bc119435a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194364:   	callq	*%r10
  0x0000028bc1194367:   	hlt
  0x0000028bc1194368:   	popq	%r10
  0x0000028bc119436a:   	shlq	$0x3, %rbx
  0x0000028bc119436e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194372:   	testq	%rbx, %rbx
  0x0000028bc1194375:   	je	0x3
  0x0000028bc119437b:   	jmpq	*0x58(%rbx)
  0x0000028bc119437e:   	jmp	-0x52ce63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1194383:   	hlt
  0x0000028bc1194384:   	hlt
  0x0000028bc1194385:   	hlt
  0x0000028bc1194386:   	hlt
  0x0000028bc1194387:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3357   90     n 0       java.lang.invoke.MethodHandle::invokeBasic(LIL)V (native)
 total in heap  [0x0000028bc1194110,0x0000028bc1194388] = 632
 relocation     [0x0000028bc1194270,0x0000028bc11942b8] = 72
 main code      [0x0000028bc11942c0,0x0000028bc1194383] = 195
 stub code      [0x0000028bc1194383,0x0000028bc1194388] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a4030} 'invokeBasic' '(Ljava/lang/Object;ILjava/lang/Object;)V' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11942c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11942c3:   	pushq	%r10
  0x0000028bc11942c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11942cf:   	cmpq	(%r10), %r12
  0x0000028bc11942d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11942d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11942e2:   	andq	$-0x10, %rsp
  0x0000028bc11942e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11942f0:   	callq	*%r10
  0x0000028bc11942f3:   	hlt
  0x0000028bc11942f4:   	popq	%r10
  0x0000028bc11942f6:   	shlq	$0x3, %rbx
  0x0000028bc11942fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11942fd:   	pushq	%r10
  0x0000028bc11942ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194309:   	cmpq	(%r10), %r12
  0x0000028bc119430c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119431c:   	andq	$-0x10, %rsp
  0x0000028bc1194320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119432a:   	callq	*%r10
  0x0000028bc119432d:   	hlt
  0x0000028bc119432e:   	popq	%r10
  0x0000028bc1194330:   	shlq	$0x3, %rbx
  0x0000028bc1194334:   	movl	0x24(%rbx), %ebx
  0x0000028bc1194337:   	pushq	%r10
  0x0000028bc1194339:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194343:   	cmpq	(%r10), %r12
  0x0000028bc1194346:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119434c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194356:   	andq	$-0x10, %rsp
  0x0000028bc119435a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194364:   	callq	*%r10
  0x0000028bc1194367:   	hlt
  0x0000028bc1194368:   	popq	%r10
  0x0000028bc119436a:   	shlq	$0x3, %rbx
  0x0000028bc119436e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194372:   	testq	%rbx, %rbx
  0x0000028bc1194375:   	je	0x3
  0x0000028bc119437b:   	jmpq	*0x58(%rbx)
  0x0000028bc119437e:   	jmp	-0x52ce63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1194383:   	hlt
  0x0000028bc1194384:   	hlt
  0x0000028bc1194385:   	hlt
  0x0000028bc1194386:   	hlt
  0x0000028bc1194387:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3359   91     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLILL)V (native)
 total in heap  [0x0000028bc1194410,0x0000028bc1194810] = 1024
 relocation     [0x0000028bc1194570,0x0000028bc1194600] = 144
 main code      [0x0000028bc1194600,0x0000028bc119480b] = 523
 stub code      [0x0000028bc119480b,0x0000028bc1194810] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a4168} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1194600:   	testq	%rsi, %rsi
  0x0000028bc1194603:   	je	0x40
  0x0000028bc1194609:   	pushq	%rdi
  0x0000028bc119460a:   	pushq	%r10
  0x0000028bc119460c:   	movl	0x8(%rsi), %edi
  0x0000028bc119460f:   	movabsq	$0x800000000, %r10
  0x0000028bc1194619:   	addq	%r10, %rdi
  0x0000028bc119461c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1194626:   	cmpq	(%r10), %rdi
  0x0000028bc1194629:   	je	0x36
  0x0000028bc119462f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1194633:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119463d:   	cmpq	(%r10), %rdi
  0x0000028bc1194640:   	je	0x1f
  0x0000028bc1194646:   	popq	%r10
  0x0000028bc1194648:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1194649:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1194653:   	andq	$-0x10, %rsp
  0x0000028bc1194657:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194661:   	callq	*%r10
  0x0000028bc1194664:   	hlt
 ;; L_ok:
  0x0000028bc1194665:   	popq	%r10
  0x0000028bc1194667:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1194668:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119466b:   	movl	0x8(%rdx), %r10d
  0x0000028bc119466f:   	movabsq	$0x800000000, %r11
  0x0000028bc1194679:   	addq	%r11, %r10
  0x0000028bc119467c:   	movl	0x18(%rsi), %r11d
  0x0000028bc1194680:   	pushq	%r10
  0x0000028bc1194682:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119468c:   	cmpq	(%r10), %r12
  0x0000028bc119468f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194695:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119469f:   	andq	$-0x10, %rsp
  0x0000028bc11946a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11946ad:   	callq	*%r10
  0x0000028bc11946b0:   	hlt
  0x0000028bc11946b1:   	popq	%r10
  0x0000028bc11946b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11946b7:   	testq	%r11, %r11
  0x0000028bc11946ba:   	je	0x41
  0x0000028bc11946c0:   	pushq	%rdi
  0x0000028bc11946c1:   	pushq	%r10
  0x0000028bc11946c3:   	movl	0x8(%r11), %edi
  0x0000028bc11946c7:   	movabsq	$0x800000000, %r10
  0x0000028bc11946d1:   	addq	%r10, %rdi
  0x0000028bc11946d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11946de:   	cmpq	(%r10), %rdi
  0x0000028bc11946e1:   	je	0x36
  0x0000028bc11946e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc11946eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11946f5:   	cmpq	(%r10), %rdi
  0x0000028bc11946f8:   	je	0x1f
  0x0000028bc11946fe:   	popq	%r10
  0x0000028bc1194700:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1194701:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119470b:   	andq	$-0x10, %rsp
  0x0000028bc119470f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194719:   	callq	*%r10
  0x0000028bc119471c:   	hlt
 ;; L_ok:
  0x0000028bc119471d:   	popq	%r10
  0x0000028bc119471f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1194720:   	movq	0x10(%r11), %r11
  0x0000028bc1194724:   	cmpq	%r11, %r10
  0x0000028bc1194727:   	je	0x61
  0x0000028bc119472d:   	movl	0x1c(%r11), %eax
  0x0000028bc1194731:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1194735:   	je	0x53
  0x0000028bc119473b:   	cmpl	$0x28, %eax
  0x0000028bc119473e:   	jne	0x2e
  0x0000028bc1194744:   	movq	%r11, %rax
  0x0000028bc1194747:   	pushq	%rcx
  0x0000028bc1194748:   	pushq	%rdi
  0x0000028bc1194749:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1194753:   	incl	(%rcx)
  0x0000028bc1194755:   	movq	0x30(%r10), %rdi
  0x0000028bc1194759:   	movl	(%rdi), %ecx
  0x0000028bc119475b:   	addq	$0x8, %rdi
  0x0000028bc119475f:   	testq	%rax, %rax
  0x0000028bc1194762:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1194765:   	popq	%rdi
  0x0000028bc1194766:   	popq	%rcx
  0x0000028bc1194767:   	jne	0x9
  0x0000028bc1194769:   	movq	%r11, 0x28(%r10)
  0x0000028bc119476d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1194772:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119477c:   	andq	$-0x10, %rsp
  0x0000028bc1194780:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119478a:   	callq	*%r10
  0x0000028bc119478d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119478e:   	movl	0xc(%rsi), %eax
  0x0000028bc1194791:   	shrl	$0x18, %eax
  0x0000028bc1194794:   	andl	$0xf, %eax
  0x0000028bc1194797:   	cmpl	$0x7, %eax
  0x0000028bc119479a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11947a0:   	movabsq	$0x28bdc33e530, %rcx;   {external_word}
  0x0000028bc11947aa:   	andq	$-0x10, %rsp
  0x0000028bc11947ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11947b8:   	callq	*%r10
  0x0000028bc11947bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11947bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc11947bf:   	pushq	%r10
  0x0000028bc11947c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11947cb:   	cmpq	(%r10), %r12
  0x0000028bc11947ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11947d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11947de:   	andq	$-0x10, %rsp
  0x0000028bc11947e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11947ec:   	callq	*%r10
  0x0000028bc11947ef:   	hlt
  0x0000028bc11947f0:   	popq	%r10
  0x0000028bc11947f2:   	shlq	$0x3, %rbx
  0x0000028bc11947f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc11947fa:   	testq	%rbx, %rbx
  0x0000028bc11947fd:   	je	0x3
  0x0000028bc1194803:   	jmpq	*0x58(%rbx)
  0x0000028bc1194806:   	jmp	-0x52d2eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119480b:   	hlt
  0x0000028bc119480c:   	hlt
  0x0000028bc119480d:   	hlt
  0x0000028bc119480e:   	hlt
  0x0000028bc119480f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3364   91     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLILL)V (native)
 total in heap  [0x0000028bc1194410,0x0000028bc1194810] = 1024
 relocation     [0x0000028bc1194570,0x0000028bc1194600] = 144
 main code      [0x0000028bc1194600,0x0000028bc119480b] = 523
 stub code      [0x0000028bc119480b,0x0000028bc1194810] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a4168} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1194600:   	testq	%rsi, %rsi
  0x0000028bc1194603:   	je	0x40
  0x0000028bc1194609:   	pushq	%rdi
  0x0000028bc119460a:   	pushq	%r10
  0x0000028bc119460c:   	movl	0x8(%rsi), %edi
  0x0000028bc119460f:   	movabsq	$0x800000000, %r10
  0x0000028bc1194619:   	addq	%r10, %rdi
  0x0000028bc119461c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1194626:   	cmpq	(%r10), %rdi
  0x0000028bc1194629:   	je	0x36
  0x0000028bc119462f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1194633:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119463d:   	cmpq	(%r10), %rdi
  0x0000028bc1194640:   	je	0x1f
  0x0000028bc1194646:   	popq	%r10
  0x0000028bc1194648:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1194649:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1194653:   	andq	$-0x10, %rsp
  0x0000028bc1194657:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194661:   	callq	*%r10
  0x0000028bc1194664:   	hlt
 ;; L_ok:
  0x0000028bc1194665:   	popq	%r10
  0x0000028bc1194667:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1194668:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119466b:   	movl	0x8(%rdx), %r10d
  0x0000028bc119466f:   	movabsq	$0x800000000, %r11
  0x0000028bc1194679:   	addq	%r11, %r10
  0x0000028bc119467c:   	movl	0x18(%rsi), %r11d
  0x0000028bc1194680:   	pushq	%r10
  0x0000028bc1194682:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119468c:   	cmpq	(%r10), %r12
  0x0000028bc119468f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194695:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119469f:   	andq	$-0x10, %rsp
  0x0000028bc11946a3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11946ad:   	callq	*%r10
  0x0000028bc11946b0:   	hlt
  0x0000028bc11946b1:   	popq	%r10
  0x0000028bc11946b3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11946b7:   	testq	%r11, %r11
  0x0000028bc11946ba:   	je	0x41
  0x0000028bc11946c0:   	pushq	%rdi
  0x0000028bc11946c1:   	pushq	%r10
  0x0000028bc11946c3:   	movl	0x8(%r11), %edi
  0x0000028bc11946c7:   	movabsq	$0x800000000, %r10
  0x0000028bc11946d1:   	addq	%r10, %rdi
  0x0000028bc11946d4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11946de:   	cmpq	(%r10), %rdi
  0x0000028bc11946e1:   	je	0x36
  0x0000028bc11946e7:   	movq	0x40(%rdi), %rdi
  0x0000028bc11946eb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11946f5:   	cmpq	(%r10), %rdi
  0x0000028bc11946f8:   	je	0x1f
  0x0000028bc11946fe:   	popq	%r10
  0x0000028bc1194700:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1194701:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119470b:   	andq	$-0x10, %rsp
  0x0000028bc119470f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194719:   	callq	*%r10
  0x0000028bc119471c:   	hlt
 ;; L_ok:
  0x0000028bc119471d:   	popq	%r10
  0x0000028bc119471f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1194720:   	movq	0x10(%r11), %r11
  0x0000028bc1194724:   	cmpq	%r11, %r10
  0x0000028bc1194727:   	je	0x61
  0x0000028bc119472d:   	movl	0x1c(%r11), %eax
  0x0000028bc1194731:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1194735:   	je	0x53
  0x0000028bc119473b:   	cmpl	$0x28, %eax
  0x0000028bc119473e:   	jne	0x2e
  0x0000028bc1194744:   	movq	%r11, %rax
  0x0000028bc1194747:   	pushq	%rcx
  0x0000028bc1194748:   	pushq	%rdi
  0x0000028bc1194749:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1194753:   	incl	(%rcx)
  0x0000028bc1194755:   	movq	0x30(%r10), %rdi
  0x0000028bc1194759:   	movl	(%rdi), %ecx
  0x0000028bc119475b:   	addq	$0x8, %rdi
  0x0000028bc119475f:   	testq	%rax, %rax
  0x0000028bc1194762:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1194765:   	popq	%rdi
  0x0000028bc1194766:   	popq	%rcx
  0x0000028bc1194767:   	jne	0x9
  0x0000028bc1194769:   	movq	%r11, 0x28(%r10)
  0x0000028bc119476d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1194772:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119477c:   	andq	$-0x10, %rsp
  0x0000028bc1194780:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119478a:   	callq	*%r10
  0x0000028bc119478d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119478e:   	movl	0xc(%rsi), %eax
  0x0000028bc1194791:   	shrl	$0x18, %eax
  0x0000028bc1194794:   	andl	$0xf, %eax
  0x0000028bc1194797:   	cmpl	$0x7, %eax
  0x0000028bc119479a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11947a0:   	movabsq	$0x28bdc33e530, %rcx;   {external_word}
  0x0000028bc11947aa:   	andq	$-0x10, %rsp
  0x0000028bc11947ae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11947b8:   	callq	*%r10
  0x0000028bc11947bb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11947bc:   	movl	0x24(%rsi), %ebx
  0x0000028bc11947bf:   	pushq	%r10
  0x0000028bc11947c1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11947cb:   	cmpq	(%r10), %r12
  0x0000028bc11947ce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11947d4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11947de:   	andq	$-0x10, %rsp
  0x0000028bc11947e2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11947ec:   	callq	*%r10
  0x0000028bc11947ef:   	hlt
  0x0000028bc11947f0:   	popq	%r10
  0x0000028bc11947f2:   	shlq	$0x3, %rbx
  0x0000028bc11947f6:   	movq	0x10(%rbx), %rbx
  0x0000028bc11947fa:   	testq	%rbx, %rbx
  0x0000028bc11947fd:   	je	0x3
  0x0000028bc1194803:   	jmpq	*0x58(%rbx)
  0x0000028bc1194806:   	jmp	-0x52d2eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119480b:   	hlt
  0x0000028bc119480c:   	hlt
  0x0000028bc119480d:   	hlt
  0x0000028bc119480e:   	hlt
  0x0000028bc119480f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3372   92     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)I (native)
 total in heap  [0x0000028bc1194890,0x0000028bc1194b08] = 632
 relocation     [0x0000028bc11949f0,0x0000028bc1194a38] = 72
 main code      [0x0000028bc1194a40,0x0000028bc1194b03] = 195
 stub code      [0x0000028bc1194b03,0x0000028bc1194b08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a4980} 'invokeBasic' '(Ljava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1194a40:   	movl	0x14(%rdx), %ebx
  0x0000028bc1194a43:   	pushq	%r10
  0x0000028bc1194a45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194a4f:   	cmpq	(%r10), %r12
  0x0000028bc1194a52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194a58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194a62:   	andq	$-0x10, %rsp
  0x0000028bc1194a66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194a70:   	callq	*%r10
  0x0000028bc1194a73:   	hlt
  0x0000028bc1194a74:   	popq	%r10
  0x0000028bc1194a76:   	shlq	$0x3, %rbx
  0x0000028bc1194a7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc1194a7d:   	pushq	%r10
  0x0000028bc1194a7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194a89:   	cmpq	(%r10), %r12
  0x0000028bc1194a8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194a92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194a9c:   	andq	$-0x10, %rsp
  0x0000028bc1194aa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194aaa:   	callq	*%r10
  0x0000028bc1194aad:   	hlt
  0x0000028bc1194aae:   	popq	%r10
  0x0000028bc1194ab0:   	shlq	$0x3, %rbx
  0x0000028bc1194ab4:   	movl	0x24(%rbx), %ebx
  0x0000028bc1194ab7:   	pushq	%r10
  0x0000028bc1194ab9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194ac3:   	cmpq	(%r10), %r12
  0x0000028bc1194ac6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194acc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194ad6:   	andq	$-0x10, %rsp
  0x0000028bc1194ada:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194ae4:   	callq	*%r10
  0x0000028bc1194ae7:   	hlt
  0x0000028bc1194ae8:   	popq	%r10
  0x0000028bc1194aea:   	shlq	$0x3, %rbx
  0x0000028bc1194aee:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194af2:   	testq	%rbx, %rbx
  0x0000028bc1194af5:   	je	0x3
  0x0000028bc1194afb:   	jmpq	*0x58(%rbx)
  0x0000028bc1194afe:   	jmp	-0x52d5e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1194b03:   	hlt
  0x0000028bc1194b04:   	hlt
  0x0000028bc1194b05:   	hlt
  0x0000028bc1194b06:   	hlt
  0x0000028bc1194b07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3374   92     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)I (native)
 total in heap  [0x0000028bc1194890,0x0000028bc1194b08] = 632
 relocation     [0x0000028bc11949f0,0x0000028bc1194a38] = 72
 main code      [0x0000028bc1194a40,0x0000028bc1194b03] = 195
 stub code      [0x0000028bc1194b03,0x0000028bc1194b08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a4980} 'invokeBasic' '(Ljava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1194a40:   	movl	0x14(%rdx), %ebx
  0x0000028bc1194a43:   	pushq	%r10
  0x0000028bc1194a45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194a4f:   	cmpq	(%r10), %r12
  0x0000028bc1194a52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194a58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194a62:   	andq	$-0x10, %rsp
  0x0000028bc1194a66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194a70:   	callq	*%r10
  0x0000028bc1194a73:   	hlt
  0x0000028bc1194a74:   	popq	%r10
  0x0000028bc1194a76:   	shlq	$0x3, %rbx
  0x0000028bc1194a7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc1194a7d:   	pushq	%r10
  0x0000028bc1194a7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194a89:   	cmpq	(%r10), %r12
  0x0000028bc1194a8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194a92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194a9c:   	andq	$-0x10, %rsp
  0x0000028bc1194aa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194aaa:   	callq	*%r10
  0x0000028bc1194aad:   	hlt
  0x0000028bc1194aae:   	popq	%r10
  0x0000028bc1194ab0:   	shlq	$0x3, %rbx
  0x0000028bc1194ab4:   	movl	0x24(%rbx), %ebx
  0x0000028bc1194ab7:   	pushq	%r10
  0x0000028bc1194ab9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194ac3:   	cmpq	(%r10), %r12
  0x0000028bc1194ac6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194acc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194ad6:   	andq	$-0x10, %rsp
  0x0000028bc1194ada:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194ae4:   	callq	*%r10
  0x0000028bc1194ae7:   	hlt
  0x0000028bc1194ae8:   	popq	%r10
  0x0000028bc1194aea:   	shlq	$0x3, %rbx
  0x0000028bc1194aee:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194af2:   	testq	%rbx, %rbx
  0x0000028bc1194af5:   	je	0x3
  0x0000028bc1194afb:   	jmpq	*0x58(%rbx)
  0x0000028bc1194afe:   	jmp	-0x52d5e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1194b03:   	hlt
  0x0000028bc1194b04:   	hlt
  0x0000028bc1194b05:   	hlt
  0x0000028bc1194b06:   	hlt
  0x0000028bc1194b07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3400   93     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLL)L (native)
 total in heap  [0x0000028bc1194b90,0x0000028bc1194e30] = 672
 relocation     [0x0000028bc1194cf0,0x0000028bc1194d38] = 72
 main code      [0x0000028bc1194d40,0x0000028bc1194e2a] = 234
 stub code      [0x0000028bc1194e2a,0x0000028bc1194e30] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a92d0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/invoke/MemberName'
  0x0000028bc1194d40:   	movq	0x18(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1194d45:   	testq	%rbx, %rbx
  0x0000028bc1194d48:   	je	0x40
  0x0000028bc1194d4e:   	pushq	%rdi
  0x0000028bc1194d4f:   	pushq	%r10
  0x0000028bc1194d51:   	movl	0x8(%rbx), %edi
  0x0000028bc1194d54:   	movabsq	$0x800000000, %r10
  0x0000028bc1194d5e:   	addq	%r10, %rdi
  0x0000028bc1194d61:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1194d6b:   	cmpq	(%r10), %rdi
  0x0000028bc1194d6e:   	je	0x36
  0x0000028bc1194d74:   	movq	0x40(%rdi), %rdi
  0x0000028bc1194d78:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1194d82:   	cmpq	(%r10), %rdi
  0x0000028bc1194d85:   	je	0x1f
  0x0000028bc1194d8b:   	popq	%r10
  0x0000028bc1194d8d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1194d8e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1194d98:   	andq	$-0x10, %rsp
  0x0000028bc1194d9c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194da6:   	callq	*%r10
  0x0000028bc1194da9:   	hlt
 ;; L_ok:
  0x0000028bc1194daa:   	popq	%r10
  0x0000028bc1194dac:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1194dad:   	movl	0xc(%rbx), %eax
  0x0000028bc1194db0:   	shrl	$0x18, %eax
  0x0000028bc1194db3:   	andl	$0xf, %eax
  0x0000028bc1194db6:   	cmpl	$0x6, %eax
  0x0000028bc1194db9:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1194dbf:   	movabsq	$0x28bdc33e630, %rcx;   {external_word}
  0x0000028bc1194dc9:   	andq	$-0x10, %rsp
  0x0000028bc1194dcd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194dd7:   	callq	*%r10
  0x0000028bc1194dda:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1194ddb:   	movl	0x24(%rbx), %ebx
  0x0000028bc1194dde:   	pushq	%r10
  0x0000028bc1194de0:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194dea:   	cmpq	(%r10), %r12
  0x0000028bc1194ded:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194df3:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194dfd:   	andq	$-0x10, %rsp
  0x0000028bc1194e01:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194e0b:   	callq	*%r10
  0x0000028bc1194e0e:   	hlt
  0x0000028bc1194e0f:   	popq	%r10
  0x0000028bc1194e11:   	shlq	$0x3, %rbx
  0x0000028bc1194e15:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194e19:   	testq	%rbx, %rbx
  0x0000028bc1194e1c:   	je	0x3
  0x0000028bc1194e22:   	jmpq	*0x58(%rbx)
  0x0000028bc1194e25:   	jmp	-0x52d90a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1194e2a:   	hlt
  0x0000028bc1194e2b:   	hlt
  0x0000028bc1194e2c:   	hlt
  0x0000028bc1194e2d:   	hlt
  0x0000028bc1194e2e:   	hlt
  0x0000028bc1194e2f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3403   93     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLL)L (native)
 total in heap  [0x0000028bc1194b90,0x0000028bc1194e30] = 672
 relocation     [0x0000028bc1194cf0,0x0000028bc1194d38] = 72
 main code      [0x0000028bc1194d40,0x0000028bc1194e2a] = 234
 stub code      [0x0000028bc1194e2a,0x0000028bc1194e30] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a92d0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/invoke/MemberName'
  0x0000028bc1194d40:   	movq	0x18(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1194d45:   	testq	%rbx, %rbx
  0x0000028bc1194d48:   	je	0x40
  0x0000028bc1194d4e:   	pushq	%rdi
  0x0000028bc1194d4f:   	pushq	%r10
  0x0000028bc1194d51:   	movl	0x8(%rbx), %edi
  0x0000028bc1194d54:   	movabsq	$0x800000000, %r10
  0x0000028bc1194d5e:   	addq	%r10, %rdi
  0x0000028bc1194d61:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1194d6b:   	cmpq	(%r10), %rdi
  0x0000028bc1194d6e:   	je	0x36
  0x0000028bc1194d74:   	movq	0x40(%rdi), %rdi
  0x0000028bc1194d78:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1194d82:   	cmpq	(%r10), %rdi
  0x0000028bc1194d85:   	je	0x1f
  0x0000028bc1194d8b:   	popq	%r10
  0x0000028bc1194d8d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1194d8e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1194d98:   	andq	$-0x10, %rsp
  0x0000028bc1194d9c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194da6:   	callq	*%r10
  0x0000028bc1194da9:   	hlt
 ;; L_ok:
  0x0000028bc1194daa:   	popq	%r10
  0x0000028bc1194dac:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1194dad:   	movl	0xc(%rbx), %eax
  0x0000028bc1194db0:   	shrl	$0x18, %eax
  0x0000028bc1194db3:   	andl	$0xf, %eax
  0x0000028bc1194db6:   	cmpl	$0x6, %eax
  0x0000028bc1194db9:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1194dbf:   	movabsq	$0x28bdc33e630, %rcx;   {external_word}
  0x0000028bc1194dc9:   	andq	$-0x10, %rsp
  0x0000028bc1194dcd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194dd7:   	callq	*%r10
  0x0000028bc1194dda:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1194ddb:   	movl	0x24(%rbx), %ebx
  0x0000028bc1194dde:   	pushq	%r10
  0x0000028bc1194de0:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1194dea:   	cmpq	(%r10), %r12
  0x0000028bc1194ded:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1194df3:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1194dfd:   	andq	$-0x10, %rsp
  0x0000028bc1194e01:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1194e0b:   	callq	*%r10
  0x0000028bc1194e0e:   	hlt
  0x0000028bc1194e0f:   	popq	%r10
  0x0000028bc1194e11:   	shlq	$0x3, %rbx
  0x0000028bc1194e15:   	movq	0x10(%rbx), %rbx
  0x0000028bc1194e19:   	testq	%rbx, %rbx
  0x0000028bc1194e1c:   	je	0x3
  0x0000028bc1194e22:   	jmpq	*0x58(%rbx)
  0x0000028bc1194e25:   	jmp	-0x52d90a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1194e2a:   	hlt
  0x0000028bc1194e2b:   	hlt
  0x0000028bc1194e2c:   	hlt
  0x0000028bc1194e2d:   	hlt
  0x0000028bc1194e2e:   	hlt
  0x0000028bc1194e2f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3410   94     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLL)L (native)
 total in heap  [0x0000028bc1194e90,0x0000028bc1195108] = 632
 relocation     [0x0000028bc1194ff0,0x0000028bc1195038] = 72
 main code      [0x0000028bc1195040,0x0000028bc1195103] = 195
 stub code      [0x0000028bc1195103,0x0000028bc1195108] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a9a68} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1195040:   	movl	0x14(%rdx), %ebx
  0x0000028bc1195043:   	pushq	%r10
  0x0000028bc1195045:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119504f:   	cmpq	(%r10), %r12
  0x0000028bc1195052:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195058:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195062:   	andq	$-0x10, %rsp
  0x0000028bc1195066:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195070:   	callq	*%r10
  0x0000028bc1195073:   	hlt
  0x0000028bc1195074:   	popq	%r10
  0x0000028bc1195076:   	shlq	$0x3, %rbx
  0x0000028bc119507a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119507d:   	pushq	%r10
  0x0000028bc119507f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195089:   	cmpq	(%r10), %r12
  0x0000028bc119508c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195092:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119509c:   	andq	$-0x10, %rsp
  0x0000028bc11950a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11950aa:   	callq	*%r10
  0x0000028bc11950ad:   	hlt
  0x0000028bc11950ae:   	popq	%r10
  0x0000028bc11950b0:   	shlq	$0x3, %rbx
  0x0000028bc11950b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11950b7:   	pushq	%r10
  0x0000028bc11950b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11950c3:   	cmpq	(%r10), %r12
  0x0000028bc11950c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11950cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11950d6:   	andq	$-0x10, %rsp
  0x0000028bc11950da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11950e4:   	callq	*%r10
  0x0000028bc11950e7:   	hlt
  0x0000028bc11950e8:   	popq	%r10
  0x0000028bc11950ea:   	shlq	$0x3, %rbx
  0x0000028bc11950ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11950f2:   	testq	%rbx, %rbx
  0x0000028bc11950f5:   	je	0x3
  0x0000028bc11950fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11950fe:   	jmp	-0x52dbe3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1195103:   	hlt
  0x0000028bc1195104:   	hlt
  0x0000028bc1195105:   	hlt
  0x0000028bc1195106:   	hlt
  0x0000028bc1195107:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3413   94     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLL)L (native)
 total in heap  [0x0000028bc1194e90,0x0000028bc1195108] = 632
 relocation     [0x0000028bc1194ff0,0x0000028bc1195038] = 72
 main code      [0x0000028bc1195040,0x0000028bc1195103] = 195
 stub code      [0x0000028bc1195103,0x0000028bc1195108] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84a9a68} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1195040:   	movl	0x14(%rdx), %ebx
  0x0000028bc1195043:   	pushq	%r10
  0x0000028bc1195045:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119504f:   	cmpq	(%r10), %r12
  0x0000028bc1195052:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195058:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195062:   	andq	$-0x10, %rsp
  0x0000028bc1195066:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195070:   	callq	*%r10
  0x0000028bc1195073:   	hlt
  0x0000028bc1195074:   	popq	%r10
  0x0000028bc1195076:   	shlq	$0x3, %rbx
  0x0000028bc119507a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119507d:   	pushq	%r10
  0x0000028bc119507f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195089:   	cmpq	(%r10), %r12
  0x0000028bc119508c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195092:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119509c:   	andq	$-0x10, %rsp
  0x0000028bc11950a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11950aa:   	callq	*%r10
  0x0000028bc11950ad:   	hlt
  0x0000028bc11950ae:   	popq	%r10
  0x0000028bc11950b0:   	shlq	$0x3, %rbx
  0x0000028bc11950b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11950b7:   	pushq	%r10
  0x0000028bc11950b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11950c3:   	cmpq	(%r10), %r12
  0x0000028bc11950c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11950cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11950d6:   	andq	$-0x10, %rsp
  0x0000028bc11950da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11950e4:   	callq	*%r10
  0x0000028bc11950e7:   	hlt
  0x0000028bc11950e8:   	popq	%r10
  0x0000028bc11950ea:   	shlq	$0x3, %rbx
  0x0000028bc11950ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11950f2:   	testq	%rbx, %rbx
  0x0000028bc11950f5:   	je	0x3
  0x0000028bc11950fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11950fe:   	jmp	-0x52dbe3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1195103:   	hlt
  0x0000028bc1195104:   	hlt
  0x0000028bc1195105:   	hlt
  0x0000028bc1195106:   	hlt
  0x0000028bc1195107:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3427   95     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195190,0x0000028bc1195430] = 672
 relocation     [0x0000028bc11952f0,0x0000028bc1195338] = 72
 main code      [0x0000028bc1195340,0x0000028bc119542a] = 234
 stub code      [0x0000028bc119542a,0x0000028bc1195430] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84aebf0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/invoke/MemberName'
  0x0000028bc1195340:   	movq	0x20(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1195345:   	testq	%rbx, %rbx
  0x0000028bc1195348:   	je	0x40
  0x0000028bc119534e:   	pushq	%rdi
  0x0000028bc119534f:   	pushq	%r10
  0x0000028bc1195351:   	movl	0x8(%rbx), %edi
  0x0000028bc1195354:   	movabsq	$0x800000000, %r10
  0x0000028bc119535e:   	addq	%r10, %rdi
  0x0000028bc1195361:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119536b:   	cmpq	(%r10), %rdi
  0x0000028bc119536e:   	je	0x36
  0x0000028bc1195374:   	movq	0x40(%rdi), %rdi
  0x0000028bc1195378:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1195382:   	cmpq	(%r10), %rdi
  0x0000028bc1195385:   	je	0x1f
  0x0000028bc119538b:   	popq	%r10
  0x0000028bc119538d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119538e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1195398:   	andq	$-0x10, %rsp
  0x0000028bc119539c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11953a6:   	callq	*%r10
  0x0000028bc11953a9:   	hlt
 ;; L_ok:
  0x0000028bc11953aa:   	popq	%r10
  0x0000028bc11953ac:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11953ad:   	movl	0xc(%rbx), %eax
  0x0000028bc11953b0:   	shrl	$0x18, %eax
  0x0000028bc11953b3:   	andl	$0xf, %eax
  0x0000028bc11953b6:   	cmpl	$0x6, %eax
  0x0000028bc11953b9:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11953bf:   	movabsq	$0x28bdc33d230, %rcx;   {external_word}
  0x0000028bc11953c9:   	andq	$-0x10, %rsp
  0x0000028bc11953cd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11953d7:   	callq	*%r10
  0x0000028bc11953da:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11953db:   	movl	0x24(%rbx), %ebx
  0x0000028bc11953de:   	pushq	%r10
  0x0000028bc11953e0:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11953ea:   	cmpq	(%r10), %r12
  0x0000028bc11953ed:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11953f3:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11953fd:   	andq	$-0x10, %rsp
  0x0000028bc1195401:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119540b:   	callq	*%r10
  0x0000028bc119540e:   	hlt
  0x0000028bc119540f:   	popq	%r10
  0x0000028bc1195411:   	shlq	$0x3, %rbx
  0x0000028bc1195415:   	movq	0x10(%rbx), %rbx
  0x0000028bc1195419:   	testq	%rbx, %rbx
  0x0000028bc119541c:   	je	0x3
  0x0000028bc1195422:   	jmpq	*0x58(%rbx)
  0x0000028bc1195425:   	jmp	-0x52df0a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119542a:   	hlt
  0x0000028bc119542b:   	hlt
  0x0000028bc119542c:   	hlt
  0x0000028bc119542d:   	hlt
  0x0000028bc119542e:   	hlt
  0x0000028bc119542f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3431   95     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195190,0x0000028bc1195430] = 672
 relocation     [0x0000028bc11952f0,0x0000028bc1195338] = 72
 main code      [0x0000028bc1195340,0x0000028bc119542a] = 234
 stub code      [0x0000028bc119542a,0x0000028bc1195430] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84aebf0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/invoke/MemberName'
  0x0000028bc1195340:   	movq	0x20(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1195345:   	testq	%rbx, %rbx
  0x0000028bc1195348:   	je	0x40
  0x0000028bc119534e:   	pushq	%rdi
  0x0000028bc119534f:   	pushq	%r10
  0x0000028bc1195351:   	movl	0x8(%rbx), %edi
  0x0000028bc1195354:   	movabsq	$0x800000000, %r10
  0x0000028bc119535e:   	addq	%r10, %rdi
  0x0000028bc1195361:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119536b:   	cmpq	(%r10), %rdi
  0x0000028bc119536e:   	je	0x36
  0x0000028bc1195374:   	movq	0x40(%rdi), %rdi
  0x0000028bc1195378:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1195382:   	cmpq	(%r10), %rdi
  0x0000028bc1195385:   	je	0x1f
  0x0000028bc119538b:   	popq	%r10
  0x0000028bc119538d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119538e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1195398:   	andq	$-0x10, %rsp
  0x0000028bc119539c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11953a6:   	callq	*%r10
  0x0000028bc11953a9:   	hlt
 ;; L_ok:
  0x0000028bc11953aa:   	popq	%r10
  0x0000028bc11953ac:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11953ad:   	movl	0xc(%rbx), %eax
  0x0000028bc11953b0:   	shrl	$0x18, %eax
  0x0000028bc11953b3:   	andl	$0xf, %eax
  0x0000028bc11953b6:   	cmpl	$0x6, %eax
  0x0000028bc11953b9:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11953bf:   	movabsq	$0x28bdc33d230, %rcx;   {external_word}
  0x0000028bc11953c9:   	andq	$-0x10, %rsp
  0x0000028bc11953cd:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11953d7:   	callq	*%r10
  0x0000028bc11953da:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11953db:   	movl	0x24(%rbx), %ebx
  0x0000028bc11953de:   	pushq	%r10
  0x0000028bc11953e0:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11953ea:   	cmpq	(%r10), %r12
  0x0000028bc11953ed:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11953f3:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11953fd:   	andq	$-0x10, %rsp
  0x0000028bc1195401:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119540b:   	callq	*%r10
  0x0000028bc119540e:   	hlt
  0x0000028bc119540f:   	popq	%r10
  0x0000028bc1195411:   	shlq	$0x3, %rbx
  0x0000028bc1195415:   	movq	0x10(%rbx), %rbx
  0x0000028bc1195419:   	testq	%rbx, %rbx
  0x0000028bc119541c:   	je	0x3
  0x0000028bc1195422:   	jmpq	*0x58(%rbx)
  0x0000028bc1195425:   	jmp	-0x52df0a           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119542a:   	hlt
  0x0000028bc119542b:   	hlt
  0x0000028bc119542c:   	hlt
  0x0000028bc119542d:   	hlt
  0x0000028bc119542e:   	hlt
  0x0000028bc119542f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3440   96     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195490,0x0000028bc1195708] = 632
 relocation     [0x0000028bc11955f0,0x0000028bc1195638] = 72
 main code      [0x0000028bc1195640,0x0000028bc1195703] = 195
 stub code      [0x0000028bc1195703,0x0000028bc1195708] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84af0a8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1195640:   	movl	0x14(%rdx), %ebx
  0x0000028bc1195643:   	pushq	%r10
  0x0000028bc1195645:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119564f:   	cmpq	(%r10), %r12
  0x0000028bc1195652:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195658:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195662:   	andq	$-0x10, %rsp
  0x0000028bc1195666:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195670:   	callq	*%r10
  0x0000028bc1195673:   	hlt
  0x0000028bc1195674:   	popq	%r10
  0x0000028bc1195676:   	shlq	$0x3, %rbx
  0x0000028bc119567a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119567d:   	pushq	%r10
  0x0000028bc119567f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195689:   	cmpq	(%r10), %r12
  0x0000028bc119568c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195692:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119569c:   	andq	$-0x10, %rsp
  0x0000028bc11956a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11956aa:   	callq	*%r10
  0x0000028bc11956ad:   	hlt
  0x0000028bc11956ae:   	popq	%r10
  0x0000028bc11956b0:   	shlq	$0x3, %rbx
  0x0000028bc11956b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11956b7:   	pushq	%r10
  0x0000028bc11956b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11956c3:   	cmpq	(%r10), %r12
  0x0000028bc11956c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11956cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11956d6:   	andq	$-0x10, %rsp
  0x0000028bc11956da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11956e4:   	callq	*%r10
  0x0000028bc11956e7:   	hlt
  0x0000028bc11956e8:   	popq	%r10
  0x0000028bc11956ea:   	shlq	$0x3, %rbx
  0x0000028bc11956ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11956f2:   	testq	%rbx, %rbx
  0x0000028bc11956f5:   	je	0x3
  0x0000028bc11956fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11956fe:   	jmp	-0x52e1e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1195703:   	hlt
  0x0000028bc1195704:   	hlt
  0x0000028bc1195705:   	hlt
  0x0000028bc1195706:   	hlt
  0x0000028bc1195707:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3444   96     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195490,0x0000028bc1195708] = 632
 relocation     [0x0000028bc11955f0,0x0000028bc1195638] = 72
 main code      [0x0000028bc1195640,0x0000028bc1195703] = 195
 stub code      [0x0000028bc1195703,0x0000028bc1195708] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84af0a8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1195640:   	movl	0x14(%rdx), %ebx
  0x0000028bc1195643:   	pushq	%r10
  0x0000028bc1195645:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119564f:   	cmpq	(%r10), %r12
  0x0000028bc1195652:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195658:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195662:   	andq	$-0x10, %rsp
  0x0000028bc1195666:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195670:   	callq	*%r10
  0x0000028bc1195673:   	hlt
  0x0000028bc1195674:   	popq	%r10
  0x0000028bc1195676:   	shlq	$0x3, %rbx
  0x0000028bc119567a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119567d:   	pushq	%r10
  0x0000028bc119567f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195689:   	cmpq	(%r10), %r12
  0x0000028bc119568c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195692:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119569c:   	andq	$-0x10, %rsp
  0x0000028bc11956a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11956aa:   	callq	*%r10
  0x0000028bc11956ad:   	hlt
  0x0000028bc11956ae:   	popq	%r10
  0x0000028bc11956b0:   	shlq	$0x3, %rbx
  0x0000028bc11956b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11956b7:   	pushq	%r10
  0x0000028bc11956b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11956c3:   	cmpq	(%r10), %r12
  0x0000028bc11956c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11956cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11956d6:   	andq	$-0x10, %rsp
  0x0000028bc11956da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11956e4:   	callq	*%r10
  0x0000028bc11956e7:   	hlt
  0x0000028bc11956e8:   	popq	%r10
  0x0000028bc11956ea:   	shlq	$0x3, %rbx
  0x0000028bc11956ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11956f2:   	testq	%rbx, %rbx
  0x0000028bc11956f5:   	je	0x3
  0x0000028bc11956fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11956fe:   	jmp	-0x52e1e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1195703:   	hlt
  0x0000028bc1195704:   	hlt
  0x0000028bc1195705:   	hlt
  0x0000028bc1195706:   	hlt
  0x0000028bc1195707:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3451   97     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195790,0x0000028bc1195a08] = 632
 relocation     [0x0000028bc11958f0,0x0000028bc1195938] = 72
 main code      [0x0000028bc1195940,0x0000028bc1195a03] = 195
 stub code      [0x0000028bc1195a03,0x0000028bc1195a08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84af618} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1195940:   	movl	0x14(%rdx), %ebx
  0x0000028bc1195943:   	pushq	%r10
  0x0000028bc1195945:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119594f:   	cmpq	(%r10), %r12
  0x0000028bc1195952:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195958:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195962:   	andq	$-0x10, %rsp
  0x0000028bc1195966:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195970:   	callq	*%r10
  0x0000028bc1195973:   	hlt
  0x0000028bc1195974:   	popq	%r10
  0x0000028bc1195976:   	shlq	$0x3, %rbx
  0x0000028bc119597a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119597d:   	pushq	%r10
  0x0000028bc119597f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195989:   	cmpq	(%r10), %r12
  0x0000028bc119598c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195992:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119599c:   	andq	$-0x10, %rsp
  0x0000028bc11959a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11959aa:   	callq	*%r10
  0x0000028bc11959ad:   	hlt
  0x0000028bc11959ae:   	popq	%r10
  0x0000028bc11959b0:   	shlq	$0x3, %rbx
  0x0000028bc11959b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11959b7:   	pushq	%r10
  0x0000028bc11959b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11959c3:   	cmpq	(%r10), %r12
  0x0000028bc11959c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11959cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11959d6:   	andq	$-0x10, %rsp
  0x0000028bc11959da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11959e4:   	callq	*%r10
  0x0000028bc11959e7:   	hlt
  0x0000028bc11959e8:   	popq	%r10
  0x0000028bc11959ea:   	shlq	$0x3, %rbx
  0x0000028bc11959ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11959f2:   	testq	%rbx, %rbx
  0x0000028bc11959f5:   	je	0x3
  0x0000028bc11959fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11959fe:   	jmp	-0x52e4e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1195a03:   	hlt
  0x0000028bc1195a04:   	hlt
  0x0000028bc1195a05:   	hlt
  0x0000028bc1195a06:   	hlt
  0x0000028bc1195a07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3455   97     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195790,0x0000028bc1195a08] = 632
 relocation     [0x0000028bc11958f0,0x0000028bc1195938] = 72
 main code      [0x0000028bc1195940,0x0000028bc1195a03] = 195
 stub code      [0x0000028bc1195a03,0x0000028bc1195a08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84af618} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc1195940:   	movl	0x14(%rdx), %ebx
  0x0000028bc1195943:   	pushq	%r10
  0x0000028bc1195945:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119594f:   	cmpq	(%r10), %r12
  0x0000028bc1195952:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195958:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195962:   	andq	$-0x10, %rsp
  0x0000028bc1195966:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195970:   	callq	*%r10
  0x0000028bc1195973:   	hlt
  0x0000028bc1195974:   	popq	%r10
  0x0000028bc1195976:   	shlq	$0x3, %rbx
  0x0000028bc119597a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119597d:   	pushq	%r10
  0x0000028bc119597f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195989:   	cmpq	(%r10), %r12
  0x0000028bc119598c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195992:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119599c:   	andq	$-0x10, %rsp
  0x0000028bc11959a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11959aa:   	callq	*%r10
  0x0000028bc11959ad:   	hlt
  0x0000028bc11959ae:   	popq	%r10
  0x0000028bc11959b0:   	shlq	$0x3, %rbx
  0x0000028bc11959b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc11959b7:   	pushq	%r10
  0x0000028bc11959b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11959c3:   	cmpq	(%r10), %r12
  0x0000028bc11959c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11959cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11959d6:   	andq	$-0x10, %rsp
  0x0000028bc11959da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11959e4:   	callq	*%r10
  0x0000028bc11959e7:   	hlt
  0x0000028bc11959e8:   	popq	%r10
  0x0000028bc11959ea:   	shlq	$0x3, %rbx
  0x0000028bc11959ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc11959f2:   	testq	%rbx, %rbx
  0x0000028bc11959f5:   	je	0x3
  0x0000028bc11959fb:   	jmpq	*0x58(%rbx)
  0x0000028bc11959fe:   	jmp	-0x52e4e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1195a03:   	hlt
  0x0000028bc1195a04:   	hlt
  0x0000028bc1195a05:   	hlt
  0x0000028bc1195a06:   	hlt
  0x0000028bc1195a07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3458   98     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195a90,0x0000028bc1195e90] = 1024
 relocation     [0x0000028bc1195bf0,0x0000028bc1195c80] = 144
 main code      [0x0000028bc1195c80,0x0000028bc1195e90] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84af750} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/invoke/MemberName'
  0x0000028bc1195c80:   	movq	0x30(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1195c85:   	testq	%rbx, %rbx
  0x0000028bc1195c88:   	je	0x40
  0x0000028bc1195c8e:   	pushq	%rdi
  0x0000028bc1195c8f:   	pushq	%r10
  0x0000028bc1195c91:   	movl	0x8(%rbx), %edi
  0x0000028bc1195c94:   	movabsq	$0x800000000, %r10
  0x0000028bc1195c9e:   	addq	%r10, %rdi
  0x0000028bc1195ca1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1195cab:   	cmpq	(%r10), %rdi
  0x0000028bc1195cae:   	je	0x36
  0x0000028bc1195cb4:   	movq	0x40(%rdi), %rdi
  0x0000028bc1195cb8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1195cc2:   	cmpq	(%r10), %rdi
  0x0000028bc1195cc5:   	je	0x1f
  0x0000028bc1195ccb:   	popq	%r10
  0x0000028bc1195ccd:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1195cce:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1195cd8:   	andq	$-0x10, %rsp
  0x0000028bc1195cdc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195ce6:   	callq	*%r10
  0x0000028bc1195ce9:   	hlt
 ;; L_ok:
  0x0000028bc1195cea:   	popq	%r10
  0x0000028bc1195cec:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1195ced:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1195cf0:   	movl	0x8(%rdx), %r10d
  0x0000028bc1195cf4:   	movabsq	$0x800000000, %r11
  0x0000028bc1195cfe:   	addq	%r11, %r10
  0x0000028bc1195d01:   	movl	0x18(%rbx), %r11d
  0x0000028bc1195d05:   	pushq	%r10
  0x0000028bc1195d07:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195d11:   	cmpq	(%r10), %r12
  0x0000028bc1195d14:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195d1a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195d24:   	andq	$-0x10, %rsp
  0x0000028bc1195d28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195d32:   	callq	*%r10
  0x0000028bc1195d35:   	hlt
  0x0000028bc1195d36:   	popq	%r10
  0x0000028bc1195d38:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1195d3c:   	testq	%r11, %r11
  0x0000028bc1195d3f:   	je	0x41
  0x0000028bc1195d45:   	pushq	%rdi
  0x0000028bc1195d46:   	pushq	%r10
  0x0000028bc1195d48:   	movl	0x8(%r11), %edi
  0x0000028bc1195d4c:   	movabsq	$0x800000000, %r10
  0x0000028bc1195d56:   	addq	%r10, %rdi
  0x0000028bc1195d59:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1195d63:   	cmpq	(%r10), %rdi
  0x0000028bc1195d66:   	je	0x36
  0x0000028bc1195d6c:   	movq	0x40(%rdi), %rdi
  0x0000028bc1195d70:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1195d7a:   	cmpq	(%r10), %rdi
  0x0000028bc1195d7d:   	je	0x1f
  0x0000028bc1195d83:   	popq	%r10
  0x0000028bc1195d85:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1195d86:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1195d90:   	andq	$-0x10, %rsp
  0x0000028bc1195d94:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195d9e:   	callq	*%r10
  0x0000028bc1195da1:   	hlt
 ;; L_ok:
  0x0000028bc1195da2:   	popq	%r10
  0x0000028bc1195da4:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1195da5:   	movq	0x10(%r11), %r11
  0x0000028bc1195da9:   	cmpq	%r11, %r10
  0x0000028bc1195dac:   	je	0x61
  0x0000028bc1195db2:   	movl	0x1c(%r11), %eax
  0x0000028bc1195db6:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1195dba:   	je	0x53
  0x0000028bc1195dc0:   	cmpl	$0x28, %eax
  0x0000028bc1195dc3:   	jne	0x2e
  0x0000028bc1195dc9:   	movq	%r11, %rax
  0x0000028bc1195dcc:   	pushq	%rcx
  0x0000028bc1195dcd:   	pushq	%rdi
  0x0000028bc1195dce:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1195dd8:   	incl	(%rcx)
  0x0000028bc1195dda:   	movq	0x30(%r10), %rdi
  0x0000028bc1195dde:   	movl	(%rdi), %ecx
  0x0000028bc1195de0:   	addq	$0x8, %rdi
  0x0000028bc1195de4:   	testq	%rax, %rax
  0x0000028bc1195de7:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1195dea:   	popq	%rdi
  0x0000028bc1195deb:   	popq	%rcx
  0x0000028bc1195dec:   	jne	0x9
  0x0000028bc1195dee:   	movq	%r11, 0x28(%r10)
  0x0000028bc1195df2:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1195df7:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1195e01:   	andq	$-0x10, %rsp
  0x0000028bc1195e05:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195e0f:   	callq	*%r10
  0x0000028bc1195e12:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1195e13:   	movl	0xc(%rbx), %eax
  0x0000028bc1195e16:   	shrl	$0x18, %eax
  0x0000028bc1195e19:   	andl	$0xf, %eax
  0x0000028bc1195e1c:   	cmpl	$0x7, %eax
  0x0000028bc1195e1f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1195e25:   	movabsq	$0x28bdc33dab0, %rcx;   {external_word}
  0x0000028bc1195e2f:   	andq	$-0x10, %rsp
  0x0000028bc1195e33:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195e3d:   	callq	*%r10
  0x0000028bc1195e40:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1195e41:   	movl	0x24(%rbx), %ebx
  0x0000028bc1195e44:   	pushq	%r10
  0x0000028bc1195e46:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195e50:   	cmpq	(%r10), %r12
  0x0000028bc1195e53:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195e59:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195e63:   	andq	$-0x10, %rsp
  0x0000028bc1195e67:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195e71:   	callq	*%r10
  0x0000028bc1195e74:   	hlt
  0x0000028bc1195e75:   	popq	%r10
  0x0000028bc1195e77:   	shlq	$0x3, %rbx
  0x0000028bc1195e7b:   	movq	0x10(%rbx), %rbx
  0x0000028bc1195e7f:   	testq	%rbx, %rbx
  0x0000028bc1195e82:   	je	0x3
  0x0000028bc1195e88:   	jmpq	*0x58(%rbx)
  0x0000028bc1195e8b:   	jmp	-0x52e970           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3464   98     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195a90,0x0000028bc1195e90] = 1024
 relocation     [0x0000028bc1195bf0,0x0000028bc1195c80] = 144
 main code      [0x0000028bc1195c80,0x0000028bc1195e90] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84af750} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/invoke/MemberName'
  0x0000028bc1195c80:   	movq	0x30(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1195c85:   	testq	%rbx, %rbx
  0x0000028bc1195c88:   	je	0x40
  0x0000028bc1195c8e:   	pushq	%rdi
  0x0000028bc1195c8f:   	pushq	%r10
  0x0000028bc1195c91:   	movl	0x8(%rbx), %edi
  0x0000028bc1195c94:   	movabsq	$0x800000000, %r10
  0x0000028bc1195c9e:   	addq	%r10, %rdi
  0x0000028bc1195ca1:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1195cab:   	cmpq	(%r10), %rdi
  0x0000028bc1195cae:   	je	0x36
  0x0000028bc1195cb4:   	movq	0x40(%rdi), %rdi
  0x0000028bc1195cb8:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1195cc2:   	cmpq	(%r10), %rdi
  0x0000028bc1195cc5:   	je	0x1f
  0x0000028bc1195ccb:   	popq	%r10
  0x0000028bc1195ccd:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1195cce:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1195cd8:   	andq	$-0x10, %rsp
  0x0000028bc1195cdc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195ce6:   	callq	*%r10
  0x0000028bc1195ce9:   	hlt
 ;; L_ok:
  0x0000028bc1195cea:   	popq	%r10
  0x0000028bc1195cec:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1195ced:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1195cf0:   	movl	0x8(%rdx), %r10d
  0x0000028bc1195cf4:   	movabsq	$0x800000000, %r11
  0x0000028bc1195cfe:   	addq	%r11, %r10
  0x0000028bc1195d01:   	movl	0x18(%rbx), %r11d
  0x0000028bc1195d05:   	pushq	%r10
  0x0000028bc1195d07:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195d11:   	cmpq	(%r10), %r12
  0x0000028bc1195d14:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195d1a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195d24:   	andq	$-0x10, %rsp
  0x0000028bc1195d28:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195d32:   	callq	*%r10
  0x0000028bc1195d35:   	hlt
  0x0000028bc1195d36:   	popq	%r10
  0x0000028bc1195d38:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1195d3c:   	testq	%r11, %r11
  0x0000028bc1195d3f:   	je	0x41
  0x0000028bc1195d45:   	pushq	%rdi
  0x0000028bc1195d46:   	pushq	%r10
  0x0000028bc1195d48:   	movl	0x8(%r11), %edi
  0x0000028bc1195d4c:   	movabsq	$0x800000000, %r10
  0x0000028bc1195d56:   	addq	%r10, %rdi
  0x0000028bc1195d59:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1195d63:   	cmpq	(%r10), %rdi
  0x0000028bc1195d66:   	je	0x36
  0x0000028bc1195d6c:   	movq	0x40(%rdi), %rdi
  0x0000028bc1195d70:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1195d7a:   	cmpq	(%r10), %rdi
  0x0000028bc1195d7d:   	je	0x1f
  0x0000028bc1195d83:   	popq	%r10
  0x0000028bc1195d85:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1195d86:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1195d90:   	andq	$-0x10, %rsp
  0x0000028bc1195d94:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195d9e:   	callq	*%r10
  0x0000028bc1195da1:   	hlt
 ;; L_ok:
  0x0000028bc1195da2:   	popq	%r10
  0x0000028bc1195da4:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1195da5:   	movq	0x10(%r11), %r11
  0x0000028bc1195da9:   	cmpq	%r11, %r10
  0x0000028bc1195dac:   	je	0x61
  0x0000028bc1195db2:   	movl	0x1c(%r11), %eax
  0x0000028bc1195db6:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1195dba:   	je	0x53
  0x0000028bc1195dc0:   	cmpl	$0x28, %eax
  0x0000028bc1195dc3:   	jne	0x2e
  0x0000028bc1195dc9:   	movq	%r11, %rax
  0x0000028bc1195dcc:   	pushq	%rcx
  0x0000028bc1195dcd:   	pushq	%rdi
  0x0000028bc1195dce:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1195dd8:   	incl	(%rcx)
  0x0000028bc1195dda:   	movq	0x30(%r10), %rdi
  0x0000028bc1195dde:   	movl	(%rdi), %ecx
  0x0000028bc1195de0:   	addq	$0x8, %rdi
  0x0000028bc1195de4:   	testq	%rax, %rax
  0x0000028bc1195de7:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1195dea:   	popq	%rdi
  0x0000028bc1195deb:   	popq	%rcx
  0x0000028bc1195dec:   	jne	0x9
  0x0000028bc1195dee:   	movq	%r11, 0x28(%r10)
  0x0000028bc1195df2:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1195df7:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1195e01:   	andq	$-0x10, %rsp
  0x0000028bc1195e05:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195e0f:   	callq	*%r10
  0x0000028bc1195e12:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1195e13:   	movl	0xc(%rbx), %eax
  0x0000028bc1195e16:   	shrl	$0x18, %eax
  0x0000028bc1195e19:   	andl	$0xf, %eax
  0x0000028bc1195e1c:   	cmpl	$0x7, %eax
  0x0000028bc1195e1f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1195e25:   	movabsq	$0x28bdc33dab0, %rcx;   {external_word}
  0x0000028bc1195e2f:   	andq	$-0x10, %rsp
  0x0000028bc1195e33:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195e3d:   	callq	*%r10
  0x0000028bc1195e40:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1195e41:   	movl	0x24(%rbx), %ebx
  0x0000028bc1195e44:   	pushq	%r10
  0x0000028bc1195e46:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1195e50:   	cmpq	(%r10), %r12
  0x0000028bc1195e53:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1195e59:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1195e63:   	andq	$-0x10, %rsp
  0x0000028bc1195e67:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1195e71:   	callq	*%r10
  0x0000028bc1195e74:   	hlt
  0x0000028bc1195e75:   	popq	%r10
  0x0000028bc1195e77:   	shlq	$0x3, %rbx
  0x0000028bc1195e7b:   	movq	0x10(%rbx), %rbx
  0x0000028bc1195e7f:   	testq	%rbx, %rbx
  0x0000028bc1195e82:   	je	0x3
  0x0000028bc1195e88:   	jmpq	*0x58(%rbx)
  0x0000028bc1195e8b:   	jmp	-0x52e970           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3475   99     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195f10,0x0000028bc1196188] = 632
 relocation     [0x0000028bc1196070,0x0000028bc11960b8] = 72
 main code      [0x0000028bc11960c0,0x0000028bc1196183] = 195
 stub code      [0x0000028bc1196183,0x0000028bc1196188] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b0510} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc11960c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11960c3:   	pushq	%r10
  0x0000028bc11960c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11960cf:   	cmpq	(%r10), %r12
  0x0000028bc11960d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11960d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11960e2:   	andq	$-0x10, %rsp
  0x0000028bc11960e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11960f0:   	callq	*%r10
  0x0000028bc11960f3:   	hlt
  0x0000028bc11960f4:   	popq	%r10
  0x0000028bc11960f6:   	shlq	$0x3, %rbx
  0x0000028bc11960fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11960fd:   	pushq	%r10
  0x0000028bc11960ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196109:   	cmpq	(%r10), %r12
  0x0000028bc119610c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196112:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119611c:   	andq	$-0x10, %rsp
  0x0000028bc1196120:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119612a:   	callq	*%r10
  0x0000028bc119612d:   	hlt
  0x0000028bc119612e:   	popq	%r10
  0x0000028bc1196130:   	shlq	$0x3, %rbx
  0x0000028bc1196134:   	movl	0x24(%rbx), %ebx
  0x0000028bc1196137:   	pushq	%r10
  0x0000028bc1196139:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196143:   	cmpq	(%r10), %r12
  0x0000028bc1196146:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119614c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196156:   	andq	$-0x10, %rsp
  0x0000028bc119615a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196164:   	callq	*%r10
  0x0000028bc1196167:   	hlt
  0x0000028bc1196168:   	popq	%r10
  0x0000028bc119616a:   	shlq	$0x3, %rbx
  0x0000028bc119616e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1196172:   	testq	%rbx, %rbx
  0x0000028bc1196175:   	je	0x3
  0x0000028bc119617b:   	jmpq	*0x58(%rbx)
  0x0000028bc119617e:   	jmp	-0x52ec63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1196183:   	hlt
  0x0000028bc1196184:   	hlt
  0x0000028bc1196185:   	hlt
  0x0000028bc1196186:   	hlt
  0x0000028bc1196187:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3479   99     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1195f10,0x0000028bc1196188] = 632
 relocation     [0x0000028bc1196070,0x0000028bc11960b8] = 72
 main code      [0x0000028bc11960c0,0x0000028bc1196183] = 195
 stub code      [0x0000028bc1196183,0x0000028bc1196188] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b0510} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc11960c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11960c3:   	pushq	%r10
  0x0000028bc11960c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11960cf:   	cmpq	(%r10), %r12
  0x0000028bc11960d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11960d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11960e2:   	andq	$-0x10, %rsp
  0x0000028bc11960e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11960f0:   	callq	*%r10
  0x0000028bc11960f3:   	hlt
  0x0000028bc11960f4:   	popq	%r10
  0x0000028bc11960f6:   	shlq	$0x3, %rbx
  0x0000028bc11960fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11960fd:   	pushq	%r10
  0x0000028bc11960ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196109:   	cmpq	(%r10), %r12
  0x0000028bc119610c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196112:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119611c:   	andq	$-0x10, %rsp
  0x0000028bc1196120:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119612a:   	callq	*%r10
  0x0000028bc119612d:   	hlt
  0x0000028bc119612e:   	popq	%r10
  0x0000028bc1196130:   	shlq	$0x3, %rbx
  0x0000028bc1196134:   	movl	0x24(%rbx), %ebx
  0x0000028bc1196137:   	pushq	%r10
  0x0000028bc1196139:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196143:   	cmpq	(%r10), %r12
  0x0000028bc1196146:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119614c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196156:   	andq	$-0x10, %rsp
  0x0000028bc119615a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196164:   	callq	*%r10
  0x0000028bc1196167:   	hlt
  0x0000028bc1196168:   	popq	%r10
  0x0000028bc119616a:   	shlq	$0x3, %rbx
  0x0000028bc119616e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1196172:   	testq	%rbx, %rbx
  0x0000028bc1196175:   	je	0x3
  0x0000028bc119617b:   	jmpq	*0x58(%rbx)
  0x0000028bc119617e:   	jmp	-0x52ec63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1196183:   	hlt
  0x0000028bc1196184:   	hlt
  0x0000028bc1196185:   	hlt
  0x0000028bc1196186:   	hlt
  0x0000028bc1196187:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3483  100     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1196210,0x0000028bc1196610] = 1024
 relocation     [0x0000028bc1196370,0x0000028bc1196400] = 144
 main code      [0x0000028bc1196400,0x0000028bc1196610] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b0910} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = 'java/lang/invoke/MemberName'
  0x0000028bc1196400:   	movq	0x38(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1196405:   	testq	%rbx, %rbx
  0x0000028bc1196408:   	je	0x40
  0x0000028bc119640e:   	pushq	%rdi
  0x0000028bc119640f:   	pushq	%r10
  0x0000028bc1196411:   	movl	0x8(%rbx), %edi
  0x0000028bc1196414:   	movabsq	$0x800000000, %r10
  0x0000028bc119641e:   	addq	%r10, %rdi
  0x0000028bc1196421:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119642b:   	cmpq	(%r10), %rdi
  0x0000028bc119642e:   	je	0x36
  0x0000028bc1196434:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196438:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196442:   	cmpq	(%r10), %rdi
  0x0000028bc1196445:   	je	0x1f
  0x0000028bc119644b:   	popq	%r10
  0x0000028bc119644d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119644e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1196458:   	andq	$-0x10, %rsp
  0x0000028bc119645c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196466:   	callq	*%r10
  0x0000028bc1196469:   	hlt
 ;; L_ok:
  0x0000028bc119646a:   	popq	%r10
  0x0000028bc119646c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119646d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1196470:   	movl	0x8(%rdx), %r10d
  0x0000028bc1196474:   	movabsq	$0x800000000, %r11
  0x0000028bc119647e:   	addq	%r11, %r10
  0x0000028bc1196481:   	movl	0x18(%rbx), %r11d
  0x0000028bc1196485:   	pushq	%r10
  0x0000028bc1196487:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196491:   	cmpq	(%r10), %r12
  0x0000028bc1196494:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119649a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11964a4:   	andq	$-0x10, %rsp
  0x0000028bc11964a8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11964b2:   	callq	*%r10
  0x0000028bc11964b5:   	hlt
  0x0000028bc11964b6:   	popq	%r10
  0x0000028bc11964b8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11964bc:   	testq	%r11, %r11
  0x0000028bc11964bf:   	je	0x41
  0x0000028bc11964c5:   	pushq	%rdi
  0x0000028bc11964c6:   	pushq	%r10
  0x0000028bc11964c8:   	movl	0x8(%r11), %edi
  0x0000028bc11964cc:   	movabsq	$0x800000000, %r10
  0x0000028bc11964d6:   	addq	%r10, %rdi
  0x0000028bc11964d9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11964e3:   	cmpq	(%r10), %rdi
  0x0000028bc11964e6:   	je	0x36
  0x0000028bc11964ec:   	movq	0x40(%rdi), %rdi
  0x0000028bc11964f0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11964fa:   	cmpq	(%r10), %rdi
  0x0000028bc11964fd:   	je	0x1f
  0x0000028bc1196503:   	popq	%r10
  0x0000028bc1196505:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1196506:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1196510:   	andq	$-0x10, %rsp
  0x0000028bc1196514:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119651e:   	callq	*%r10
  0x0000028bc1196521:   	hlt
 ;; L_ok:
  0x0000028bc1196522:   	popq	%r10
  0x0000028bc1196524:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1196525:   	movq	0x10(%r11), %r11
  0x0000028bc1196529:   	cmpq	%r11, %r10
  0x0000028bc119652c:   	je	0x61
  0x0000028bc1196532:   	movl	0x1c(%r11), %eax
  0x0000028bc1196536:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119653a:   	je	0x53
  0x0000028bc1196540:   	cmpl	$0x28, %eax
  0x0000028bc1196543:   	jne	0x2e
  0x0000028bc1196549:   	movq	%r11, %rax
  0x0000028bc119654c:   	pushq	%rcx
  0x0000028bc119654d:   	pushq	%rdi
  0x0000028bc119654e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1196558:   	incl	(%rcx)
  0x0000028bc119655a:   	movq	0x30(%r10), %rdi
  0x0000028bc119655e:   	movl	(%rdi), %ecx
  0x0000028bc1196560:   	addq	$0x8, %rdi
  0x0000028bc1196564:   	testq	%rax, %rax
  0x0000028bc1196567:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119656a:   	popq	%rdi
  0x0000028bc119656b:   	popq	%rcx
  0x0000028bc119656c:   	jne	0x9
  0x0000028bc119656e:   	movq	%r11, 0x28(%r10)
  0x0000028bc1196572:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1196577:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1196581:   	andq	$-0x10, %rsp
  0x0000028bc1196585:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119658f:   	callq	*%r10
  0x0000028bc1196592:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1196593:   	movl	0xc(%rbx), %eax
  0x0000028bc1196596:   	shrl	$0x18, %eax
  0x0000028bc1196599:   	andl	$0xf, %eax
  0x0000028bc119659c:   	cmpl	$0x7, %eax
  0x0000028bc119659f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11965a5:   	movabsq	$0x28bdc33dfb0, %rcx;   {external_word}
  0x0000028bc11965af:   	andq	$-0x10, %rsp
  0x0000028bc11965b3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11965bd:   	callq	*%r10
  0x0000028bc11965c0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11965c1:   	movl	0x24(%rbx), %ebx
  0x0000028bc11965c4:   	pushq	%r10
  0x0000028bc11965c6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11965d0:   	cmpq	(%r10), %r12
  0x0000028bc11965d3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11965d9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11965e3:   	andq	$-0x10, %rsp
  0x0000028bc11965e7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11965f1:   	callq	*%r10
  0x0000028bc11965f4:   	hlt
  0x0000028bc11965f5:   	popq	%r10
  0x0000028bc11965f7:   	shlq	$0x3, %rbx
  0x0000028bc11965fb:   	movq	0x10(%rbx), %rbx
  0x0000028bc11965ff:   	testq	%rbx, %rbx
  0x0000028bc1196602:   	je	0x3
  0x0000028bc1196608:   	jmpq	*0x58(%rbx)
  0x0000028bc119660b:   	jmp	-0x52f0f0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3488  100     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLLL)L (native)
 total in heap  [0x0000028bc1196210,0x0000028bc1196610] = 1024
 relocation     [0x0000028bc1196370,0x0000028bc1196400] = 144
 main code      [0x0000028bc1196400,0x0000028bc1196610] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b0910} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = 'java/lang/invoke/MemberName'
  0x0000028bc1196400:   	movq	0x38(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc1196405:   	testq	%rbx, %rbx
  0x0000028bc1196408:   	je	0x40
  0x0000028bc119640e:   	pushq	%rdi
  0x0000028bc119640f:   	pushq	%r10
  0x0000028bc1196411:   	movl	0x8(%rbx), %edi
  0x0000028bc1196414:   	movabsq	$0x800000000, %r10
  0x0000028bc119641e:   	addq	%r10, %rdi
  0x0000028bc1196421:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119642b:   	cmpq	(%r10), %rdi
  0x0000028bc119642e:   	je	0x36
  0x0000028bc1196434:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196438:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196442:   	cmpq	(%r10), %rdi
  0x0000028bc1196445:   	je	0x1f
  0x0000028bc119644b:   	popq	%r10
  0x0000028bc119644d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119644e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1196458:   	andq	$-0x10, %rsp
  0x0000028bc119645c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196466:   	callq	*%r10
  0x0000028bc1196469:   	hlt
 ;; L_ok:
  0x0000028bc119646a:   	popq	%r10
  0x0000028bc119646c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119646d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc1196470:   	movl	0x8(%rdx), %r10d
  0x0000028bc1196474:   	movabsq	$0x800000000, %r11
  0x0000028bc119647e:   	addq	%r11, %r10
  0x0000028bc1196481:   	movl	0x18(%rbx), %r11d
  0x0000028bc1196485:   	pushq	%r10
  0x0000028bc1196487:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196491:   	cmpq	(%r10), %r12
  0x0000028bc1196494:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119649a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11964a4:   	andq	$-0x10, %rsp
  0x0000028bc11964a8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11964b2:   	callq	*%r10
  0x0000028bc11964b5:   	hlt
  0x0000028bc11964b6:   	popq	%r10
  0x0000028bc11964b8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11964bc:   	testq	%r11, %r11
  0x0000028bc11964bf:   	je	0x41
  0x0000028bc11964c5:   	pushq	%rdi
  0x0000028bc11964c6:   	pushq	%r10
  0x0000028bc11964c8:   	movl	0x8(%r11), %edi
  0x0000028bc11964cc:   	movabsq	$0x800000000, %r10
  0x0000028bc11964d6:   	addq	%r10, %rdi
  0x0000028bc11964d9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11964e3:   	cmpq	(%r10), %rdi
  0x0000028bc11964e6:   	je	0x36
  0x0000028bc11964ec:   	movq	0x40(%rdi), %rdi
  0x0000028bc11964f0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11964fa:   	cmpq	(%r10), %rdi
  0x0000028bc11964fd:   	je	0x1f
  0x0000028bc1196503:   	popq	%r10
  0x0000028bc1196505:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1196506:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1196510:   	andq	$-0x10, %rsp
  0x0000028bc1196514:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119651e:   	callq	*%r10
  0x0000028bc1196521:   	hlt
 ;; L_ok:
  0x0000028bc1196522:   	popq	%r10
  0x0000028bc1196524:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1196525:   	movq	0x10(%r11), %r11
  0x0000028bc1196529:   	cmpq	%r11, %r10
  0x0000028bc119652c:   	je	0x61
  0x0000028bc1196532:   	movl	0x1c(%r11), %eax
  0x0000028bc1196536:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119653a:   	je	0x53
  0x0000028bc1196540:   	cmpl	$0x28, %eax
  0x0000028bc1196543:   	jne	0x2e
  0x0000028bc1196549:   	movq	%r11, %rax
  0x0000028bc119654c:   	pushq	%rcx
  0x0000028bc119654d:   	pushq	%rdi
  0x0000028bc119654e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1196558:   	incl	(%rcx)
  0x0000028bc119655a:   	movq	0x30(%r10), %rdi
  0x0000028bc119655e:   	movl	(%rdi), %ecx
  0x0000028bc1196560:   	addq	$0x8, %rdi
  0x0000028bc1196564:   	testq	%rax, %rax
  0x0000028bc1196567:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119656a:   	popq	%rdi
  0x0000028bc119656b:   	popq	%rcx
  0x0000028bc119656c:   	jne	0x9
  0x0000028bc119656e:   	movq	%r11, 0x28(%r10)
  0x0000028bc1196572:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1196577:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1196581:   	andq	$-0x10, %rsp
  0x0000028bc1196585:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119658f:   	callq	*%r10
  0x0000028bc1196592:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1196593:   	movl	0xc(%rbx), %eax
  0x0000028bc1196596:   	shrl	$0x18, %eax
  0x0000028bc1196599:   	andl	$0xf, %eax
  0x0000028bc119659c:   	cmpl	$0x7, %eax
  0x0000028bc119659f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc11965a5:   	movabsq	$0x28bdc33dfb0, %rcx;   {external_word}
  0x0000028bc11965af:   	andq	$-0x10, %rsp
  0x0000028bc11965b3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11965bd:   	callq	*%r10
  0x0000028bc11965c0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11965c1:   	movl	0x24(%rbx), %ebx
  0x0000028bc11965c4:   	pushq	%r10
  0x0000028bc11965c6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11965d0:   	cmpq	(%r10), %r12
  0x0000028bc11965d3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11965d9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11965e3:   	andq	$-0x10, %rsp
  0x0000028bc11965e7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11965f1:   	callq	*%r10
  0x0000028bc11965f4:   	hlt
  0x0000028bc11965f5:   	popq	%r10
  0x0000028bc11965f7:   	shlq	$0x3, %rbx
  0x0000028bc11965fb:   	movq	0x10(%rbx), %rbx
  0x0000028bc11965ff:   	testq	%rbx, %rbx
  0x0000028bc1196602:   	je	0x3
  0x0000028bc1196608:   	jmpq	*0x58(%rbx)
  0x0000028bc119660b:   	jmp	-0x52f0f0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3521  101     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLIL)L (native)
 total in heap  [0x0000028bc1196690,0x0000028bc1196928] = 664
 relocation     [0x0000028bc11967f0,0x0000028bc1196838] = 72
 main code      [0x0000028bc1196840,0x0000028bc1196925] = 229
 stub code      [0x0000028bc1196925,0x0000028bc1196928] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b4880} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1196840:   	testq	%rdi, %rdi
  0x0000028bc1196843:   	je	0x40
  0x0000028bc1196849:   	pushq	%rdi
  0x0000028bc119684a:   	pushq	%r10
  0x0000028bc119684c:   	movl	0x8(%rdi), %edi
  0x0000028bc119684f:   	movabsq	$0x800000000, %r10
  0x0000028bc1196859:   	addq	%r10, %rdi
  0x0000028bc119685c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196866:   	cmpq	(%r10), %rdi
  0x0000028bc1196869:   	je	0x36
  0x0000028bc119686f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196873:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119687d:   	cmpq	(%r10), %rdi
  0x0000028bc1196880:   	je	0x1f
  0x0000028bc1196886:   	popq	%r10
  0x0000028bc1196888:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1196889:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1196893:   	andq	$-0x10, %rsp
  0x0000028bc1196897:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11968a1:   	callq	*%r10
  0x0000028bc11968a4:   	hlt
 ;; L_ok:
  0x0000028bc11968a5:   	popq	%r10
  0x0000028bc11968a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11968a8:   	movl	0xc(%rdi), %eax
  0x0000028bc11968ab:   	shrl	$0x18, %eax
  0x0000028bc11968ae:   	andl	$0xf, %eax
  0x0000028bc11968b1:   	cmpl	$0x6, %eax
  0x0000028bc11968b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11968ba:   	movabsq	$0x28bdc33db30, %rcx;   {external_word}
  0x0000028bc11968c4:   	andq	$-0x10, %rsp
  0x0000028bc11968c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11968d2:   	callq	*%r10
  0x0000028bc11968d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11968d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc11968d9:   	pushq	%r10
  0x0000028bc11968db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11968e5:   	cmpq	(%r10), %r12
  0x0000028bc11968e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11968ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11968f8:   	andq	$-0x10, %rsp
  0x0000028bc11968fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196906:   	callq	*%r10
  0x0000028bc1196909:   	hlt
  0x0000028bc119690a:   	popq	%r10
  0x0000028bc119690c:   	shlq	$0x3, %rbx
  0x0000028bc1196910:   	movq	0x10(%rbx), %rbx
  0x0000028bc1196914:   	testq	%rbx, %rbx
  0x0000028bc1196917:   	je	0x3
  0x0000028bc119691d:   	jmpq	*0x58(%rbx)
  0x0000028bc1196920:   	jmp	-0x52f405           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1196925:   	hlt
  0x0000028bc1196926:   	hlt
  0x0000028bc1196927:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3524  101     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLIL)L (native)
 total in heap  [0x0000028bc1196690,0x0000028bc1196928] = 664
 relocation     [0x0000028bc11967f0,0x0000028bc1196838] = 72
 main code      [0x0000028bc1196840,0x0000028bc1196925] = 229
 stub code      [0x0000028bc1196925,0x0000028bc1196928] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b4880} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1196840:   	testq	%rdi, %rdi
  0x0000028bc1196843:   	je	0x40
  0x0000028bc1196849:   	pushq	%rdi
  0x0000028bc119684a:   	pushq	%r10
  0x0000028bc119684c:   	movl	0x8(%rdi), %edi
  0x0000028bc119684f:   	movabsq	$0x800000000, %r10
  0x0000028bc1196859:   	addq	%r10, %rdi
  0x0000028bc119685c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196866:   	cmpq	(%r10), %rdi
  0x0000028bc1196869:   	je	0x36
  0x0000028bc119686f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196873:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119687d:   	cmpq	(%r10), %rdi
  0x0000028bc1196880:   	je	0x1f
  0x0000028bc1196886:   	popq	%r10
  0x0000028bc1196888:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1196889:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1196893:   	andq	$-0x10, %rsp
  0x0000028bc1196897:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11968a1:   	callq	*%r10
  0x0000028bc11968a4:   	hlt
 ;; L_ok:
  0x0000028bc11968a5:   	popq	%r10
  0x0000028bc11968a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11968a8:   	movl	0xc(%rdi), %eax
  0x0000028bc11968ab:   	shrl	$0x18, %eax
  0x0000028bc11968ae:   	andl	$0xf, %eax
  0x0000028bc11968b1:   	cmpl	$0x6, %eax
  0x0000028bc11968b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11968ba:   	movabsq	$0x28bdc33db30, %rcx;   {external_word}
  0x0000028bc11968c4:   	andq	$-0x10, %rsp
  0x0000028bc11968c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11968d2:   	callq	*%r10
  0x0000028bc11968d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11968d6:   	movl	0x24(%rdi), %ebx
  0x0000028bc11968d9:   	pushq	%r10
  0x0000028bc11968db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11968e5:   	cmpq	(%r10), %r12
  0x0000028bc11968e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11968ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11968f8:   	andq	$-0x10, %rsp
  0x0000028bc11968fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196906:   	callq	*%r10
  0x0000028bc1196909:   	hlt
  0x0000028bc119690a:   	popq	%r10
  0x0000028bc119690c:   	shlq	$0x3, %rbx
  0x0000028bc1196910:   	movq	0x10(%rbx), %rbx
  0x0000028bc1196914:   	testq	%rbx, %rbx
  0x0000028bc1196917:   	je	0x3
  0x0000028bc119691d:   	jmpq	*0x58(%rbx)
  0x0000028bc1196920:   	jmp	-0x52f405           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1196925:   	hlt
  0x0000028bc1196926:   	hlt
  0x0000028bc1196927:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3530  102     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLI)L (native)
 total in heap  [0x0000028bc1196990,0x0000028bc1196c08] = 632
 relocation     [0x0000028bc1196af0,0x0000028bc1196b38] = 72
 main code      [0x0000028bc1196b40,0x0000028bc1196c03] = 195
 stub code      [0x0000028bc1196c03,0x0000028bc1196c08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b49f8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi       = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1196b40:   	movl	0x14(%rdx), %ebx
  0x0000028bc1196b43:   	pushq	%r10
  0x0000028bc1196b45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196b4f:   	cmpq	(%r10), %r12
  0x0000028bc1196b52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196b58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196b62:   	andq	$-0x10, %rsp
  0x0000028bc1196b66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196b70:   	callq	*%r10
  0x0000028bc1196b73:   	hlt
  0x0000028bc1196b74:   	popq	%r10
  0x0000028bc1196b76:   	shlq	$0x3, %rbx
  0x0000028bc1196b7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc1196b7d:   	pushq	%r10
  0x0000028bc1196b7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196b89:   	cmpq	(%r10), %r12
  0x0000028bc1196b8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196b92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196b9c:   	andq	$-0x10, %rsp
  0x0000028bc1196ba0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196baa:   	callq	*%r10
  0x0000028bc1196bad:   	hlt
  0x0000028bc1196bae:   	popq	%r10
  0x0000028bc1196bb0:   	shlq	$0x3, %rbx
  0x0000028bc1196bb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc1196bb7:   	pushq	%r10
  0x0000028bc1196bb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196bc3:   	cmpq	(%r10), %r12
  0x0000028bc1196bc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196bcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196bd6:   	andq	$-0x10, %rsp
  0x0000028bc1196bda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196be4:   	callq	*%r10
  0x0000028bc1196be7:   	hlt
  0x0000028bc1196be8:   	popq	%r10
  0x0000028bc1196bea:   	shlq	$0x3, %rbx
  0x0000028bc1196bee:   	movq	0x10(%rbx), %rbx
  0x0000028bc1196bf2:   	testq	%rbx, %rbx
  0x0000028bc1196bf5:   	je	0x3
  0x0000028bc1196bfb:   	jmpq	*0x58(%rbx)
  0x0000028bc1196bfe:   	jmp	-0x52f6e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1196c03:   	hlt
  0x0000028bc1196c04:   	hlt
  0x0000028bc1196c05:   	hlt
  0x0000028bc1196c06:   	hlt
  0x0000028bc1196c07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3533  102     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLI)L (native)
 total in heap  [0x0000028bc1196990,0x0000028bc1196c08] = 632
 relocation     [0x0000028bc1196af0,0x0000028bc1196b38] = 72
 main code      [0x0000028bc1196b40,0x0000028bc1196c03] = 195
 stub code      [0x0000028bc1196c03,0x0000028bc1196c08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b49f8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi       = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1196b40:   	movl	0x14(%rdx), %ebx
  0x0000028bc1196b43:   	pushq	%r10
  0x0000028bc1196b45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196b4f:   	cmpq	(%r10), %r12
  0x0000028bc1196b52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196b58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196b62:   	andq	$-0x10, %rsp
  0x0000028bc1196b66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196b70:   	callq	*%r10
  0x0000028bc1196b73:   	hlt
  0x0000028bc1196b74:   	popq	%r10
  0x0000028bc1196b76:   	shlq	$0x3, %rbx
  0x0000028bc1196b7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc1196b7d:   	pushq	%r10
  0x0000028bc1196b7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196b89:   	cmpq	(%r10), %r12
  0x0000028bc1196b8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196b92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196b9c:   	andq	$-0x10, %rsp
  0x0000028bc1196ba0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196baa:   	callq	*%r10
  0x0000028bc1196bad:   	hlt
  0x0000028bc1196bae:   	popq	%r10
  0x0000028bc1196bb0:   	shlq	$0x3, %rbx
  0x0000028bc1196bb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc1196bb7:   	pushq	%r10
  0x0000028bc1196bb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196bc3:   	cmpq	(%r10), %r12
  0x0000028bc1196bc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196bcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196bd6:   	andq	$-0x10, %rsp
  0x0000028bc1196bda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196be4:   	callq	*%r10
  0x0000028bc1196be7:   	hlt
  0x0000028bc1196be8:   	popq	%r10
  0x0000028bc1196bea:   	shlq	$0x3, %rbx
  0x0000028bc1196bee:   	movq	0x10(%rbx), %rbx
  0x0000028bc1196bf2:   	testq	%rbx, %rbx
  0x0000028bc1196bf5:   	je	0x3
  0x0000028bc1196bfb:   	jmpq	*0x58(%rbx)
  0x0000028bc1196bfe:   	jmp	-0x52f6e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1196c03:   	hlt
  0x0000028bc1196c04:   	hlt
  0x0000028bc1196c05:   	hlt
  0x0000028bc1196c06:   	hlt
  0x0000028bc1196c07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3538  103     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLL)I (native)
 total in heap  [0x0000028bc1196c90,0x0000028bc1197080] = 1008
 relocation     [0x0000028bc1196df0,0x0000028bc1196e78] = 136
 main code      [0x0000028bc1196e80,0x0000028bc119707e] = 510
 stub code      [0x0000028bc119707e,0x0000028bc1197080] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5198} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1196e80:   	testq	%r9, %r9
  0x0000028bc1196e83:   	je	0x41
  0x0000028bc1196e89:   	pushq	%rdi
  0x0000028bc1196e8a:   	pushq	%r10
  0x0000028bc1196e8c:   	movl	0x8(%r9), %edi
  0x0000028bc1196e90:   	movabsq	$0x800000000, %r10
  0x0000028bc1196e9a:   	addq	%r10, %rdi
  0x0000028bc1196e9d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196ea7:   	cmpq	(%r10), %rdi
  0x0000028bc1196eaa:   	je	0x36
  0x0000028bc1196eb0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196eb4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196ebe:   	cmpq	(%r10), %rdi
  0x0000028bc1196ec1:   	je	0x1f
  0x0000028bc1196ec7:   	popq	%r10
  0x0000028bc1196ec9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1196eca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1196ed4:   	andq	$-0x10, %rsp
  0x0000028bc1196ed8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196ee2:   	callq	*%r10
  0x0000028bc1196ee5:   	hlt
 ;; L_ok:
  0x0000028bc1196ee6:   	popq	%r10
  0x0000028bc1196ee8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1196ee9:   	movl	0x8(%rdx), %r10d
  0x0000028bc1196eed:   	movabsq	$0x800000000, %r11
  0x0000028bc1196ef7:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc1196efa:   	movl	0x18(%r9), %r11d
  0x0000028bc1196efe:   	pushq	%r10
  0x0000028bc1196f00:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196f0a:   	cmpq	(%r10), %r12
  0x0000028bc1196f0d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196f13:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196f1d:   	andq	$-0x10, %rsp
  0x0000028bc1196f21:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196f2b:   	callq	*%r10
  0x0000028bc1196f2e:   	hlt
  0x0000028bc1196f2f:   	popq	%r10
  0x0000028bc1196f31:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1196f35:   	testq	%r11, %r11
  0x0000028bc1196f38:   	je	0x41
  0x0000028bc1196f3e:   	pushq	%rdi
  0x0000028bc1196f3f:   	pushq	%r10
  0x0000028bc1196f41:   	movl	0x8(%r11), %edi
  0x0000028bc1196f45:   	movabsq	$0x800000000, %r10
  0x0000028bc1196f4f:   	addq	%r10, %rdi
  0x0000028bc1196f52:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1196f5c:   	cmpq	(%r10), %rdi
  0x0000028bc1196f5f:   	je	0x36
  0x0000028bc1196f65:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196f69:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1196f73:   	cmpq	(%r10), %rdi
  0x0000028bc1196f76:   	je	0x1f
  0x0000028bc1196f7c:   	popq	%r10
  0x0000028bc1196f7e:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1196f7f:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1196f89:   	andq	$-0x10, %rsp
  0x0000028bc1196f8d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196f97:   	callq	*%r10
  0x0000028bc1196f9a:   	hlt
 ;; L_ok:
  0x0000028bc1196f9b:   	popq	%r10
  0x0000028bc1196f9d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1196f9e:   	movq	0x10(%r11), %r11
  0x0000028bc1196fa2:   	cmpq	%r11, %r10
  0x0000028bc1196fa5:   	je	0x61
  0x0000028bc1196fab:   	movl	0x1c(%r11), %eax
  0x0000028bc1196faf:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1196fb3:   	je	0x53
  0x0000028bc1196fb9:   	cmpl	$0x28, %eax
  0x0000028bc1196fbc:   	jne	0x2e
  0x0000028bc1196fc2:   	movq	%r11, %rax
  0x0000028bc1196fc5:   	pushq	%rcx
  0x0000028bc1196fc6:   	pushq	%rdi
  0x0000028bc1196fc7:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1196fd1:   	incl	(%rcx)
  0x0000028bc1196fd3:   	movq	0x30(%r10), %rdi
  0x0000028bc1196fd7:   	movl	(%rdi), %ecx
  0x0000028bc1196fd9:   	addq	$0x8, %rdi
  0x0000028bc1196fdd:   	testq	%rax, %rax
  0x0000028bc1196fe0:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1196fe3:   	popq	%rdi
  0x0000028bc1196fe4:   	popq	%rcx
  0x0000028bc1196fe5:   	jne	0x9
  0x0000028bc1196fe7:   	movq	%r11, 0x28(%r10)
  0x0000028bc1196feb:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1196ff0:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1196ffa:   	andq	$-0x10, %rsp
  0x0000028bc1196ffe:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197008:   	callq	*%r10
  0x0000028bc119700b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119700c:   	movl	0xc(%r9), %eax
  0x0000028bc1197010:   	shrl	$0x18, %eax
  0x0000028bc1197013:   	andl	$0xf, %eax
  0x0000028bc1197016:   	cmpl	$0x5, %eax
  0x0000028bc1197019:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc119701f:   	movabsq	$0x28bdc33e3b0, %rcx;   {external_word}
  0x0000028bc1197029:   	andq	$-0x10, %rsp
  0x0000028bc119702d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197037:   	callq	*%r10
  0x0000028bc119703a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119703b:   	movq	0x10(%r9), %r11
  0x0000028bc119703f:   	cmpl	$0x0, %r11d
  0x0000028bc1197043:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1197049:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1197053:   	andq	$-0x10, %rsp
  0x0000028bc1197057:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197061:   	callq	*%r10
  0x0000028bc1197064:   	hlt
 ;; L_index_ok:
  0x0000028bc1197065:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc119706d:   	testq	%rbx, %rbx
  0x0000028bc1197070:   	je	0x3
  0x0000028bc1197076:   	jmpq	*0x58(%rbx)
  0x0000028bc1197079:   	jmp	-0x52fb5e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119707e:   	hlt
  0x0000028bc119707f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3542  103     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLL)I (native)
 total in heap  [0x0000028bc1196c90,0x0000028bc1197080] = 1008
 relocation     [0x0000028bc1196df0,0x0000028bc1196e78] = 136
 main code      [0x0000028bc1196e80,0x0000028bc119707e] = 510
 stub code      [0x0000028bc119707e,0x0000028bc1197080] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5198} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1196e80:   	testq	%r9, %r9
  0x0000028bc1196e83:   	je	0x41
  0x0000028bc1196e89:   	pushq	%rdi
  0x0000028bc1196e8a:   	pushq	%r10
  0x0000028bc1196e8c:   	movl	0x8(%r9), %edi
  0x0000028bc1196e90:   	movabsq	$0x800000000, %r10
  0x0000028bc1196e9a:   	addq	%r10, %rdi
  0x0000028bc1196e9d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196ea7:   	cmpq	(%r10), %rdi
  0x0000028bc1196eaa:   	je	0x36
  0x0000028bc1196eb0:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196eb4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1196ebe:   	cmpq	(%r10), %rdi
  0x0000028bc1196ec1:   	je	0x1f
  0x0000028bc1196ec7:   	popq	%r10
  0x0000028bc1196ec9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1196eca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1196ed4:   	andq	$-0x10, %rsp
  0x0000028bc1196ed8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196ee2:   	callq	*%r10
  0x0000028bc1196ee5:   	hlt
 ;; L_ok:
  0x0000028bc1196ee6:   	popq	%r10
  0x0000028bc1196ee8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1196ee9:   	movl	0x8(%rdx), %r10d
  0x0000028bc1196eed:   	movabsq	$0x800000000, %r11
  0x0000028bc1196ef7:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc1196efa:   	movl	0x18(%r9), %r11d
  0x0000028bc1196efe:   	pushq	%r10
  0x0000028bc1196f00:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1196f0a:   	cmpq	(%r10), %r12
  0x0000028bc1196f0d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1196f13:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1196f1d:   	andq	$-0x10, %rsp
  0x0000028bc1196f21:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196f2b:   	callq	*%r10
  0x0000028bc1196f2e:   	hlt
  0x0000028bc1196f2f:   	popq	%r10
  0x0000028bc1196f31:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1196f35:   	testq	%r11, %r11
  0x0000028bc1196f38:   	je	0x41
  0x0000028bc1196f3e:   	pushq	%rdi
  0x0000028bc1196f3f:   	pushq	%r10
  0x0000028bc1196f41:   	movl	0x8(%r11), %edi
  0x0000028bc1196f45:   	movabsq	$0x800000000, %r10
  0x0000028bc1196f4f:   	addq	%r10, %rdi
  0x0000028bc1196f52:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1196f5c:   	cmpq	(%r10), %rdi
  0x0000028bc1196f5f:   	je	0x36
  0x0000028bc1196f65:   	movq	0x40(%rdi), %rdi
  0x0000028bc1196f69:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1196f73:   	cmpq	(%r10), %rdi
  0x0000028bc1196f76:   	je	0x1f
  0x0000028bc1196f7c:   	popq	%r10
  0x0000028bc1196f7e:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1196f7f:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1196f89:   	andq	$-0x10, %rsp
  0x0000028bc1196f8d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1196f97:   	callq	*%r10
  0x0000028bc1196f9a:   	hlt
 ;; L_ok:
  0x0000028bc1196f9b:   	popq	%r10
  0x0000028bc1196f9d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1196f9e:   	movq	0x10(%r11), %r11
  0x0000028bc1196fa2:   	cmpq	%r11, %r10
  0x0000028bc1196fa5:   	je	0x61
  0x0000028bc1196fab:   	movl	0x1c(%r11), %eax
  0x0000028bc1196faf:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1196fb3:   	je	0x53
  0x0000028bc1196fb9:   	cmpl	$0x28, %eax
  0x0000028bc1196fbc:   	jne	0x2e
  0x0000028bc1196fc2:   	movq	%r11, %rax
  0x0000028bc1196fc5:   	pushq	%rcx
  0x0000028bc1196fc6:   	pushq	%rdi
  0x0000028bc1196fc7:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1196fd1:   	incl	(%rcx)
  0x0000028bc1196fd3:   	movq	0x30(%r10), %rdi
  0x0000028bc1196fd7:   	movl	(%rdi), %ecx
  0x0000028bc1196fd9:   	addq	$0x8, %rdi
  0x0000028bc1196fdd:   	testq	%rax, %rax
  0x0000028bc1196fe0:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1196fe3:   	popq	%rdi
  0x0000028bc1196fe4:   	popq	%rcx
  0x0000028bc1196fe5:   	jne	0x9
  0x0000028bc1196fe7:   	movq	%r11, 0x28(%r10)
  0x0000028bc1196feb:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1196ff0:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1196ffa:   	andq	$-0x10, %rsp
  0x0000028bc1196ffe:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197008:   	callq	*%r10
  0x0000028bc119700b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119700c:   	movl	0xc(%r9), %eax
  0x0000028bc1197010:   	shrl	$0x18, %eax
  0x0000028bc1197013:   	andl	$0xf, %eax
  0x0000028bc1197016:   	cmpl	$0x5, %eax
  0x0000028bc1197019:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc119701f:   	movabsq	$0x28bdc33e3b0, %rcx;   {external_word}
  0x0000028bc1197029:   	andq	$-0x10, %rsp
  0x0000028bc119702d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197037:   	callq	*%r10
  0x0000028bc119703a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119703b:   	movq	0x10(%r9), %r11
  0x0000028bc119703f:   	cmpl	$0x0, %r11d
  0x0000028bc1197043:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1197049:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1197053:   	andq	$-0x10, %rsp
  0x0000028bc1197057:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197061:   	callq	*%r10
  0x0000028bc1197064:   	hlt
 ;; L_index_ok:
  0x0000028bc1197065:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc119706d:   	testq	%rbx, %rbx
  0x0000028bc1197070:   	je	0x3
  0x0000028bc1197076:   	jmpq	*0x58(%rbx)
  0x0000028bc1197079:   	jmp	-0x52fb5e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119707e:   	hlt
  0x0000028bc119707f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3548  104     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)I (native)
 total in heap  [0x0000028bc1197090,0x0000028bc1197480] = 1008
 relocation     [0x0000028bc11971f0,0x0000028bc1197278] = 136
 main code      [0x0000028bc1197280,0x0000028bc119747e] = 510
 stub code      [0x0000028bc119747e,0x0000028bc1197480] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5490} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197280:   	testq	%r8, %r8
  0x0000028bc1197283:   	je	0x41
  0x0000028bc1197289:   	pushq	%rdi
  0x0000028bc119728a:   	pushq	%r10
  0x0000028bc119728c:   	movl	0x8(%r8), %edi
  0x0000028bc1197290:   	movabsq	$0x800000000, %r10
  0x0000028bc119729a:   	addq	%r10, %rdi
  0x0000028bc119729d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11972a7:   	cmpq	(%r10), %rdi
  0x0000028bc11972aa:   	je	0x36
  0x0000028bc11972b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11972b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11972be:   	cmpq	(%r10), %rdi
  0x0000028bc11972c1:   	je	0x1f
  0x0000028bc11972c7:   	popq	%r10
  0x0000028bc11972c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11972ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11972d4:   	andq	$-0x10, %rsp
  0x0000028bc11972d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11972e2:   	callq	*%r10
  0x0000028bc11972e5:   	hlt
 ;; L_ok:
  0x0000028bc11972e6:   	popq	%r10
  0x0000028bc11972e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11972e9:   	movl	0x8(%rdx), %r10d
  0x0000028bc11972ed:   	movabsq	$0x800000000, %r11
  0x0000028bc11972f7:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc11972fa:   	movl	0x18(%r8), %r11d
  0x0000028bc11972fe:   	pushq	%r10
  0x0000028bc1197300:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119730a:   	cmpq	(%r10), %r12
  0x0000028bc119730d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1197313:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119731d:   	andq	$-0x10, %rsp
  0x0000028bc1197321:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119732b:   	callq	*%r10
  0x0000028bc119732e:   	hlt
  0x0000028bc119732f:   	popq	%r10
  0x0000028bc1197331:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1197335:   	testq	%r11, %r11
  0x0000028bc1197338:   	je	0x41
  0x0000028bc119733e:   	pushq	%rdi
  0x0000028bc119733f:   	pushq	%r10
  0x0000028bc1197341:   	movl	0x8(%r11), %edi
  0x0000028bc1197345:   	movabsq	$0x800000000, %r10
  0x0000028bc119734f:   	addq	%r10, %rdi
  0x0000028bc1197352:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119735c:   	cmpq	(%r10), %rdi
  0x0000028bc119735f:   	je	0x36
  0x0000028bc1197365:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197369:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1197373:   	cmpq	(%r10), %rdi
  0x0000028bc1197376:   	je	0x1f
  0x0000028bc119737c:   	popq	%r10
  0x0000028bc119737e:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119737f:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1197389:   	andq	$-0x10, %rsp
  0x0000028bc119738d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197397:   	callq	*%r10
  0x0000028bc119739a:   	hlt
 ;; L_ok:
  0x0000028bc119739b:   	popq	%r10
  0x0000028bc119739d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119739e:   	movq	0x10(%r11), %r11
  0x0000028bc11973a2:   	cmpq	%r11, %r10
  0x0000028bc11973a5:   	je	0x61
  0x0000028bc11973ab:   	movl	0x1c(%r11), %eax
  0x0000028bc11973af:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11973b3:   	je	0x53
  0x0000028bc11973b9:   	cmpl	$0x28, %eax
  0x0000028bc11973bc:   	jne	0x2e
  0x0000028bc11973c2:   	movq	%r11, %rax
  0x0000028bc11973c5:   	pushq	%rcx
  0x0000028bc11973c6:   	pushq	%rdi
  0x0000028bc11973c7:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11973d1:   	incl	(%rcx)
  0x0000028bc11973d3:   	movq	0x30(%r10), %rdi
  0x0000028bc11973d7:   	movl	(%rdi), %ecx
  0x0000028bc11973d9:   	addq	$0x8, %rdi
  0x0000028bc11973dd:   	testq	%rax, %rax
  0x0000028bc11973e0:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11973e3:   	popq	%rdi
  0x0000028bc11973e4:   	popq	%rcx
  0x0000028bc11973e5:   	jne	0x9
  0x0000028bc11973e7:   	movq	%r11, 0x28(%r10)
  0x0000028bc11973eb:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11973f0:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11973fa:   	andq	$-0x10, %rsp
  0x0000028bc11973fe:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197408:   	callq	*%r10
  0x0000028bc119740b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119740c:   	movl	0xc(%r8), %eax
  0x0000028bc1197410:   	shrl	$0x18, %eax
  0x0000028bc1197413:   	andl	$0xf, %eax
  0x0000028bc1197416:   	cmpl	$0x5, %eax
  0x0000028bc1197419:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc119741f:   	movabsq	$0x28bdc33e430, %rcx;   {external_word}
  0x0000028bc1197429:   	andq	$-0x10, %rsp
  0x0000028bc119742d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197437:   	callq	*%r10
  0x0000028bc119743a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119743b:   	movq	0x10(%r8), %r11
  0x0000028bc119743f:   	cmpl	$0x0, %r11d
  0x0000028bc1197443:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1197449:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1197453:   	andq	$-0x10, %rsp
  0x0000028bc1197457:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197461:   	callq	*%r10
  0x0000028bc1197464:   	hlt
 ;; L_index_ok:
  0x0000028bc1197465:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc119746d:   	testq	%rbx, %rbx
  0x0000028bc1197470:   	je	0x3
  0x0000028bc1197476:   	jmpq	*0x58(%rbx)
  0x0000028bc1197479:   	jmp	-0x52ff5e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119747e:   	hlt
  0x0000028bc119747f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3552  104     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)I (native)
 total in heap  [0x0000028bc1197090,0x0000028bc1197480] = 1008
 relocation     [0x0000028bc11971f0,0x0000028bc1197278] = 136
 main code      [0x0000028bc1197280,0x0000028bc119747e] = 510
 stub code      [0x0000028bc119747e,0x0000028bc1197480] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5490} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197280:   	testq	%r8, %r8
  0x0000028bc1197283:   	je	0x41
  0x0000028bc1197289:   	pushq	%rdi
  0x0000028bc119728a:   	pushq	%r10
  0x0000028bc119728c:   	movl	0x8(%r8), %edi
  0x0000028bc1197290:   	movabsq	$0x800000000, %r10
  0x0000028bc119729a:   	addq	%r10, %rdi
  0x0000028bc119729d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11972a7:   	cmpq	(%r10), %rdi
  0x0000028bc11972aa:   	je	0x36
  0x0000028bc11972b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc11972b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11972be:   	cmpq	(%r10), %rdi
  0x0000028bc11972c1:   	je	0x1f
  0x0000028bc11972c7:   	popq	%r10
  0x0000028bc11972c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11972ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11972d4:   	andq	$-0x10, %rsp
  0x0000028bc11972d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11972e2:   	callq	*%r10
  0x0000028bc11972e5:   	hlt
 ;; L_ok:
  0x0000028bc11972e6:   	popq	%r10
  0x0000028bc11972e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11972e9:   	movl	0x8(%rdx), %r10d
  0x0000028bc11972ed:   	movabsq	$0x800000000, %r11
  0x0000028bc11972f7:   	addq	%r11, %r10
 ;; check_receiver {
  0x0000028bc11972fa:   	movl	0x18(%r8), %r11d
  0x0000028bc11972fe:   	pushq	%r10
  0x0000028bc1197300:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119730a:   	cmpq	(%r10), %r12
  0x0000028bc119730d:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1197313:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119731d:   	andq	$-0x10, %rsp
  0x0000028bc1197321:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119732b:   	callq	*%r10
  0x0000028bc119732e:   	hlt
  0x0000028bc119732f:   	popq	%r10
  0x0000028bc1197331:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1197335:   	testq	%r11, %r11
  0x0000028bc1197338:   	je	0x41
  0x0000028bc119733e:   	pushq	%rdi
  0x0000028bc119733f:   	pushq	%r10
  0x0000028bc1197341:   	movl	0x8(%r11), %edi
  0x0000028bc1197345:   	movabsq	$0x800000000, %r10
  0x0000028bc119734f:   	addq	%r10, %rdi
  0x0000028bc1197352:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119735c:   	cmpq	(%r10), %rdi
  0x0000028bc119735f:   	je	0x36
  0x0000028bc1197365:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197369:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1197373:   	cmpq	(%r10), %rdi
  0x0000028bc1197376:   	je	0x1f
  0x0000028bc119737c:   	popq	%r10
  0x0000028bc119737e:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119737f:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1197389:   	andq	$-0x10, %rsp
  0x0000028bc119738d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197397:   	callq	*%r10
  0x0000028bc119739a:   	hlt
 ;; L_ok:
  0x0000028bc119739b:   	popq	%r10
  0x0000028bc119739d:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119739e:   	movq	0x10(%r11), %r11
  0x0000028bc11973a2:   	cmpq	%r11, %r10
  0x0000028bc11973a5:   	je	0x61
  0x0000028bc11973ab:   	movl	0x1c(%r11), %eax
  0x0000028bc11973af:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11973b3:   	je	0x53
  0x0000028bc11973b9:   	cmpl	$0x28, %eax
  0x0000028bc11973bc:   	jne	0x2e
  0x0000028bc11973c2:   	movq	%r11, %rax
  0x0000028bc11973c5:   	pushq	%rcx
  0x0000028bc11973c6:   	pushq	%rdi
  0x0000028bc11973c7:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11973d1:   	incl	(%rcx)
  0x0000028bc11973d3:   	movq	0x30(%r10), %rdi
  0x0000028bc11973d7:   	movl	(%rdi), %ecx
  0x0000028bc11973d9:   	addq	$0x8, %rdi
  0x0000028bc11973dd:   	testq	%rax, %rax
  0x0000028bc11973e0:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11973e3:   	popq	%rdi
  0x0000028bc11973e4:   	popq	%rcx
  0x0000028bc11973e5:   	jne	0x9
  0x0000028bc11973e7:   	movq	%r11, 0x28(%r10)
  0x0000028bc11973eb:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11973f0:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11973fa:   	andq	$-0x10, %rsp
  0x0000028bc11973fe:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197408:   	callq	*%r10
  0x0000028bc119740b:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119740c:   	movl	0xc(%r8), %eax
  0x0000028bc1197410:   	shrl	$0x18, %eax
  0x0000028bc1197413:   	andl	$0xf, %eax
  0x0000028bc1197416:   	cmpl	$0x5, %eax
  0x0000028bc1197419:   	je	0x1c
 ;; verify_ref_kind expected 5
  0x0000028bc119741f:   	movabsq	$0x28bdc33e430, %rcx;   {external_word}
  0x0000028bc1197429:   	andq	$-0x10, %rsp
  0x0000028bc119742d:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197437:   	callq	*%r10
  0x0000028bc119743a:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119743b:   	movq	0x10(%r8), %r11
  0x0000028bc119743f:   	cmpl	$0x0, %r11d
  0x0000028bc1197443:   	jge	0x1c
 ;; no virtual index
  0x0000028bc1197449:   	movabsq	$0x7ffd00c7abe0, %rcx;   {external_word}
  0x0000028bc1197453:   	andq	$-0x10, %rsp
  0x0000028bc1197457:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197461:   	callq	*%r10
  0x0000028bc1197464:   	hlt
 ;; L_index_ok:
  0x0000028bc1197465:   	movq	0x1d0(%r10,%r11,8), %rbx
  0x0000028bc119746d:   	testq	%rbx, %rbx
  0x0000028bc1197470:   	je	0x3
  0x0000028bc1197476:   	jmpq	*0x58(%rbx)
  0x0000028bc1197479:   	jmp	-0x52ff5e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119747e:   	hlt
  0x0000028bc119747f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3569  105     n 0       java.lang.invoke.MethodHandle::linkToStatic(JJL)I (native)
 total in heap  [0x0000028bc1197490,0x0000028bc1197728] = 664
 relocation     [0x0000028bc11975f0,0x0000028bc1197638] = 72
 main code      [0x0000028bc1197640,0x0000028bc1197728] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b55c8} 'linkToStatic' '(JJLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197640:   	testq	%r9, %r9
  0x0000028bc1197643:   	je	0x41
  0x0000028bc1197649:   	pushq	%rdi
  0x0000028bc119764a:   	pushq	%r10
  0x0000028bc119764c:   	movl	0x8(%r9), %edi
  0x0000028bc1197650:   	movabsq	$0x800000000, %r10
  0x0000028bc119765a:   	addq	%r10, %rdi
  0x0000028bc119765d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197667:   	cmpq	(%r10), %rdi
  0x0000028bc119766a:   	je	0x36
  0x0000028bc1197670:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197674:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119767e:   	cmpq	(%r10), %rdi
  0x0000028bc1197681:   	je	0x1f
  0x0000028bc1197687:   	popq	%r10
  0x0000028bc1197689:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119768a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197694:   	andq	$-0x10, %rsp
  0x0000028bc1197698:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11976a2:   	callq	*%r10
  0x0000028bc11976a5:   	hlt
 ;; L_ok:
  0x0000028bc11976a6:   	popq	%r10
  0x0000028bc11976a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11976a9:   	movl	0xc(%r9), %eax
  0x0000028bc11976ad:   	shrl	$0x18, %eax
  0x0000028bc11976b0:   	andl	$0xf, %eax
  0x0000028bc11976b3:   	cmpl	$0x6, %eax
  0x0000028bc11976b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11976bc:   	movabsq	$0x28bdc33cc30, %rcx;   {external_word}
  0x0000028bc11976c6:   	andq	$-0x10, %rsp
  0x0000028bc11976ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11976d4:   	callq	*%r10
  0x0000028bc11976d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11976d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11976dc:   	pushq	%r10
  0x0000028bc11976de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11976e8:   	cmpq	(%r10), %r12
  0x0000028bc11976eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11976f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11976fb:   	andq	$-0x10, %rsp
  0x0000028bc11976ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197709:   	callq	*%r10
  0x0000028bc119770c:   	hlt
  0x0000028bc119770d:   	popq	%r10
  0x0000028bc119770f:   	shlq	$0x3, %rbx
  0x0000028bc1197713:   	movq	0x10(%rbx), %rbx
  0x0000028bc1197717:   	testq	%rbx, %rbx
  0x0000028bc119771a:   	je	0x3
  0x0000028bc1197720:   	jmpq	*0x58(%rbx)
  0x0000028bc1197723:   	jmp	-0x530208           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3576  105     n 0       java.lang.invoke.MethodHandle::linkToStatic(JJL)I (native)
 total in heap  [0x0000028bc1197490,0x0000028bc1197728] = 664
 relocation     [0x0000028bc11975f0,0x0000028bc1197638] = 72
 main code      [0x0000028bc1197640,0x0000028bc1197728] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b55c8} 'linkToStatic' '(JJLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197640:   	testq	%r9, %r9
  0x0000028bc1197643:   	je	0x41
  0x0000028bc1197649:   	pushq	%rdi
  0x0000028bc119764a:   	pushq	%r10
  0x0000028bc119764c:   	movl	0x8(%r9), %edi
  0x0000028bc1197650:   	movabsq	$0x800000000, %r10
  0x0000028bc119765a:   	addq	%r10, %rdi
  0x0000028bc119765d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197667:   	cmpq	(%r10), %rdi
  0x0000028bc119766a:   	je	0x36
  0x0000028bc1197670:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197674:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119767e:   	cmpq	(%r10), %rdi
  0x0000028bc1197681:   	je	0x1f
  0x0000028bc1197687:   	popq	%r10
  0x0000028bc1197689:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119768a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197694:   	andq	$-0x10, %rsp
  0x0000028bc1197698:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11976a2:   	callq	*%r10
  0x0000028bc11976a5:   	hlt
 ;; L_ok:
  0x0000028bc11976a6:   	popq	%r10
  0x0000028bc11976a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11976a9:   	movl	0xc(%r9), %eax
  0x0000028bc11976ad:   	shrl	$0x18, %eax
  0x0000028bc11976b0:   	andl	$0xf, %eax
  0x0000028bc11976b3:   	cmpl	$0x6, %eax
  0x0000028bc11976b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11976bc:   	movabsq	$0x28bdc33cc30, %rcx;   {external_word}
  0x0000028bc11976c6:   	andq	$-0x10, %rsp
  0x0000028bc11976ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11976d4:   	callq	*%r10
  0x0000028bc11976d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11976d8:   	movl	0x24(%r9), %ebx
  0x0000028bc11976dc:   	pushq	%r10
  0x0000028bc11976de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11976e8:   	cmpq	(%r10), %r12
  0x0000028bc11976eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11976f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11976fb:   	andq	$-0x10, %rsp
  0x0000028bc11976ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197709:   	callq	*%r10
  0x0000028bc119770c:   	hlt
  0x0000028bc119770d:   	popq	%r10
  0x0000028bc119770f:   	shlq	$0x3, %rbx
  0x0000028bc1197713:   	movq	0x10(%rbx), %rbx
  0x0000028bc1197717:   	testq	%rbx, %rbx
  0x0000028bc119771a:   	je	0x3
  0x0000028bc1197720:   	jmpq	*0x58(%rbx)
  0x0000028bc1197723:   	jmp	-0x530208           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3591  106     n 0       java.lang.invoke.MethodHandle::linkToStatic(FFL)I (native)
 total in heap  [0x0000028bc1197790,0x0000028bc1197a28] = 664
 relocation     [0x0000028bc11978f0,0x0000028bc1197938] = 72
 main code      [0x0000028bc1197940,0x0000028bc1197a25] = 229
 stub code      [0x0000028bc1197a25,0x0000028bc1197a28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5700} 'linkToStatic' '(FFLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0      = float
  # parm1:    xmm1      = float
  # parm2:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197940:   	testq	%rdx, %rdx
  0x0000028bc1197943:   	je	0x40
  0x0000028bc1197949:   	pushq	%rdi
  0x0000028bc119794a:   	pushq	%r10
  0x0000028bc119794c:   	movl	0x8(%rdx), %edi
  0x0000028bc119794f:   	movabsq	$0x800000000, %r10
  0x0000028bc1197959:   	addq	%r10, %rdi
  0x0000028bc119795c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197966:   	cmpq	(%r10), %rdi
  0x0000028bc1197969:   	je	0x36
  0x0000028bc119796f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197973:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119797d:   	cmpq	(%r10), %rdi
  0x0000028bc1197980:   	je	0x1f
  0x0000028bc1197986:   	popq	%r10
  0x0000028bc1197988:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1197989:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197993:   	andq	$-0x10, %rsp
  0x0000028bc1197997:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11979a1:   	callq	*%r10
  0x0000028bc11979a4:   	hlt
 ;; L_ok:
  0x0000028bc11979a5:   	popq	%r10
  0x0000028bc11979a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11979a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11979ab:   	shrl	$0x18, %eax
  0x0000028bc11979ae:   	andl	$0xf, %eax
  0x0000028bc11979b1:   	cmpl	$0x6, %eax
  0x0000028bc11979b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11979ba:   	movabsq	$0x28bdc33e030, %rcx;   {external_word}
  0x0000028bc11979c4:   	andq	$-0x10, %rsp
  0x0000028bc11979c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11979d2:   	callq	*%r10
  0x0000028bc11979d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11979d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11979d9:   	pushq	%r10
  0x0000028bc11979db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11979e5:   	cmpq	(%r10), %r12
  0x0000028bc11979e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11979ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11979f8:   	andq	$-0x10, %rsp
  0x0000028bc11979fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197a06:   	callq	*%r10
  0x0000028bc1197a09:   	hlt
  0x0000028bc1197a0a:   	popq	%r10
  0x0000028bc1197a0c:   	shlq	$0x3, %rbx
  0x0000028bc1197a10:   	movq	0x10(%rbx), %rbx
  0x0000028bc1197a14:   	testq	%rbx, %rbx
  0x0000028bc1197a17:   	je	0x3
  0x0000028bc1197a1d:   	jmpq	*0x58(%rbx)
  0x0000028bc1197a20:   	jmp	-0x530505           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1197a25:   	hlt
  0x0000028bc1197a26:   	hlt
  0x0000028bc1197a27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3594  106     n 0       java.lang.invoke.MethodHandle::linkToStatic(FFL)I (native)
 total in heap  [0x0000028bc1197790,0x0000028bc1197a28] = 664
 relocation     [0x0000028bc11978f0,0x0000028bc1197938] = 72
 main code      [0x0000028bc1197940,0x0000028bc1197a25] = 229
 stub code      [0x0000028bc1197a25,0x0000028bc1197a28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5700} 'linkToStatic' '(FFLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0      = float
  # parm1:    xmm1      = float
  # parm2:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197940:   	testq	%rdx, %rdx
  0x0000028bc1197943:   	je	0x40
  0x0000028bc1197949:   	pushq	%rdi
  0x0000028bc119794a:   	pushq	%r10
  0x0000028bc119794c:   	movl	0x8(%rdx), %edi
  0x0000028bc119794f:   	movabsq	$0x800000000, %r10
  0x0000028bc1197959:   	addq	%r10, %rdi
  0x0000028bc119795c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197966:   	cmpq	(%r10), %rdi
  0x0000028bc1197969:   	je	0x36
  0x0000028bc119796f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197973:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119797d:   	cmpq	(%r10), %rdi
  0x0000028bc1197980:   	je	0x1f
  0x0000028bc1197986:   	popq	%r10
  0x0000028bc1197988:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1197989:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197993:   	andq	$-0x10, %rsp
  0x0000028bc1197997:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11979a1:   	callq	*%r10
  0x0000028bc11979a4:   	hlt
 ;; L_ok:
  0x0000028bc11979a5:   	popq	%r10
  0x0000028bc11979a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11979a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11979ab:   	shrl	$0x18, %eax
  0x0000028bc11979ae:   	andl	$0xf, %eax
  0x0000028bc11979b1:   	cmpl	$0x6, %eax
  0x0000028bc11979b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11979ba:   	movabsq	$0x28bdc33e030, %rcx;   {external_word}
  0x0000028bc11979c4:   	andq	$-0x10, %rsp
  0x0000028bc11979c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11979d2:   	callq	*%r10
  0x0000028bc11979d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11979d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11979d9:   	pushq	%r10
  0x0000028bc11979db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11979e5:   	cmpq	(%r10), %r12
  0x0000028bc11979e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11979ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11979f8:   	andq	$-0x10, %rsp
  0x0000028bc11979fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197a06:   	callq	*%r10
  0x0000028bc1197a09:   	hlt
  0x0000028bc1197a0a:   	popq	%r10
  0x0000028bc1197a0c:   	shlq	$0x3, %rbx
  0x0000028bc1197a10:   	movq	0x10(%rbx), %rbx
  0x0000028bc1197a14:   	testq	%rbx, %rbx
  0x0000028bc1197a17:   	je	0x3
  0x0000028bc1197a1d:   	jmpq	*0x58(%rbx)
  0x0000028bc1197a20:   	jmp	-0x530505           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1197a25:   	hlt
  0x0000028bc1197a26:   	hlt
  0x0000028bc1197a27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3600  107     n 0       java.lang.invoke.MethodHandle::linkToStatic(DDL)I (native)
 total in heap  [0x0000028bc1197a90,0x0000028bc1197d28] = 664
 relocation     [0x0000028bc1197bf0,0x0000028bc1197c38] = 72
 main code      [0x0000028bc1197c40,0x0000028bc1197d25] = 229
 stub code      [0x0000028bc1197d25,0x0000028bc1197d28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5838} 'linkToStatic' '(DDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    xmm1:xmm1   = double
  # parm2:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197c40:   	testq	%rdx, %rdx
  0x0000028bc1197c43:   	je	0x40
  0x0000028bc1197c49:   	pushq	%rdi
  0x0000028bc1197c4a:   	pushq	%r10
  0x0000028bc1197c4c:   	movl	0x8(%rdx), %edi
  0x0000028bc1197c4f:   	movabsq	$0x800000000, %r10
  0x0000028bc1197c59:   	addq	%r10, %rdi
  0x0000028bc1197c5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197c66:   	cmpq	(%r10), %rdi
  0x0000028bc1197c69:   	je	0x36
  0x0000028bc1197c6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197c73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197c7d:   	cmpq	(%r10), %rdi
  0x0000028bc1197c80:   	je	0x1f
  0x0000028bc1197c86:   	popq	%r10
  0x0000028bc1197c88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1197c89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197c93:   	andq	$-0x10, %rsp
  0x0000028bc1197c97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197ca1:   	callq	*%r10
  0x0000028bc1197ca4:   	hlt
 ;; L_ok:
  0x0000028bc1197ca5:   	popq	%r10
  0x0000028bc1197ca7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1197ca8:   	movl	0xc(%rdx), %eax
  0x0000028bc1197cab:   	shrl	$0x18, %eax
  0x0000028bc1197cae:   	andl	$0xf, %eax
  0x0000028bc1197cb1:   	cmpl	$0x6, %eax
  0x0000028bc1197cb4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1197cba:   	movabsq	$0x28bdc33e1b0, %rcx;   {external_word}
  0x0000028bc1197cc4:   	andq	$-0x10, %rsp
  0x0000028bc1197cc8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197cd2:   	callq	*%r10
  0x0000028bc1197cd5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1197cd6:   	movl	0x24(%rdx), %ebx
  0x0000028bc1197cd9:   	pushq	%r10
  0x0000028bc1197cdb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1197ce5:   	cmpq	(%r10), %r12
  0x0000028bc1197ce8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1197cee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1197cf8:   	andq	$-0x10, %rsp
  0x0000028bc1197cfc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197d06:   	callq	*%r10
  0x0000028bc1197d09:   	hlt
  0x0000028bc1197d0a:   	popq	%r10
  0x0000028bc1197d0c:   	shlq	$0x3, %rbx
  0x0000028bc1197d10:   	movq	0x10(%rbx), %rbx
  0x0000028bc1197d14:   	testq	%rbx, %rbx
  0x0000028bc1197d17:   	je	0x3
  0x0000028bc1197d1d:   	jmpq	*0x58(%rbx)
  0x0000028bc1197d20:   	jmp	-0x530805           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1197d25:   	hlt
  0x0000028bc1197d26:   	hlt
  0x0000028bc1197d27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3602  107     n 0       java.lang.invoke.MethodHandle::linkToStatic(DDL)I (native)
 total in heap  [0x0000028bc1197a90,0x0000028bc1197d28] = 664
 relocation     [0x0000028bc1197bf0,0x0000028bc1197c38] = 72
 main code      [0x0000028bc1197c40,0x0000028bc1197d25] = 229
 stub code      [0x0000028bc1197d25,0x0000028bc1197d28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5838} 'linkToStatic' '(DDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    xmm1:xmm1   = double
  # parm2:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197c40:   	testq	%rdx, %rdx
  0x0000028bc1197c43:   	je	0x40
  0x0000028bc1197c49:   	pushq	%rdi
  0x0000028bc1197c4a:   	pushq	%r10
  0x0000028bc1197c4c:   	movl	0x8(%rdx), %edi
  0x0000028bc1197c4f:   	movabsq	$0x800000000, %r10
  0x0000028bc1197c59:   	addq	%r10, %rdi
  0x0000028bc1197c5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197c66:   	cmpq	(%r10), %rdi
  0x0000028bc1197c69:   	je	0x36
  0x0000028bc1197c6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197c73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197c7d:   	cmpq	(%r10), %rdi
  0x0000028bc1197c80:   	je	0x1f
  0x0000028bc1197c86:   	popq	%r10
  0x0000028bc1197c88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1197c89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197c93:   	andq	$-0x10, %rsp
  0x0000028bc1197c97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197ca1:   	callq	*%r10
  0x0000028bc1197ca4:   	hlt
 ;; L_ok:
  0x0000028bc1197ca5:   	popq	%r10
  0x0000028bc1197ca7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1197ca8:   	movl	0xc(%rdx), %eax
  0x0000028bc1197cab:   	shrl	$0x18, %eax
  0x0000028bc1197cae:   	andl	$0xf, %eax
  0x0000028bc1197cb1:   	cmpl	$0x6, %eax
  0x0000028bc1197cb4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1197cba:   	movabsq	$0x28bdc33e1b0, %rcx;   {external_word}
  0x0000028bc1197cc4:   	andq	$-0x10, %rsp
  0x0000028bc1197cc8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197cd2:   	callq	*%r10
  0x0000028bc1197cd5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1197cd6:   	movl	0x24(%rdx), %ebx
  0x0000028bc1197cd9:   	pushq	%r10
  0x0000028bc1197cdb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1197ce5:   	cmpq	(%r10), %r12
  0x0000028bc1197ce8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1197cee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1197cf8:   	andq	$-0x10, %rsp
  0x0000028bc1197cfc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197d06:   	callq	*%r10
  0x0000028bc1197d09:   	hlt
  0x0000028bc1197d0a:   	popq	%r10
  0x0000028bc1197d0c:   	shlq	$0x3, %rbx
  0x0000028bc1197d10:   	movq	0x10(%rbx), %rbx
  0x0000028bc1197d14:   	testq	%rbx, %rbx
  0x0000028bc1197d17:   	je	0x3
  0x0000028bc1197d1d:   	jmpq	*0x58(%rbx)
  0x0000028bc1197d20:   	jmp	-0x530805           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1197d25:   	hlt
  0x0000028bc1197d26:   	hlt
  0x0000028bc1197d27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3609  108     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)I (native)
 total in heap  [0x0000028bc1197d90,0x0000028bc1198028] = 664
 relocation     [0x0000028bc1197ef0,0x0000028bc1197f38] = 72
 main code      [0x0000028bc1197f40,0x0000028bc1198028] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5c80} 'linkToStatic' '(JLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197f40:   	testq	%r8, %r8
  0x0000028bc1197f43:   	je	0x41
  0x0000028bc1197f49:   	pushq	%rdi
  0x0000028bc1197f4a:   	pushq	%r10
  0x0000028bc1197f4c:   	movl	0x8(%r8), %edi
  0x0000028bc1197f50:   	movabsq	$0x800000000, %r10
  0x0000028bc1197f5a:   	addq	%r10, %rdi
  0x0000028bc1197f5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197f67:   	cmpq	(%r10), %rdi
  0x0000028bc1197f6a:   	je	0x36
  0x0000028bc1197f70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197f74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197f7e:   	cmpq	(%r10), %rdi
  0x0000028bc1197f81:   	je	0x1f
  0x0000028bc1197f87:   	popq	%r10
  0x0000028bc1197f89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1197f8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197f94:   	andq	$-0x10, %rsp
  0x0000028bc1197f98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197fa2:   	callq	*%r10
  0x0000028bc1197fa5:   	hlt
 ;; L_ok:
  0x0000028bc1197fa6:   	popq	%r10
  0x0000028bc1197fa8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1197fa9:   	movl	0xc(%r8), %eax
  0x0000028bc1197fad:   	shrl	$0x18, %eax
  0x0000028bc1197fb0:   	andl	$0xf, %eax
  0x0000028bc1197fb3:   	cmpl	$0x6, %eax
  0x0000028bc1197fb6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1197fbc:   	movabsq	$0x28bdc33d130, %rcx;   {external_word}
  0x0000028bc1197fc6:   	andq	$-0x10, %rsp
  0x0000028bc1197fca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197fd4:   	callq	*%r10
  0x0000028bc1197fd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1197fd8:   	movl	0x24(%r8), %ebx
  0x0000028bc1197fdc:   	pushq	%r10
  0x0000028bc1197fde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1197fe8:   	cmpq	(%r10), %r12
  0x0000028bc1197feb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1197ff1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1197ffb:   	andq	$-0x10, %rsp
  0x0000028bc1197fff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198009:   	callq	*%r10
  0x0000028bc119800c:   	hlt
  0x0000028bc119800d:   	popq	%r10
  0x0000028bc119800f:   	shlq	$0x3, %rbx
  0x0000028bc1198013:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198017:   	testq	%rbx, %rbx
  0x0000028bc119801a:   	je	0x3
  0x0000028bc1198020:   	jmpq	*0x58(%rbx)
  0x0000028bc1198023:   	jmp	-0x530b08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3611  108     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)I (native)
 total in heap  [0x0000028bc1197d90,0x0000028bc1198028] = 664
 relocation     [0x0000028bc1197ef0,0x0000028bc1197f38] = 72
 main code      [0x0000028bc1197f40,0x0000028bc1198028] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5c80} 'linkToStatic' '(JLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1197f40:   	testq	%r8, %r8
  0x0000028bc1197f43:   	je	0x41
  0x0000028bc1197f49:   	pushq	%rdi
  0x0000028bc1197f4a:   	pushq	%r10
  0x0000028bc1197f4c:   	movl	0x8(%r8), %edi
  0x0000028bc1197f50:   	movabsq	$0x800000000, %r10
  0x0000028bc1197f5a:   	addq	%r10, %rdi
  0x0000028bc1197f5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197f67:   	cmpq	(%r10), %rdi
  0x0000028bc1197f6a:   	je	0x36
  0x0000028bc1197f70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1197f74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1197f7e:   	cmpq	(%r10), %rdi
  0x0000028bc1197f81:   	je	0x1f
  0x0000028bc1197f87:   	popq	%r10
  0x0000028bc1197f89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1197f8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1197f94:   	andq	$-0x10, %rsp
  0x0000028bc1197f98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197fa2:   	callq	*%r10
  0x0000028bc1197fa5:   	hlt
 ;; L_ok:
  0x0000028bc1197fa6:   	popq	%r10
  0x0000028bc1197fa8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1197fa9:   	movl	0xc(%r8), %eax
  0x0000028bc1197fad:   	shrl	$0x18, %eax
  0x0000028bc1197fb0:   	andl	$0xf, %eax
  0x0000028bc1197fb3:   	cmpl	$0x6, %eax
  0x0000028bc1197fb6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1197fbc:   	movabsq	$0x28bdc33d130, %rcx;   {external_word}
  0x0000028bc1197fc6:   	andq	$-0x10, %rsp
  0x0000028bc1197fca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1197fd4:   	callq	*%r10
  0x0000028bc1197fd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1197fd8:   	movl	0x24(%r8), %ebx
  0x0000028bc1197fdc:   	pushq	%r10
  0x0000028bc1197fde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1197fe8:   	cmpq	(%r10), %r12
  0x0000028bc1197feb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1197ff1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1197ffb:   	andq	$-0x10, %rsp
  0x0000028bc1197fff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198009:   	callq	*%r10
  0x0000028bc119800c:   	hlt
  0x0000028bc119800d:   	popq	%r10
  0x0000028bc119800f:   	shlq	$0x3, %rbx
  0x0000028bc1198013:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198017:   	testq	%rbx, %rbx
  0x0000028bc119801a:   	je	0x3
  0x0000028bc1198020:   	jmpq	*0x58(%rbx)
  0x0000028bc1198023:   	jmp	-0x530b08           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3615  109     n 0       java.lang.invoke.MethodHandle::linkToStatic(FL)I (native)
 total in heap  [0x0000028bc1198090,0x0000028bc1198328] = 664
 relocation     [0x0000028bc11981f0,0x0000028bc1198238] = 72
 main code      [0x0000028bc1198240,0x0000028bc1198325] = 229
 stub code      [0x0000028bc1198325,0x0000028bc1198328] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5db8} 'linkToStatic' '(FLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0      = float
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198240:   	testq	%rdx, %rdx
  0x0000028bc1198243:   	je	0x40
  0x0000028bc1198249:   	pushq	%rdi
  0x0000028bc119824a:   	pushq	%r10
  0x0000028bc119824c:   	movl	0x8(%rdx), %edi
  0x0000028bc119824f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198259:   	addq	%r10, %rdi
  0x0000028bc119825c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198266:   	cmpq	(%r10), %rdi
  0x0000028bc1198269:   	je	0x36
  0x0000028bc119826f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198273:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119827d:   	cmpq	(%r10), %rdi
  0x0000028bc1198280:   	je	0x1f
  0x0000028bc1198286:   	popq	%r10
  0x0000028bc1198288:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198289:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198293:   	andq	$-0x10, %rsp
  0x0000028bc1198297:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11982a1:   	callq	*%r10
  0x0000028bc11982a4:   	hlt
 ;; L_ok:
  0x0000028bc11982a5:   	popq	%r10
  0x0000028bc11982a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11982a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11982ab:   	shrl	$0x18, %eax
  0x0000028bc11982ae:   	andl	$0xf, %eax
  0x0000028bc11982b1:   	cmpl	$0x6, %eax
  0x0000028bc11982b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11982ba:   	movabsq	$0x28bdc33c8b0, %rcx;   {external_word}
  0x0000028bc11982c4:   	andq	$-0x10, %rsp
  0x0000028bc11982c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11982d2:   	callq	*%r10
  0x0000028bc11982d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11982d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11982d9:   	pushq	%r10
  0x0000028bc11982db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11982e5:   	cmpq	(%r10), %r12
  0x0000028bc11982e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11982ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11982f8:   	andq	$-0x10, %rsp
  0x0000028bc11982fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198306:   	callq	*%r10
  0x0000028bc1198309:   	hlt
  0x0000028bc119830a:   	popq	%r10
  0x0000028bc119830c:   	shlq	$0x3, %rbx
  0x0000028bc1198310:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198314:   	testq	%rbx, %rbx
  0x0000028bc1198317:   	je	0x3
  0x0000028bc119831d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198320:   	jmp	-0x530e05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198325:   	hlt
  0x0000028bc1198326:   	hlt
  0x0000028bc1198327:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3617  109     n 0       java.lang.invoke.MethodHandle::linkToStatic(FL)I (native)
 total in heap  [0x0000028bc1198090,0x0000028bc1198328] = 664
 relocation     [0x0000028bc11981f0,0x0000028bc1198238] = 72
 main code      [0x0000028bc1198240,0x0000028bc1198325] = 229
 stub code      [0x0000028bc1198325,0x0000028bc1198328] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5db8} 'linkToStatic' '(FLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0      = float
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198240:   	testq	%rdx, %rdx
  0x0000028bc1198243:   	je	0x40
  0x0000028bc1198249:   	pushq	%rdi
  0x0000028bc119824a:   	pushq	%r10
  0x0000028bc119824c:   	movl	0x8(%rdx), %edi
  0x0000028bc119824f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198259:   	addq	%r10, %rdi
  0x0000028bc119825c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198266:   	cmpq	(%r10), %rdi
  0x0000028bc1198269:   	je	0x36
  0x0000028bc119826f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198273:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119827d:   	cmpq	(%r10), %rdi
  0x0000028bc1198280:   	je	0x1f
  0x0000028bc1198286:   	popq	%r10
  0x0000028bc1198288:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198289:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198293:   	andq	$-0x10, %rsp
  0x0000028bc1198297:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11982a1:   	callq	*%r10
  0x0000028bc11982a4:   	hlt
 ;; L_ok:
  0x0000028bc11982a5:   	popq	%r10
  0x0000028bc11982a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11982a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11982ab:   	shrl	$0x18, %eax
  0x0000028bc11982ae:   	andl	$0xf, %eax
  0x0000028bc11982b1:   	cmpl	$0x6, %eax
  0x0000028bc11982b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11982ba:   	movabsq	$0x28bdc33c8b0, %rcx;   {external_word}
  0x0000028bc11982c4:   	andq	$-0x10, %rsp
  0x0000028bc11982c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11982d2:   	callq	*%r10
  0x0000028bc11982d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11982d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11982d9:   	pushq	%r10
  0x0000028bc11982db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11982e5:   	cmpq	(%r10), %r12
  0x0000028bc11982e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11982ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11982f8:   	andq	$-0x10, %rsp
  0x0000028bc11982fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198306:   	callq	*%r10
  0x0000028bc1198309:   	hlt
  0x0000028bc119830a:   	popq	%r10
  0x0000028bc119830c:   	shlq	$0x3, %rbx
  0x0000028bc1198310:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198314:   	testq	%rbx, %rbx
  0x0000028bc1198317:   	je	0x3
  0x0000028bc119831d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198320:   	jmp	-0x530e05           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198325:   	hlt
  0x0000028bc1198326:   	hlt
  0x0000028bc1198327:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3621  110     n 0       java.lang.invoke.MethodHandle::linkToStatic(DL)I (native)
 total in heap  [0x0000028bc1198390,0x0000028bc1198628] = 664
 relocation     [0x0000028bc11984f0,0x0000028bc1198538] = 72
 main code      [0x0000028bc1198540,0x0000028bc1198625] = 229
 stub code      [0x0000028bc1198625,0x0000028bc1198628] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5ef0} 'linkToStatic' '(DLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198540:   	testq	%rdx, %rdx
  0x0000028bc1198543:   	je	0x40
  0x0000028bc1198549:   	pushq	%rdi
  0x0000028bc119854a:   	pushq	%r10
  0x0000028bc119854c:   	movl	0x8(%rdx), %edi
  0x0000028bc119854f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198559:   	addq	%r10, %rdi
  0x0000028bc119855c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198566:   	cmpq	(%r10), %rdi
  0x0000028bc1198569:   	je	0x36
  0x0000028bc119856f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198573:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119857d:   	cmpq	(%r10), %rdi
  0x0000028bc1198580:   	je	0x1f
  0x0000028bc1198586:   	popq	%r10
  0x0000028bc1198588:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198589:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198593:   	andq	$-0x10, %rsp
  0x0000028bc1198597:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11985a1:   	callq	*%r10
  0x0000028bc11985a4:   	hlt
 ;; L_ok:
  0x0000028bc11985a5:   	popq	%r10
  0x0000028bc11985a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11985a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11985ab:   	shrl	$0x18, %eax
  0x0000028bc11985ae:   	andl	$0xf, %eax
  0x0000028bc11985b1:   	cmpl	$0x6, %eax
  0x0000028bc11985b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11985ba:   	movabsq	$0x28bdc33e4b0, %rcx;   {external_word}
  0x0000028bc11985c4:   	andq	$-0x10, %rsp
  0x0000028bc11985c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11985d2:   	callq	*%r10
  0x0000028bc11985d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11985d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11985d9:   	pushq	%r10
  0x0000028bc11985db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11985e5:   	cmpq	(%r10), %r12
  0x0000028bc11985e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11985ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11985f8:   	andq	$-0x10, %rsp
  0x0000028bc11985fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198606:   	callq	*%r10
  0x0000028bc1198609:   	hlt
  0x0000028bc119860a:   	popq	%r10
  0x0000028bc119860c:   	shlq	$0x3, %rbx
  0x0000028bc1198610:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198614:   	testq	%rbx, %rbx
  0x0000028bc1198617:   	je	0x3
  0x0000028bc119861d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198620:   	jmp	-0x531105           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198625:   	hlt
  0x0000028bc1198626:   	hlt
  0x0000028bc1198627:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3624  110     n 0       java.lang.invoke.MethodHandle::linkToStatic(DL)I (native)
 total in heap  [0x0000028bc1198390,0x0000028bc1198628] = 664
 relocation     [0x0000028bc11984f0,0x0000028bc1198538] = 72
 main code      [0x0000028bc1198540,0x0000028bc1198625] = 229
 stub code      [0x0000028bc1198625,0x0000028bc1198628] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b5ef0} 'linkToStatic' '(DLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198540:   	testq	%rdx, %rdx
  0x0000028bc1198543:   	je	0x40
  0x0000028bc1198549:   	pushq	%rdi
  0x0000028bc119854a:   	pushq	%r10
  0x0000028bc119854c:   	movl	0x8(%rdx), %edi
  0x0000028bc119854f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198559:   	addq	%r10, %rdi
  0x0000028bc119855c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198566:   	cmpq	(%r10), %rdi
  0x0000028bc1198569:   	je	0x36
  0x0000028bc119856f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198573:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119857d:   	cmpq	(%r10), %rdi
  0x0000028bc1198580:   	je	0x1f
  0x0000028bc1198586:   	popq	%r10
  0x0000028bc1198588:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198589:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198593:   	andq	$-0x10, %rsp
  0x0000028bc1198597:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11985a1:   	callq	*%r10
  0x0000028bc11985a4:   	hlt
 ;; L_ok:
  0x0000028bc11985a5:   	popq	%r10
  0x0000028bc11985a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11985a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11985ab:   	shrl	$0x18, %eax
  0x0000028bc11985ae:   	andl	$0xf, %eax
  0x0000028bc11985b1:   	cmpl	$0x6, %eax
  0x0000028bc11985b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11985ba:   	movabsq	$0x28bdc33e4b0, %rcx;   {external_word}
  0x0000028bc11985c4:   	andq	$-0x10, %rsp
  0x0000028bc11985c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11985d2:   	callq	*%r10
  0x0000028bc11985d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11985d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11985d9:   	pushq	%r10
  0x0000028bc11985db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11985e5:   	cmpq	(%r10), %r12
  0x0000028bc11985e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11985ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11985f8:   	andq	$-0x10, %rsp
  0x0000028bc11985fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198606:   	callq	*%r10
  0x0000028bc1198609:   	hlt
  0x0000028bc119860a:   	popq	%r10
  0x0000028bc119860c:   	shlq	$0x3, %rbx
  0x0000028bc1198610:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198614:   	testq	%rbx, %rbx
  0x0000028bc1198617:   	je	0x3
  0x0000028bc119861d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198620:   	jmp	-0x531105           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198625:   	hlt
  0x0000028bc1198626:   	hlt
  0x0000028bc1198627:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3633  111     n 0       java.lang.invoke.MethodHandle::linkToStatic(FL)L (native)
 total in heap  [0x0000028bc1198690,0x0000028bc1198928] = 664
 relocation     [0x0000028bc11987f0,0x0000028bc1198838] = 72
 main code      [0x0000028bc1198840,0x0000028bc1198925] = 229
 stub code      [0x0000028bc1198925,0x0000028bc1198928] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b6028} 'linkToStatic' '(FLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0      = float
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198840:   	testq	%rdx, %rdx
  0x0000028bc1198843:   	je	0x40
  0x0000028bc1198849:   	pushq	%rdi
  0x0000028bc119884a:   	pushq	%r10
  0x0000028bc119884c:   	movl	0x8(%rdx), %edi
  0x0000028bc119884f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198859:   	addq	%r10, %rdi
  0x0000028bc119885c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198866:   	cmpq	(%r10), %rdi
  0x0000028bc1198869:   	je	0x36
  0x0000028bc119886f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198873:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119887d:   	cmpq	(%r10), %rdi
  0x0000028bc1198880:   	je	0x1f
  0x0000028bc1198886:   	popq	%r10
  0x0000028bc1198888:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198889:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198893:   	andq	$-0x10, %rsp
  0x0000028bc1198897:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11988a1:   	callq	*%r10
  0x0000028bc11988a4:   	hlt
 ;; L_ok:
  0x0000028bc11988a5:   	popq	%r10
  0x0000028bc11988a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11988a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11988ab:   	shrl	$0x18, %eax
  0x0000028bc11988ae:   	andl	$0xf, %eax
  0x0000028bc11988b1:   	cmpl	$0x6, %eax
  0x0000028bc11988b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11988ba:   	movabsq	$0x28bdc33d530, %rcx;   {external_word}
  0x0000028bc11988c4:   	andq	$-0x10, %rsp
  0x0000028bc11988c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11988d2:   	callq	*%r10
  0x0000028bc11988d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11988d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11988d9:   	pushq	%r10
  0x0000028bc11988db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11988e5:   	cmpq	(%r10), %r12
  0x0000028bc11988e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11988ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11988f8:   	andq	$-0x10, %rsp
  0x0000028bc11988fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198906:   	callq	*%r10
  0x0000028bc1198909:   	hlt
  0x0000028bc119890a:   	popq	%r10
  0x0000028bc119890c:   	shlq	$0x3, %rbx
  0x0000028bc1198910:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198914:   	testq	%rbx, %rbx
  0x0000028bc1198917:   	je	0x3
  0x0000028bc119891d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198920:   	jmp	-0x531405           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198925:   	hlt
  0x0000028bc1198926:   	hlt
  0x0000028bc1198927:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3640  111     n 0       java.lang.invoke.MethodHandle::linkToStatic(FL)L (native)
 total in heap  [0x0000028bc1198690,0x0000028bc1198928] = 664
 relocation     [0x0000028bc11987f0,0x0000028bc1198838] = 72
 main code      [0x0000028bc1198840,0x0000028bc1198925] = 229
 stub code      [0x0000028bc1198925,0x0000028bc1198928] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b6028} 'linkToStatic' '(FLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0      = float
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198840:   	testq	%rdx, %rdx
  0x0000028bc1198843:   	je	0x40
  0x0000028bc1198849:   	pushq	%rdi
  0x0000028bc119884a:   	pushq	%r10
  0x0000028bc119884c:   	movl	0x8(%rdx), %edi
  0x0000028bc119884f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198859:   	addq	%r10, %rdi
  0x0000028bc119885c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198866:   	cmpq	(%r10), %rdi
  0x0000028bc1198869:   	je	0x36
  0x0000028bc119886f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198873:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119887d:   	cmpq	(%r10), %rdi
  0x0000028bc1198880:   	je	0x1f
  0x0000028bc1198886:   	popq	%r10
  0x0000028bc1198888:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198889:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198893:   	andq	$-0x10, %rsp
  0x0000028bc1198897:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11988a1:   	callq	*%r10
  0x0000028bc11988a4:   	hlt
 ;; L_ok:
  0x0000028bc11988a5:   	popq	%r10
  0x0000028bc11988a7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc11988a8:   	movl	0xc(%rdx), %eax
  0x0000028bc11988ab:   	shrl	$0x18, %eax
  0x0000028bc11988ae:   	andl	$0xf, %eax
  0x0000028bc11988b1:   	cmpl	$0x6, %eax
  0x0000028bc11988b4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc11988ba:   	movabsq	$0x28bdc33d530, %rcx;   {external_word}
  0x0000028bc11988c4:   	andq	$-0x10, %rsp
  0x0000028bc11988c8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11988d2:   	callq	*%r10
  0x0000028bc11988d5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc11988d6:   	movl	0x24(%rdx), %ebx
  0x0000028bc11988d9:   	pushq	%r10
  0x0000028bc11988db:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11988e5:   	cmpq	(%r10), %r12
  0x0000028bc11988e8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11988ee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11988f8:   	andq	$-0x10, %rsp
  0x0000028bc11988fc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198906:   	callq	*%r10
  0x0000028bc1198909:   	hlt
  0x0000028bc119890a:   	popq	%r10
  0x0000028bc119890c:   	shlq	$0x3, %rbx
  0x0000028bc1198910:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198914:   	testq	%rbx, %rbx
  0x0000028bc1198917:   	je	0x3
  0x0000028bc119891d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198920:   	jmp	-0x531405           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198925:   	hlt
  0x0000028bc1198926:   	hlt
  0x0000028bc1198927:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3653  112     n 0       java.lang.invoke.MethodHandle::linkToStatic(DL)L (native)
 total in heap  [0x0000028bc1198990,0x0000028bc1198c28] = 664
 relocation     [0x0000028bc1198af0,0x0000028bc1198b38] = 72
 main code      [0x0000028bc1198b40,0x0000028bc1198c25] = 229
 stub code      [0x0000028bc1198c25,0x0000028bc1198c28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b6160} 'linkToStatic' '(DLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198b40:   	testq	%rdx, %rdx
  0x0000028bc1198b43:   	je	0x40
  0x0000028bc1198b49:   	pushq	%rdi
  0x0000028bc1198b4a:   	pushq	%r10
  0x0000028bc1198b4c:   	movl	0x8(%rdx), %edi
  0x0000028bc1198b4f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198b59:   	addq	%r10, %rdi
  0x0000028bc1198b5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198b66:   	cmpq	(%r10), %rdi
  0x0000028bc1198b69:   	je	0x36
  0x0000028bc1198b6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198b73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198b7d:   	cmpq	(%r10), %rdi
  0x0000028bc1198b80:   	je	0x1f
  0x0000028bc1198b86:   	popq	%r10
  0x0000028bc1198b88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198b89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198b93:   	andq	$-0x10, %rsp
  0x0000028bc1198b97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198ba1:   	callq	*%r10
  0x0000028bc1198ba4:   	hlt
 ;; L_ok:
  0x0000028bc1198ba5:   	popq	%r10
  0x0000028bc1198ba7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1198ba8:   	movl	0xc(%rdx), %eax
  0x0000028bc1198bab:   	shrl	$0x18, %eax
  0x0000028bc1198bae:   	andl	$0xf, %eax
  0x0000028bc1198bb1:   	cmpl	$0x6, %eax
  0x0000028bc1198bb4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1198bba:   	movabsq	$0x28bdc33d9b0, %rcx;   {external_word}
  0x0000028bc1198bc4:   	andq	$-0x10, %rsp
  0x0000028bc1198bc8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198bd2:   	callq	*%r10
  0x0000028bc1198bd5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1198bd6:   	movl	0x24(%rdx), %ebx
  0x0000028bc1198bd9:   	pushq	%r10
  0x0000028bc1198bdb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198be5:   	cmpq	(%r10), %r12
  0x0000028bc1198be8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198bee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198bf8:   	andq	$-0x10, %rsp
  0x0000028bc1198bfc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198c06:   	callq	*%r10
  0x0000028bc1198c09:   	hlt
  0x0000028bc1198c0a:   	popq	%r10
  0x0000028bc1198c0c:   	shlq	$0x3, %rbx
  0x0000028bc1198c10:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198c14:   	testq	%rbx, %rbx
  0x0000028bc1198c17:   	je	0x3
  0x0000028bc1198c1d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198c20:   	jmp	-0x531705           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198c25:   	hlt
  0x0000028bc1198c26:   	hlt
  0x0000028bc1198c27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3657  112     n 0       java.lang.invoke.MethodHandle::linkToStatic(DL)L (native)
 total in heap  [0x0000028bc1198990,0x0000028bc1198c28] = 664
 relocation     [0x0000028bc1198af0,0x0000028bc1198b38] = 72
 main code      [0x0000028bc1198b40,0x0000028bc1198c25] = 229
 stub code      [0x0000028bc1198c25,0x0000028bc1198c28] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b6160} 'linkToStatic' '(DLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1198b40:   	testq	%rdx, %rdx
  0x0000028bc1198b43:   	je	0x40
  0x0000028bc1198b49:   	pushq	%rdi
  0x0000028bc1198b4a:   	pushq	%r10
  0x0000028bc1198b4c:   	movl	0x8(%rdx), %edi
  0x0000028bc1198b4f:   	movabsq	$0x800000000, %r10
  0x0000028bc1198b59:   	addq	%r10, %rdi
  0x0000028bc1198b5c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198b66:   	cmpq	(%r10), %rdi
  0x0000028bc1198b69:   	je	0x36
  0x0000028bc1198b6f:   	movq	0x40(%rdi), %rdi
  0x0000028bc1198b73:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1198b7d:   	cmpq	(%r10), %rdi
  0x0000028bc1198b80:   	je	0x1f
  0x0000028bc1198b86:   	popq	%r10
  0x0000028bc1198b88:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1198b89:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1198b93:   	andq	$-0x10, %rsp
  0x0000028bc1198b97:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198ba1:   	callq	*%r10
  0x0000028bc1198ba4:   	hlt
 ;; L_ok:
  0x0000028bc1198ba5:   	popq	%r10
  0x0000028bc1198ba7:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1198ba8:   	movl	0xc(%rdx), %eax
  0x0000028bc1198bab:   	shrl	$0x18, %eax
  0x0000028bc1198bae:   	andl	$0xf, %eax
  0x0000028bc1198bb1:   	cmpl	$0x6, %eax
  0x0000028bc1198bb4:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1198bba:   	movabsq	$0x28bdc33d9b0, %rcx;   {external_word}
  0x0000028bc1198bc4:   	andq	$-0x10, %rsp
  0x0000028bc1198bc8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198bd2:   	callq	*%r10
  0x0000028bc1198bd5:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1198bd6:   	movl	0x24(%rdx), %ebx
  0x0000028bc1198bd9:   	pushq	%r10
  0x0000028bc1198bdb:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198be5:   	cmpq	(%r10), %r12
  0x0000028bc1198be8:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198bee:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198bf8:   	andq	$-0x10, %rsp
  0x0000028bc1198bfc:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198c06:   	callq	*%r10
  0x0000028bc1198c09:   	hlt
  0x0000028bc1198c0a:   	popq	%r10
  0x0000028bc1198c0c:   	shlq	$0x3, %rbx
  0x0000028bc1198c10:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198c14:   	testq	%rbx, %rbx
  0x0000028bc1198c17:   	je	0x3
  0x0000028bc1198c1d:   	jmpq	*0x58(%rbx)
  0x0000028bc1198c20:   	jmp	-0x531705           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1198c25:   	hlt
  0x0000028bc1198c26:   	hlt
  0x0000028bc1198c27:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3670  113     n 0       java.lang.invoke.MethodHandle::invokeBasic(II)I (native)
 total in heap  [0x0000028bc1198c90,0x0000028bc1198f08] = 632
 relocation     [0x0000028bc1198df0,0x0000028bc1198e38] = 72
 main code      [0x0000028bc1198e40,0x0000028bc1198f03] = 195
 stub code      [0x0000028bc1198f03,0x0000028bc1198f08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b7470} 'invokeBasic' '(II)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1198e40:   	movl	0x14(%rdx), %ebx
  0x0000028bc1198e43:   	pushq	%r10
  0x0000028bc1198e45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198e4f:   	cmpq	(%r10), %r12
  0x0000028bc1198e52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198e58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198e62:   	andq	$-0x10, %rsp
  0x0000028bc1198e66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198e70:   	callq	*%r10
  0x0000028bc1198e73:   	hlt
  0x0000028bc1198e74:   	popq	%r10
  0x0000028bc1198e76:   	shlq	$0x3, %rbx
  0x0000028bc1198e7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc1198e7d:   	pushq	%r10
  0x0000028bc1198e7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198e89:   	cmpq	(%r10), %r12
  0x0000028bc1198e8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198e92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198e9c:   	andq	$-0x10, %rsp
  0x0000028bc1198ea0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198eaa:   	callq	*%r10
  0x0000028bc1198ead:   	hlt
  0x0000028bc1198eae:   	popq	%r10
  0x0000028bc1198eb0:   	shlq	$0x3, %rbx
  0x0000028bc1198eb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc1198eb7:   	pushq	%r10
  0x0000028bc1198eb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198ec3:   	cmpq	(%r10), %r12
  0x0000028bc1198ec6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198ecc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198ed6:   	andq	$-0x10, %rsp
  0x0000028bc1198eda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198ee4:   	callq	*%r10
  0x0000028bc1198ee7:   	hlt
  0x0000028bc1198ee8:   	popq	%r10
  0x0000028bc1198eea:   	shlq	$0x3, %rbx
  0x0000028bc1198eee:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198ef2:   	testq	%rbx, %rbx
  0x0000028bc1198ef5:   	je	0x3
  0x0000028bc1198efb:   	jmpq	*0x58(%rbx)
  0x0000028bc1198efe:   	jmp	-0x5319e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1198f03:   	hlt
  0x0000028bc1198f04:   	hlt
  0x0000028bc1198f05:   	hlt
  0x0000028bc1198f06:   	hlt
  0x0000028bc1198f07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3672  113     n 0       java.lang.invoke.MethodHandle::invokeBasic(II)I (native)
 total in heap  [0x0000028bc1198c90,0x0000028bc1198f08] = 632
 relocation     [0x0000028bc1198df0,0x0000028bc1198e38] = 72
 main code      [0x0000028bc1198e40,0x0000028bc1198f03] = 195
 stub code      [0x0000028bc1198f03,0x0000028bc1198f08] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b7470} 'invokeBasic' '(II)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc1198e40:   	movl	0x14(%rdx), %ebx
  0x0000028bc1198e43:   	pushq	%r10
  0x0000028bc1198e45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198e4f:   	cmpq	(%r10), %r12
  0x0000028bc1198e52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198e58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198e62:   	andq	$-0x10, %rsp
  0x0000028bc1198e66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198e70:   	callq	*%r10
  0x0000028bc1198e73:   	hlt
  0x0000028bc1198e74:   	popq	%r10
  0x0000028bc1198e76:   	shlq	$0x3, %rbx
  0x0000028bc1198e7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc1198e7d:   	pushq	%r10
  0x0000028bc1198e7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198e89:   	cmpq	(%r10), %r12
  0x0000028bc1198e8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198e92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198e9c:   	andq	$-0x10, %rsp
  0x0000028bc1198ea0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198eaa:   	callq	*%r10
  0x0000028bc1198ead:   	hlt
  0x0000028bc1198eae:   	popq	%r10
  0x0000028bc1198eb0:   	shlq	$0x3, %rbx
  0x0000028bc1198eb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc1198eb7:   	pushq	%r10
  0x0000028bc1198eb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1198ec3:   	cmpq	(%r10), %r12
  0x0000028bc1198ec6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1198ecc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1198ed6:   	andq	$-0x10, %rsp
  0x0000028bc1198eda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1198ee4:   	callq	*%r10
  0x0000028bc1198ee7:   	hlt
  0x0000028bc1198ee8:   	popq	%r10
  0x0000028bc1198eea:   	shlq	$0x3, %rbx
  0x0000028bc1198eee:   	movq	0x10(%rbx), %rbx
  0x0000028bc1198ef2:   	testq	%rbx, %rbx
  0x0000028bc1198ef5:   	je	0x3
  0x0000028bc1198efb:   	jmpq	*0x58(%rbx)
  0x0000028bc1198efe:   	jmp	-0x5319e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1198f03:   	hlt
  0x0000028bc1198f04:   	hlt
  0x0000028bc1198f05:   	hlt
  0x0000028bc1198f06:   	hlt
  0x0000028bc1198f07:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3674  114     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIIL)I (native)
 total in heap  [0x0000028bc1198f90,0x0000028bc1199390] = 1024
 relocation     [0x0000028bc11990f0,0x0000028bc1199180] = 144
 main code      [0x0000028bc1199180,0x0000028bc119938b] = 523
 stub code      [0x0000028bc119938b,0x0000028bc1199390] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b75a8} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1199180:   	testq	%rdi, %rdi
  0x0000028bc1199183:   	je	0x40
  0x0000028bc1199189:   	pushq	%rdi
  0x0000028bc119918a:   	pushq	%r10
  0x0000028bc119918c:   	movl	0x8(%rdi), %edi
  0x0000028bc119918f:   	movabsq	$0x800000000, %r10
  0x0000028bc1199199:   	addq	%r10, %rdi
  0x0000028bc119919c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11991a6:   	cmpq	(%r10), %rdi
  0x0000028bc11991a9:   	je	0x36
  0x0000028bc11991af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11991b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11991bd:   	cmpq	(%r10), %rdi
  0x0000028bc11991c0:   	je	0x1f
  0x0000028bc11991c6:   	popq	%r10
  0x0000028bc11991c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11991c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11991d3:   	andq	$-0x10, %rsp
  0x0000028bc11991d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11991e1:   	callq	*%r10
  0x0000028bc11991e4:   	hlt
 ;; L_ok:
  0x0000028bc11991e5:   	popq	%r10
  0x0000028bc11991e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11991e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11991eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc11991ef:   	movabsq	$0x800000000, %r11
  0x0000028bc11991f9:   	addq	%r11, %r10
  0x0000028bc11991fc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1199200:   	pushq	%r10
  0x0000028bc1199202:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119920c:   	cmpq	(%r10), %r12
  0x0000028bc119920f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199215:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119921f:   	andq	$-0x10, %rsp
  0x0000028bc1199223:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119922d:   	callq	*%r10
  0x0000028bc1199230:   	hlt
  0x0000028bc1199231:   	popq	%r10
  0x0000028bc1199233:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1199237:   	testq	%r11, %r11
  0x0000028bc119923a:   	je	0x41
  0x0000028bc1199240:   	pushq	%rdi
  0x0000028bc1199241:   	pushq	%r10
  0x0000028bc1199243:   	movl	0x8(%r11), %edi
  0x0000028bc1199247:   	movabsq	$0x800000000, %r10
  0x0000028bc1199251:   	addq	%r10, %rdi
  0x0000028bc1199254:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119925e:   	cmpq	(%r10), %rdi
  0x0000028bc1199261:   	je	0x36
  0x0000028bc1199267:   	movq	0x40(%rdi), %rdi
  0x0000028bc119926b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1199275:   	cmpq	(%r10), %rdi
  0x0000028bc1199278:   	je	0x1f
  0x0000028bc119927e:   	popq	%r10
  0x0000028bc1199280:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1199281:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119928b:   	andq	$-0x10, %rsp
  0x0000028bc119928f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199299:   	callq	*%r10
  0x0000028bc119929c:   	hlt
 ;; L_ok:
  0x0000028bc119929d:   	popq	%r10
  0x0000028bc119929f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11992a0:   	movq	0x10(%r11), %r11
  0x0000028bc11992a4:   	cmpq	%r11, %r10
  0x0000028bc11992a7:   	je	0x61
  0x0000028bc11992ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11992b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11992b5:   	je	0x53
  0x0000028bc11992bb:   	cmpl	$0x28, %eax
  0x0000028bc11992be:   	jne	0x2e
  0x0000028bc11992c4:   	movq	%r11, %rax
  0x0000028bc11992c7:   	pushq	%rcx
  0x0000028bc11992c8:   	pushq	%rdi
  0x0000028bc11992c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11992d3:   	incl	(%rcx)
  0x0000028bc11992d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11992d9:   	movl	(%rdi), %ecx
  0x0000028bc11992db:   	addq	$0x8, %rdi
  0x0000028bc11992df:   	testq	%rax, %rax
  0x0000028bc11992e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11992e5:   	popq	%rdi
  0x0000028bc11992e6:   	popq	%rcx
  0x0000028bc11992e7:   	jne	0x9
  0x0000028bc11992e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11992ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11992f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11992fc:   	andq	$-0x10, %rsp
  0x0000028bc1199300:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119930a:   	callq	*%r10
  0x0000028bc119930d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119930e:   	movl	0xc(%rdi), %eax
  0x0000028bc1199311:   	shrl	$0x18, %eax
  0x0000028bc1199314:   	andl	$0xf, %eax
  0x0000028bc1199317:   	cmpl	$0x7, %eax
  0x0000028bc119931a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1199320:   	movabsq	$0x28bdc33ca30, %rcx;   {external_word}
  0x0000028bc119932a:   	andq	$-0x10, %rsp
  0x0000028bc119932e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199338:   	callq	*%r10
  0x0000028bc119933b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119933c:   	movl	0x24(%rdi), %ebx
  0x0000028bc119933f:   	pushq	%r10
  0x0000028bc1199341:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119934b:   	cmpq	(%r10), %r12
  0x0000028bc119934e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199354:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119935e:   	andq	$-0x10, %rsp
  0x0000028bc1199362:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119936c:   	callq	*%r10
  0x0000028bc119936f:   	hlt
  0x0000028bc1199370:   	popq	%r10
  0x0000028bc1199372:   	shlq	$0x3, %rbx
  0x0000028bc1199376:   	movq	0x10(%rbx), %rbx
  0x0000028bc119937a:   	testq	%rbx, %rbx
  0x0000028bc119937d:   	je	0x3
  0x0000028bc1199383:   	jmpq	*0x58(%rbx)
  0x0000028bc1199386:   	jmp	-0x531e6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119938b:   	hlt
  0x0000028bc119938c:   	hlt
  0x0000028bc119938d:   	hlt
  0x0000028bc119938e:   	hlt
  0x0000028bc119938f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3678  114     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIIL)I (native)
 total in heap  [0x0000028bc1198f90,0x0000028bc1199390] = 1024
 relocation     [0x0000028bc11990f0,0x0000028bc1199180] = 144
 main code      [0x0000028bc1199180,0x0000028bc119938b] = 523
 stub code      [0x0000028bc119938b,0x0000028bc1199390] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b75a8} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1199180:   	testq	%rdi, %rdi
  0x0000028bc1199183:   	je	0x40
  0x0000028bc1199189:   	pushq	%rdi
  0x0000028bc119918a:   	pushq	%r10
  0x0000028bc119918c:   	movl	0x8(%rdi), %edi
  0x0000028bc119918f:   	movabsq	$0x800000000, %r10
  0x0000028bc1199199:   	addq	%r10, %rdi
  0x0000028bc119919c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11991a6:   	cmpq	(%r10), %rdi
  0x0000028bc11991a9:   	je	0x36
  0x0000028bc11991af:   	movq	0x40(%rdi), %rdi
  0x0000028bc11991b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc11991bd:   	cmpq	(%r10), %rdi
  0x0000028bc11991c0:   	je	0x1f
  0x0000028bc11991c6:   	popq	%r10
  0x0000028bc11991c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc11991c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc11991d3:   	andq	$-0x10, %rsp
  0x0000028bc11991d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11991e1:   	callq	*%r10
  0x0000028bc11991e4:   	hlt
 ;; L_ok:
  0x0000028bc11991e5:   	popq	%r10
  0x0000028bc11991e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11991e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc11991eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc11991ef:   	movabsq	$0x800000000, %r11
  0x0000028bc11991f9:   	addq	%r11, %r10
  0x0000028bc11991fc:   	movl	0x18(%rdi), %r11d
  0x0000028bc1199200:   	pushq	%r10
  0x0000028bc1199202:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119920c:   	cmpq	(%r10), %r12
  0x0000028bc119920f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199215:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119921f:   	andq	$-0x10, %rsp
  0x0000028bc1199223:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119922d:   	callq	*%r10
  0x0000028bc1199230:   	hlt
  0x0000028bc1199231:   	popq	%r10
  0x0000028bc1199233:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc1199237:   	testq	%r11, %r11
  0x0000028bc119923a:   	je	0x41
  0x0000028bc1199240:   	pushq	%rdi
  0x0000028bc1199241:   	pushq	%r10
  0x0000028bc1199243:   	movl	0x8(%r11), %edi
  0x0000028bc1199247:   	movabsq	$0x800000000, %r10
  0x0000028bc1199251:   	addq	%r10, %rdi
  0x0000028bc1199254:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119925e:   	cmpq	(%r10), %rdi
  0x0000028bc1199261:   	je	0x36
  0x0000028bc1199267:   	movq	0x40(%rdi), %rdi
  0x0000028bc119926b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc1199275:   	cmpq	(%r10), %rdi
  0x0000028bc1199278:   	je	0x1f
  0x0000028bc119927e:   	popq	%r10
  0x0000028bc1199280:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1199281:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119928b:   	andq	$-0x10, %rsp
  0x0000028bc119928f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199299:   	callq	*%r10
  0x0000028bc119929c:   	hlt
 ;; L_ok:
  0x0000028bc119929d:   	popq	%r10
  0x0000028bc119929f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc11992a0:   	movq	0x10(%r11), %r11
  0x0000028bc11992a4:   	cmpq	%r11, %r10
  0x0000028bc11992a7:   	je	0x61
  0x0000028bc11992ad:   	movl	0x1c(%r11), %eax
  0x0000028bc11992b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc11992b5:   	je	0x53
  0x0000028bc11992bb:   	cmpl	$0x28, %eax
  0x0000028bc11992be:   	jne	0x2e
  0x0000028bc11992c4:   	movq	%r11, %rax
  0x0000028bc11992c7:   	pushq	%rcx
  0x0000028bc11992c8:   	pushq	%rdi
  0x0000028bc11992c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc11992d3:   	incl	(%rcx)
  0x0000028bc11992d5:   	movq	0x30(%r10), %rdi
  0x0000028bc11992d9:   	movl	(%rdi), %ecx
  0x0000028bc11992db:   	addq	$0x8, %rdi
  0x0000028bc11992df:   	testq	%rax, %rax
  0x0000028bc11992e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc11992e5:   	popq	%rdi
  0x0000028bc11992e6:   	popq	%rcx
  0x0000028bc11992e7:   	jne	0x9
  0x0000028bc11992e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc11992ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc11992f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc11992fc:   	andq	$-0x10, %rsp
  0x0000028bc1199300:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119930a:   	callq	*%r10
  0x0000028bc119930d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119930e:   	movl	0xc(%rdi), %eax
  0x0000028bc1199311:   	shrl	$0x18, %eax
  0x0000028bc1199314:   	andl	$0xf, %eax
  0x0000028bc1199317:   	cmpl	$0x7, %eax
  0x0000028bc119931a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1199320:   	movabsq	$0x28bdc33ca30, %rcx;   {external_word}
  0x0000028bc119932a:   	andq	$-0x10, %rsp
  0x0000028bc119932e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199338:   	callq	*%r10
  0x0000028bc119933b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119933c:   	movl	0x24(%rdi), %ebx
  0x0000028bc119933f:   	pushq	%r10
  0x0000028bc1199341:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119934b:   	cmpq	(%r10), %r12
  0x0000028bc119934e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199354:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119935e:   	andq	$-0x10, %rsp
  0x0000028bc1199362:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119936c:   	callq	*%r10
  0x0000028bc119936f:   	hlt
  0x0000028bc1199370:   	popq	%r10
  0x0000028bc1199372:   	shlq	$0x3, %rbx
  0x0000028bc1199376:   	movq	0x10(%rbx), %rbx
  0x0000028bc119937a:   	testq	%rbx, %rbx
  0x0000028bc119937d:   	je	0x3
  0x0000028bc1199383:   	jmpq	*0x58(%rbx)
  0x0000028bc1199386:   	jmp	-0x531e6b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119938b:   	hlt
  0x0000028bc119938c:   	hlt
  0x0000028bc119938d:   	hlt
  0x0000028bc119938e:   	hlt
  0x0000028bc119938f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3691  115     n 0       java.lang.invoke.MethodHandle::invokeBasic(I)I (native)
 total in heap  [0x0000028bc1199410,0x0000028bc1199688] = 632
 relocation     [0x0000028bc1199570,0x0000028bc11995b8] = 72
 main code      [0x0000028bc11995c0,0x0000028bc1199683] = 195
 stub code      [0x0000028bc1199683,0x0000028bc1199688] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b7f58} 'invokeBasic' '(I)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11995c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11995c3:   	pushq	%r10
  0x0000028bc11995c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11995cf:   	cmpq	(%r10), %r12
  0x0000028bc11995d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11995d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11995e2:   	andq	$-0x10, %rsp
  0x0000028bc11995e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11995f0:   	callq	*%r10
  0x0000028bc11995f3:   	hlt
  0x0000028bc11995f4:   	popq	%r10
  0x0000028bc11995f6:   	shlq	$0x3, %rbx
  0x0000028bc11995fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11995fd:   	pushq	%r10
  0x0000028bc11995ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199609:   	cmpq	(%r10), %r12
  0x0000028bc119960c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199612:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119961c:   	andq	$-0x10, %rsp
  0x0000028bc1199620:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119962a:   	callq	*%r10
  0x0000028bc119962d:   	hlt
  0x0000028bc119962e:   	popq	%r10
  0x0000028bc1199630:   	shlq	$0x3, %rbx
  0x0000028bc1199634:   	movl	0x24(%rbx), %ebx
  0x0000028bc1199637:   	pushq	%r10
  0x0000028bc1199639:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199643:   	cmpq	(%r10), %r12
  0x0000028bc1199646:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119964c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1199656:   	andq	$-0x10, %rsp
  0x0000028bc119965a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199664:   	callq	*%r10
  0x0000028bc1199667:   	hlt
  0x0000028bc1199668:   	popq	%r10
  0x0000028bc119966a:   	shlq	$0x3, %rbx
  0x0000028bc119966e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1199672:   	testq	%rbx, %rbx
  0x0000028bc1199675:   	je	0x3
  0x0000028bc119967b:   	jmpq	*0x58(%rbx)
  0x0000028bc119967e:   	jmp	-0x532163           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1199683:   	hlt
  0x0000028bc1199684:   	hlt
  0x0000028bc1199685:   	hlt
  0x0000028bc1199686:   	hlt
  0x0000028bc1199687:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3693  115     n 0       java.lang.invoke.MethodHandle::invokeBasic(I)I (native)
 total in heap  [0x0000028bc1199410,0x0000028bc1199688] = 632
 relocation     [0x0000028bc1199570,0x0000028bc11995b8] = 72
 main code      [0x0000028bc11995c0,0x0000028bc1199683] = 195
 stub code      [0x0000028bc1199683,0x0000028bc1199688] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b7f58} 'invokeBasic' '(I)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc11995c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc11995c3:   	pushq	%r10
  0x0000028bc11995c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc11995cf:   	cmpq	(%r10), %r12
  0x0000028bc11995d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc11995d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11995e2:   	andq	$-0x10, %rsp
  0x0000028bc11995e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11995f0:   	callq	*%r10
  0x0000028bc11995f3:   	hlt
  0x0000028bc11995f4:   	popq	%r10
  0x0000028bc11995f6:   	shlq	$0x3, %rbx
  0x0000028bc11995fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc11995fd:   	pushq	%r10
  0x0000028bc11995ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199609:   	cmpq	(%r10), %r12
  0x0000028bc119960c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199612:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119961c:   	andq	$-0x10, %rsp
  0x0000028bc1199620:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119962a:   	callq	*%r10
  0x0000028bc119962d:   	hlt
  0x0000028bc119962e:   	popq	%r10
  0x0000028bc1199630:   	shlq	$0x3, %rbx
  0x0000028bc1199634:   	movl	0x24(%rbx), %ebx
  0x0000028bc1199637:   	pushq	%r10
  0x0000028bc1199639:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199643:   	cmpq	(%r10), %r12
  0x0000028bc1199646:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119964c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1199656:   	andq	$-0x10, %rsp
  0x0000028bc119965a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199664:   	callq	*%r10
  0x0000028bc1199667:   	hlt
  0x0000028bc1199668:   	popq	%r10
  0x0000028bc119966a:   	shlq	$0x3, %rbx
  0x0000028bc119966e:   	movq	0x10(%rbx), %rbx
  0x0000028bc1199672:   	testq	%rbx, %rbx
  0x0000028bc1199675:   	je	0x3
  0x0000028bc119967b:   	jmpq	*0x58(%rbx)
  0x0000028bc119967e:   	jmp	-0x532163           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc1199683:   	hlt
  0x0000028bc1199684:   	hlt
  0x0000028bc1199685:   	hlt
  0x0000028bc1199686:   	hlt
  0x0000028bc1199687:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3695  116     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIL)I (native)
 total in heap  [0x0000028bc1199710,0x0000028bc1199b10] = 1024
 relocation     [0x0000028bc1199870,0x0000028bc1199900] = 144
 main code      [0x0000028bc1199900,0x0000028bc1199b0e] = 526
 stub code      [0x0000028bc1199b0e,0x0000028bc1199b10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b8090} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1199900:   	testq	%r9, %r9
  0x0000028bc1199903:   	je	0x41
  0x0000028bc1199909:   	pushq	%rdi
  0x0000028bc119990a:   	pushq	%r10
  0x0000028bc119990c:   	movl	0x8(%r9), %edi
  0x0000028bc1199910:   	movabsq	$0x800000000, %r10
  0x0000028bc119991a:   	addq	%r10, %rdi
  0x0000028bc119991d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1199927:   	cmpq	(%r10), %rdi
  0x0000028bc119992a:   	je	0x36
  0x0000028bc1199930:   	movq	0x40(%rdi), %rdi
  0x0000028bc1199934:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119993e:   	cmpq	(%r10), %rdi
  0x0000028bc1199941:   	je	0x1f
  0x0000028bc1199947:   	popq	%r10
  0x0000028bc1199949:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119994a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1199954:   	andq	$-0x10, %rsp
  0x0000028bc1199958:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199962:   	callq	*%r10
  0x0000028bc1199965:   	hlt
 ;; L_ok:
  0x0000028bc1199966:   	popq	%r10
  0x0000028bc1199968:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1199969:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119996c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1199970:   	movabsq	$0x800000000, %r11
  0x0000028bc119997a:   	addq	%r11, %r10
  0x0000028bc119997d:   	movl	0x18(%r9), %r11d
  0x0000028bc1199981:   	pushq	%r10
  0x0000028bc1199983:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119998d:   	cmpq	(%r10), %r12
  0x0000028bc1199990:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199996:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11999a0:   	andq	$-0x10, %rsp
  0x0000028bc11999a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11999ae:   	callq	*%r10
  0x0000028bc11999b1:   	hlt
  0x0000028bc11999b2:   	popq	%r10
  0x0000028bc11999b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11999b8:   	testq	%r11, %r11
  0x0000028bc11999bb:   	je	0x41
  0x0000028bc11999c1:   	pushq	%rdi
  0x0000028bc11999c2:   	pushq	%r10
  0x0000028bc11999c4:   	movl	0x8(%r11), %edi
  0x0000028bc11999c8:   	movabsq	$0x800000000, %r10
  0x0000028bc11999d2:   	addq	%r10, %rdi
  0x0000028bc11999d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11999df:   	cmpq	(%r10), %rdi
  0x0000028bc11999e2:   	je	0x36
  0x0000028bc11999e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc11999ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11999f6:   	cmpq	(%r10), %rdi
  0x0000028bc11999f9:   	je	0x1f
  0x0000028bc11999ff:   	popq	%r10
  0x0000028bc1199a01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1199a02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1199a0c:   	andq	$-0x10, %rsp
  0x0000028bc1199a10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199a1a:   	callq	*%r10
  0x0000028bc1199a1d:   	hlt
 ;; L_ok:
  0x0000028bc1199a1e:   	popq	%r10
  0x0000028bc1199a20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1199a21:   	movq	0x10(%r11), %r11
  0x0000028bc1199a25:   	cmpq	%r11, %r10
  0x0000028bc1199a28:   	je	0x61
  0x0000028bc1199a2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1199a32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1199a36:   	je	0x53
  0x0000028bc1199a3c:   	cmpl	$0x28, %eax
  0x0000028bc1199a3f:   	jne	0x2e
  0x0000028bc1199a45:   	movq	%r11, %rax
  0x0000028bc1199a48:   	pushq	%rcx
  0x0000028bc1199a49:   	pushq	%rdi
  0x0000028bc1199a4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1199a54:   	incl	(%rcx)
  0x0000028bc1199a56:   	movq	0x30(%r10), %rdi
  0x0000028bc1199a5a:   	movl	(%rdi), %ecx
  0x0000028bc1199a5c:   	addq	$0x8, %rdi
  0x0000028bc1199a60:   	testq	%rax, %rax
  0x0000028bc1199a63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1199a66:   	popq	%rdi
  0x0000028bc1199a67:   	popq	%rcx
  0x0000028bc1199a68:   	jne	0x9
  0x0000028bc1199a6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1199a6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1199a73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1199a7d:   	andq	$-0x10, %rsp
  0x0000028bc1199a81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199a8b:   	callq	*%r10
  0x0000028bc1199a8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1199a8f:   	movl	0xc(%r9), %eax
  0x0000028bc1199a93:   	shrl	$0x18, %eax
  0x0000028bc1199a96:   	andl	$0xf, %eax
  0x0000028bc1199a99:   	cmpl	$0x7, %eax
  0x0000028bc1199a9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1199aa2:   	movabsq	$0x28bdc33e0b0, %rcx;   {external_word}
  0x0000028bc1199aac:   	andq	$-0x10, %rsp
  0x0000028bc1199ab0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199aba:   	callq	*%r10
  0x0000028bc1199abd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1199abe:   	movl	0x24(%r9), %ebx
  0x0000028bc1199ac2:   	pushq	%r10
  0x0000028bc1199ac4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199ace:   	cmpq	(%r10), %r12
  0x0000028bc1199ad1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199ad7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1199ae1:   	andq	$-0x10, %rsp
  0x0000028bc1199ae5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199aef:   	callq	*%r10
  0x0000028bc1199af2:   	hlt
  0x0000028bc1199af3:   	popq	%r10
  0x0000028bc1199af5:   	shlq	$0x3, %rbx
  0x0000028bc1199af9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1199afd:   	testq	%rbx, %rbx
  0x0000028bc1199b00:   	je	0x3
  0x0000028bc1199b06:   	jmpq	*0x58(%rbx)
  0x0000028bc1199b09:   	jmp	-0x5325ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1199b0e:   	hlt
  0x0000028bc1199b0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3699  116     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LIL)I (native)
 total in heap  [0x0000028bc1199710,0x0000028bc1199b10] = 1024
 relocation     [0x0000028bc1199870,0x0000028bc1199900] = 144
 main code      [0x0000028bc1199900,0x0000028bc1199b0e] = 526
 stub code      [0x0000028bc1199b0e,0x0000028bc1199b10] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b8090} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1199900:   	testq	%r9, %r9
  0x0000028bc1199903:   	je	0x41
  0x0000028bc1199909:   	pushq	%rdi
  0x0000028bc119990a:   	pushq	%r10
  0x0000028bc119990c:   	movl	0x8(%r9), %edi
  0x0000028bc1199910:   	movabsq	$0x800000000, %r10
  0x0000028bc119991a:   	addq	%r10, %rdi
  0x0000028bc119991d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1199927:   	cmpq	(%r10), %rdi
  0x0000028bc119992a:   	je	0x36
  0x0000028bc1199930:   	movq	0x40(%rdi), %rdi
  0x0000028bc1199934:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119993e:   	cmpq	(%r10), %rdi
  0x0000028bc1199941:   	je	0x1f
  0x0000028bc1199947:   	popq	%r10
  0x0000028bc1199949:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119994a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1199954:   	andq	$-0x10, %rsp
  0x0000028bc1199958:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199962:   	callq	*%r10
  0x0000028bc1199965:   	hlt
 ;; L_ok:
  0x0000028bc1199966:   	popq	%r10
  0x0000028bc1199968:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1199969:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119996c:   	movl	0x8(%rdx), %r10d
  0x0000028bc1199970:   	movabsq	$0x800000000, %r11
  0x0000028bc119997a:   	addq	%r11, %r10
  0x0000028bc119997d:   	movl	0x18(%r9), %r11d
  0x0000028bc1199981:   	pushq	%r10
  0x0000028bc1199983:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119998d:   	cmpq	(%r10), %r12
  0x0000028bc1199990:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199996:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc11999a0:   	andq	$-0x10, %rsp
  0x0000028bc11999a4:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc11999ae:   	callq	*%r10
  0x0000028bc11999b1:   	hlt
  0x0000028bc11999b2:   	popq	%r10
  0x0000028bc11999b4:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc11999b8:   	testq	%r11, %r11
  0x0000028bc11999bb:   	je	0x41
  0x0000028bc11999c1:   	pushq	%rdi
  0x0000028bc11999c2:   	pushq	%r10
  0x0000028bc11999c4:   	movl	0x8(%r11), %edi
  0x0000028bc11999c8:   	movabsq	$0x800000000, %r10
  0x0000028bc11999d2:   	addq	%r10, %rdi
  0x0000028bc11999d5:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11999df:   	cmpq	(%r10), %rdi
  0x0000028bc11999e2:   	je	0x36
  0x0000028bc11999e8:   	movq	0x40(%rdi), %rdi
  0x0000028bc11999ec:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc11999f6:   	cmpq	(%r10), %rdi
  0x0000028bc11999f9:   	je	0x1f
  0x0000028bc11999ff:   	popq	%r10
  0x0000028bc1199a01:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc1199a02:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc1199a0c:   	andq	$-0x10, %rsp
  0x0000028bc1199a10:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199a1a:   	callq	*%r10
  0x0000028bc1199a1d:   	hlt
 ;; L_ok:
  0x0000028bc1199a1e:   	popq	%r10
  0x0000028bc1199a20:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc1199a21:   	movq	0x10(%r11), %r11
  0x0000028bc1199a25:   	cmpq	%r11, %r10
  0x0000028bc1199a28:   	je	0x61
  0x0000028bc1199a2e:   	movl	0x1c(%r11), %eax
  0x0000028bc1199a32:   	cmpq	(%r10,%rax), %r11
  0x0000028bc1199a36:   	je	0x53
  0x0000028bc1199a3c:   	cmpl	$0x28, %eax
  0x0000028bc1199a3f:   	jne	0x2e
  0x0000028bc1199a45:   	movq	%r11, %rax
  0x0000028bc1199a48:   	pushq	%rcx
  0x0000028bc1199a49:   	pushq	%rdi
  0x0000028bc1199a4a:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc1199a54:   	incl	(%rcx)
  0x0000028bc1199a56:   	movq	0x30(%r10), %rdi
  0x0000028bc1199a5a:   	movl	(%rdi), %ecx
  0x0000028bc1199a5c:   	addq	$0x8, %rdi
  0x0000028bc1199a60:   	testq	%rax, %rax
  0x0000028bc1199a63:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc1199a66:   	popq	%rdi
  0x0000028bc1199a67:   	popq	%rcx
  0x0000028bc1199a68:   	jne	0x9
  0x0000028bc1199a6a:   	movq	%r11, 0x28(%r10)
  0x0000028bc1199a6e:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc1199a73:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc1199a7d:   	andq	$-0x10, %rsp
  0x0000028bc1199a81:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199a8b:   	callq	*%r10
  0x0000028bc1199a8e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc1199a8f:   	movl	0xc(%r9), %eax
  0x0000028bc1199a93:   	shrl	$0x18, %eax
  0x0000028bc1199a96:   	andl	$0xf, %eax
  0x0000028bc1199a99:   	cmpl	$0x7, %eax
  0x0000028bc1199a9c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc1199aa2:   	movabsq	$0x28bdc33e0b0, %rcx;   {external_word}
  0x0000028bc1199aac:   	andq	$-0x10, %rsp
  0x0000028bc1199ab0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199aba:   	callq	*%r10
  0x0000028bc1199abd:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1199abe:   	movl	0x24(%r9), %ebx
  0x0000028bc1199ac2:   	pushq	%r10
  0x0000028bc1199ac4:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199ace:   	cmpq	(%r10), %r12
  0x0000028bc1199ad1:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199ad7:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1199ae1:   	andq	$-0x10, %rsp
  0x0000028bc1199ae5:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199aef:   	callq	*%r10
  0x0000028bc1199af2:   	hlt
  0x0000028bc1199af3:   	popq	%r10
  0x0000028bc1199af5:   	shlq	$0x3, %rbx
  0x0000028bc1199af9:   	movq	0x10(%rbx), %rbx
  0x0000028bc1199afd:   	testq	%rbx, %rbx
  0x0000028bc1199b00:   	je	0x3
  0x0000028bc1199b06:   	jmpq	*0x58(%rbx)
  0x0000028bc1199b09:   	jmp	-0x5325ee           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc1199b0e:   	hlt
  0x0000028bc1199b0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3714  117     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)V (native)
 total in heap  [0x0000028bc1199b90,0x0000028bc1199e28] = 664
 relocation     [0x0000028bc1199cf0,0x0000028bc1199d38] = 72
 main code      [0x0000028bc1199d40,0x0000028bc1199e28] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b8fc0} 'linkToStatic' '(JLjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1199d40:   	testq	%r8, %r8
  0x0000028bc1199d43:   	je	0x41
  0x0000028bc1199d49:   	pushq	%rdi
  0x0000028bc1199d4a:   	pushq	%r10
  0x0000028bc1199d4c:   	movl	0x8(%r8), %edi
  0x0000028bc1199d50:   	movabsq	$0x800000000, %r10
  0x0000028bc1199d5a:   	addq	%r10, %rdi
  0x0000028bc1199d5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1199d67:   	cmpq	(%r10), %rdi
  0x0000028bc1199d6a:   	je	0x36
  0x0000028bc1199d70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1199d74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1199d7e:   	cmpq	(%r10), %rdi
  0x0000028bc1199d81:   	je	0x1f
  0x0000028bc1199d87:   	popq	%r10
  0x0000028bc1199d89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1199d8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1199d94:   	andq	$-0x10, %rsp
  0x0000028bc1199d98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199da2:   	callq	*%r10
  0x0000028bc1199da5:   	hlt
 ;; L_ok:
  0x0000028bc1199da6:   	popq	%r10
  0x0000028bc1199da8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1199da9:   	movl	0xc(%r8), %eax
  0x0000028bc1199dad:   	shrl	$0x18, %eax
  0x0000028bc1199db0:   	andl	$0xf, %eax
  0x0000028bc1199db3:   	cmpl	$0x6, %eax
  0x0000028bc1199db6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1199dbc:   	movabsq	$0x28bdc33cab0, %rcx;   {external_word}
  0x0000028bc1199dc6:   	andq	$-0x10, %rsp
  0x0000028bc1199dca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199dd4:   	callq	*%r10
  0x0000028bc1199dd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1199dd8:   	movl	0x24(%r8), %ebx
  0x0000028bc1199ddc:   	pushq	%r10
  0x0000028bc1199dde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199de8:   	cmpq	(%r10), %r12
  0x0000028bc1199deb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199df1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1199dfb:   	andq	$-0x10, %rsp
  0x0000028bc1199dff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199e09:   	callq	*%r10
  0x0000028bc1199e0c:   	hlt
  0x0000028bc1199e0d:   	popq	%r10
  0x0000028bc1199e0f:   	shlq	$0x3, %rbx
  0x0000028bc1199e13:   	movq	0x10(%rbx), %rbx
  0x0000028bc1199e17:   	testq	%rbx, %rbx
  0x0000028bc1199e1a:   	je	0x3
  0x0000028bc1199e20:   	jmpq	*0x58(%rbx)
  0x0000028bc1199e23:   	jmp	-0x532908           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3716  117     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)V (native)
 total in heap  [0x0000028bc1199b90,0x0000028bc1199e28] = 664
 relocation     [0x0000028bc1199cf0,0x0000028bc1199d38] = 72
 main code      [0x0000028bc1199d40,0x0000028bc1199e28] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b8fc0} 'linkToStatic' '(JLjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc1199d40:   	testq	%r8, %r8
  0x0000028bc1199d43:   	je	0x41
  0x0000028bc1199d49:   	pushq	%rdi
  0x0000028bc1199d4a:   	pushq	%r10
  0x0000028bc1199d4c:   	movl	0x8(%r8), %edi
  0x0000028bc1199d50:   	movabsq	$0x800000000, %r10
  0x0000028bc1199d5a:   	addq	%r10, %rdi
  0x0000028bc1199d5d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1199d67:   	cmpq	(%r10), %rdi
  0x0000028bc1199d6a:   	je	0x36
  0x0000028bc1199d70:   	movq	0x40(%rdi), %rdi
  0x0000028bc1199d74:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc1199d7e:   	cmpq	(%r10), %rdi
  0x0000028bc1199d81:   	je	0x1f
  0x0000028bc1199d87:   	popq	%r10
  0x0000028bc1199d89:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc1199d8a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc1199d94:   	andq	$-0x10, %rsp
  0x0000028bc1199d98:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199da2:   	callq	*%r10
  0x0000028bc1199da5:   	hlt
 ;; L_ok:
  0x0000028bc1199da6:   	popq	%r10
  0x0000028bc1199da8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc1199da9:   	movl	0xc(%r8), %eax
  0x0000028bc1199dad:   	shrl	$0x18, %eax
  0x0000028bc1199db0:   	andl	$0xf, %eax
  0x0000028bc1199db3:   	cmpl	$0x6, %eax
  0x0000028bc1199db6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc1199dbc:   	movabsq	$0x28bdc33cab0, %rcx;   {external_word}
  0x0000028bc1199dc6:   	andq	$-0x10, %rsp
  0x0000028bc1199dca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199dd4:   	callq	*%r10
  0x0000028bc1199dd7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc1199dd8:   	movl	0x24(%r8), %ebx
  0x0000028bc1199ddc:   	pushq	%r10
  0x0000028bc1199dde:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc1199de8:   	cmpq	(%r10), %r12
  0x0000028bc1199deb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc1199df1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc1199dfb:   	andq	$-0x10, %rsp
  0x0000028bc1199dff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc1199e09:   	callq	*%r10
  0x0000028bc1199e0c:   	hlt
  0x0000028bc1199e0d:   	popq	%r10
  0x0000028bc1199e0f:   	shlq	$0x3, %rbx
  0x0000028bc1199e13:   	movq	0x10(%rbx), %rbx
  0x0000028bc1199e17:   	testq	%rbx, %rbx
  0x0000028bc1199e1a:   	je	0x3
  0x0000028bc1199e20:   	jmpq	*0x58(%rbx)
  0x0000028bc1199e23:   	jmp	-0x532908           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3721  118     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJL)V (native)
 total in heap  [0x0000028bc1199e90,0x0000028bc119a290] = 1024
 relocation     [0x0000028bc1199ff0,0x0000028bc119a080] = 144
 main code      [0x0000028bc119a080,0x0000028bc119a28e] = 526
 stub code      [0x0000028bc119a28e,0x0000028bc119a290] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b9480} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119a080:   	testq	%r9, %r9
  0x0000028bc119a083:   	je	0x41
  0x0000028bc119a089:   	pushq	%rdi
  0x0000028bc119a08a:   	pushq	%r10
  0x0000028bc119a08c:   	movl	0x8(%r9), %edi
  0x0000028bc119a090:   	movabsq	$0x800000000, %r10
  0x0000028bc119a09a:   	addq	%r10, %rdi
  0x0000028bc119a09d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a0a7:   	cmpq	(%r10), %rdi
  0x0000028bc119a0aa:   	je	0x36
  0x0000028bc119a0b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc119a0b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a0be:   	cmpq	(%r10), %rdi
  0x0000028bc119a0c1:   	je	0x1f
  0x0000028bc119a0c7:   	popq	%r10
  0x0000028bc119a0c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119a0ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119a0d4:   	andq	$-0x10, %rsp
  0x0000028bc119a0d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a0e2:   	callq	*%r10
  0x0000028bc119a0e5:   	hlt
 ;; L_ok:
  0x0000028bc119a0e6:   	popq	%r10
  0x0000028bc119a0e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119a0e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119a0ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc119a0f0:   	movabsq	$0x800000000, %r11
  0x0000028bc119a0fa:   	addq	%r11, %r10
  0x0000028bc119a0fd:   	movl	0x18(%r9), %r11d
  0x0000028bc119a101:   	pushq	%r10
  0x0000028bc119a103:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119a10d:   	cmpq	(%r10), %r12
  0x0000028bc119a110:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119a116:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119a120:   	andq	$-0x10, %rsp
  0x0000028bc119a124:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a12e:   	callq	*%r10
  0x0000028bc119a131:   	hlt
  0x0000028bc119a132:   	popq	%r10
  0x0000028bc119a134:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119a138:   	testq	%r11, %r11
  0x0000028bc119a13b:   	je	0x41
  0x0000028bc119a141:   	pushq	%rdi
  0x0000028bc119a142:   	pushq	%r10
  0x0000028bc119a144:   	movl	0x8(%r11), %edi
  0x0000028bc119a148:   	movabsq	$0x800000000, %r10
  0x0000028bc119a152:   	addq	%r10, %rdi
  0x0000028bc119a155:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119a15f:   	cmpq	(%r10), %rdi
  0x0000028bc119a162:   	je	0x36
  0x0000028bc119a168:   	movq	0x40(%rdi), %rdi
  0x0000028bc119a16c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119a176:   	cmpq	(%r10), %rdi
  0x0000028bc119a179:   	je	0x1f
  0x0000028bc119a17f:   	popq	%r10
  0x0000028bc119a181:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119a182:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119a18c:   	andq	$-0x10, %rsp
  0x0000028bc119a190:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a19a:   	callq	*%r10
  0x0000028bc119a19d:   	hlt
 ;; L_ok:
  0x0000028bc119a19e:   	popq	%r10
  0x0000028bc119a1a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119a1a1:   	movq	0x10(%r11), %r11
  0x0000028bc119a1a5:   	cmpq	%r11, %r10
  0x0000028bc119a1a8:   	je	0x61
  0x0000028bc119a1ae:   	movl	0x1c(%r11), %eax
  0x0000028bc119a1b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119a1b6:   	je	0x53
  0x0000028bc119a1bc:   	cmpl	$0x28, %eax
  0x0000028bc119a1bf:   	jne	0x2e
  0x0000028bc119a1c5:   	movq	%r11, %rax
  0x0000028bc119a1c8:   	pushq	%rcx
  0x0000028bc119a1c9:   	pushq	%rdi
  0x0000028bc119a1ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119a1d4:   	incl	(%rcx)
  0x0000028bc119a1d6:   	movq	0x30(%r10), %rdi
  0x0000028bc119a1da:   	movl	(%rdi), %ecx
  0x0000028bc119a1dc:   	addq	$0x8, %rdi
  0x0000028bc119a1e0:   	testq	%rax, %rax
  0x0000028bc119a1e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119a1e6:   	popq	%rdi
  0x0000028bc119a1e7:   	popq	%rcx
  0x0000028bc119a1e8:   	jne	0x9
  0x0000028bc119a1ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc119a1ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119a1f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119a1fd:   	andq	$-0x10, %rsp
  0x0000028bc119a201:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a20b:   	callq	*%r10
  0x0000028bc119a20e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119a20f:   	movl	0xc(%r9), %eax
  0x0000028bc119a213:   	shrl	$0x18, %eax
  0x0000028bc119a216:   	andl	$0xf, %eax
  0x0000028bc119a219:   	cmpl	$0x7, %eax
  0x0000028bc119a21c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119a222:   	movabsq	$0x28bdc33e5b0, %rcx;   {external_word}
  0x0000028bc119a22c:   	andq	$-0x10, %rsp
  0x0000028bc119a230:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a23a:   	callq	*%r10
  0x0000028bc119a23d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119a23e:   	movl	0x24(%r9), %ebx
  0x0000028bc119a242:   	pushq	%r10
  0x0000028bc119a244:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119a24e:   	cmpq	(%r10), %r12
  0x0000028bc119a251:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119a257:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119a261:   	andq	$-0x10, %rsp
  0x0000028bc119a265:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a26f:   	callq	*%r10
  0x0000028bc119a272:   	hlt
  0x0000028bc119a273:   	popq	%r10
  0x0000028bc119a275:   	shlq	$0x3, %rbx
  0x0000028bc119a279:   	movq	0x10(%rbx), %rbx
  0x0000028bc119a27d:   	testq	%rbx, %rbx
  0x0000028bc119a280:   	je	0x3
  0x0000028bc119a286:   	jmpq	*0x58(%rbx)
  0x0000028bc119a289:   	jmp	-0x532d6e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119a28e:   	hlt
  0x0000028bc119a28f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3725  118     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJL)V (native)
 total in heap  [0x0000028bc1199e90,0x0000028bc119a290] = 1024
 relocation     [0x0000028bc1199ff0,0x0000028bc119a080] = 144
 main code      [0x0000028bc119a080,0x0000028bc119a28e] = 526
 stub code      [0x0000028bc119a28e,0x0000028bc119a290] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84b9480} 'linkToSpecial' '(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119a080:   	testq	%r9, %r9
  0x0000028bc119a083:   	je	0x41
  0x0000028bc119a089:   	pushq	%rdi
  0x0000028bc119a08a:   	pushq	%r10
  0x0000028bc119a08c:   	movl	0x8(%r9), %edi
  0x0000028bc119a090:   	movabsq	$0x800000000, %r10
  0x0000028bc119a09a:   	addq	%r10, %rdi
  0x0000028bc119a09d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a0a7:   	cmpq	(%r10), %rdi
  0x0000028bc119a0aa:   	je	0x36
  0x0000028bc119a0b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc119a0b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a0be:   	cmpq	(%r10), %rdi
  0x0000028bc119a0c1:   	je	0x1f
  0x0000028bc119a0c7:   	popq	%r10
  0x0000028bc119a0c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119a0ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119a0d4:   	andq	$-0x10, %rsp
  0x0000028bc119a0d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a0e2:   	callq	*%r10
  0x0000028bc119a0e5:   	hlt
 ;; L_ok:
  0x0000028bc119a0e6:   	popq	%r10
  0x0000028bc119a0e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119a0e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119a0ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc119a0f0:   	movabsq	$0x800000000, %r11
  0x0000028bc119a0fa:   	addq	%r11, %r10
  0x0000028bc119a0fd:   	movl	0x18(%r9), %r11d
  0x0000028bc119a101:   	pushq	%r10
  0x0000028bc119a103:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119a10d:   	cmpq	(%r10), %r12
  0x0000028bc119a110:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119a116:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119a120:   	andq	$-0x10, %rsp
  0x0000028bc119a124:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a12e:   	callq	*%r10
  0x0000028bc119a131:   	hlt
  0x0000028bc119a132:   	popq	%r10
  0x0000028bc119a134:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119a138:   	testq	%r11, %r11
  0x0000028bc119a13b:   	je	0x41
  0x0000028bc119a141:   	pushq	%rdi
  0x0000028bc119a142:   	pushq	%r10
  0x0000028bc119a144:   	movl	0x8(%r11), %edi
  0x0000028bc119a148:   	movabsq	$0x800000000, %r10
  0x0000028bc119a152:   	addq	%r10, %rdi
  0x0000028bc119a155:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119a15f:   	cmpq	(%r10), %rdi
  0x0000028bc119a162:   	je	0x36
  0x0000028bc119a168:   	movq	0x40(%rdi), %rdi
  0x0000028bc119a16c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119a176:   	cmpq	(%r10), %rdi
  0x0000028bc119a179:   	je	0x1f
  0x0000028bc119a17f:   	popq	%r10
  0x0000028bc119a181:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119a182:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119a18c:   	andq	$-0x10, %rsp
  0x0000028bc119a190:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a19a:   	callq	*%r10
  0x0000028bc119a19d:   	hlt
 ;; L_ok:
  0x0000028bc119a19e:   	popq	%r10
  0x0000028bc119a1a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119a1a1:   	movq	0x10(%r11), %r11
  0x0000028bc119a1a5:   	cmpq	%r11, %r10
  0x0000028bc119a1a8:   	je	0x61
  0x0000028bc119a1ae:   	movl	0x1c(%r11), %eax
  0x0000028bc119a1b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119a1b6:   	je	0x53
  0x0000028bc119a1bc:   	cmpl	$0x28, %eax
  0x0000028bc119a1bf:   	jne	0x2e
  0x0000028bc119a1c5:   	movq	%r11, %rax
  0x0000028bc119a1c8:   	pushq	%rcx
  0x0000028bc119a1c9:   	pushq	%rdi
  0x0000028bc119a1ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119a1d4:   	incl	(%rcx)
  0x0000028bc119a1d6:   	movq	0x30(%r10), %rdi
  0x0000028bc119a1da:   	movl	(%rdi), %ecx
  0x0000028bc119a1dc:   	addq	$0x8, %rdi
  0x0000028bc119a1e0:   	testq	%rax, %rax
  0x0000028bc119a1e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119a1e6:   	popq	%rdi
  0x0000028bc119a1e7:   	popq	%rcx
  0x0000028bc119a1e8:   	jne	0x9
  0x0000028bc119a1ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc119a1ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119a1f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119a1fd:   	andq	$-0x10, %rsp
  0x0000028bc119a201:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a20b:   	callq	*%r10
  0x0000028bc119a20e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119a20f:   	movl	0xc(%r9), %eax
  0x0000028bc119a213:   	shrl	$0x18, %eax
  0x0000028bc119a216:   	andl	$0xf, %eax
  0x0000028bc119a219:   	cmpl	$0x7, %eax
  0x0000028bc119a21c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119a222:   	movabsq	$0x28bdc33e5b0, %rcx;   {external_word}
  0x0000028bc119a22c:   	andq	$-0x10, %rsp
  0x0000028bc119a230:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a23a:   	callq	*%r10
  0x0000028bc119a23d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119a23e:   	movl	0x24(%r9), %ebx
  0x0000028bc119a242:   	pushq	%r10
  0x0000028bc119a244:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119a24e:   	cmpq	(%r10), %r12
  0x0000028bc119a251:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119a257:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119a261:   	andq	$-0x10, %rsp
  0x0000028bc119a265:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a26f:   	callq	*%r10
  0x0000028bc119a272:   	hlt
  0x0000028bc119a273:   	popq	%r10
  0x0000028bc119a275:   	shlq	$0x3, %rbx
  0x0000028bc119a279:   	movq	0x10(%rbx), %rbx
  0x0000028bc119a27d:   	testq	%rbx, %rbx
  0x0000028bc119a280:   	je	0x3
  0x0000028bc119a286:   	jmpq	*0x58(%rbx)
  0x0000028bc119a289:   	jmp	-0x532d6e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119a28e:   	hlt
  0x0000028bc119a28f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3735  119     n 0       java.lang.invoke.MethodHandle::linkToNative(JJIDDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119a310,0x0000028bc119a488] = 376
 main code      [0x0000028bc119a480,0x0000028bc119a487] = 7
 stub code      [0x0000028bc119a487,0x0000028bc119a488] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84bb868} 'linkToNative' '(JJIDDIDDDDDDDDDDDDDDDDDLjava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  # parm2:    r9        = int
  # parm3:    xmm0:xmm0   = double
  # parm4:    xmm1:xmm1   = double
  # parm5:    rdi       = int
  # parm6:    xmm2:xmm2   = double
  # parm7:    xmm3:xmm3   = double
  # parm8:    xmm4:xmm4   = double
  # parm9:    xmm5:xmm5   = double
  # parm10:   xmm6:xmm6   = double
  # parm11:   xmm7:xmm7   = double
  # parm12:   [sp+0x0]   = double  (sp of caller)
  # parm13:   [sp+0x8]   = double
  # parm14:   [sp+0x10]   = double
  # parm15:   [sp+0x18]   = double
  # parm16:   [sp+0x20]   = double
  # parm17:   [sp+0x28]   = double
  # parm18:   [sp+0x30]   = double
  # parm19:   [sp+0x38]   = double
  # parm20:   [sp+0x40]   = double
  # parm21:   [sp+0x48]   = double
  # parm22:   [sp+0x50]   = double
  # parm23:   rsi:rsi   = 'java/lang/Object'
 ;; jump_to_native_invoker {
  0x0000028bc119a480:   	movq	0x10(%rsi), %r10
  0x0000028bc119a484:   	jmpq	*%r10
[Stub Code]
 ;; } jump_to_native_invoker
  0x0000028bc119a487:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3737  119     n 0       java.lang.invoke.MethodHandle::linkToNative(JJIDDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119a310,0x0000028bc119a488] = 376
 main code      [0x0000028bc119a480,0x0000028bc119a487] = 7
 stub code      [0x0000028bc119a487,0x0000028bc119a488] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84bb868} 'linkToNative' '(JJIDDIDDDDDDDDDDDDDDDDDLjava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  # parm2:    r9        = int
  # parm3:    xmm0:xmm0   = double
  # parm4:    xmm1:xmm1   = double
  # parm5:    rdi       = int
  # parm6:    xmm2:xmm2   = double
  # parm7:    xmm3:xmm3   = double
  # parm8:    xmm4:xmm4   = double
  # parm9:    xmm5:xmm5   = double
  # parm10:   xmm6:xmm6   = double
  # parm11:   xmm7:xmm7   = double
  # parm12:   [sp+0x0]   = double  (sp of caller)
  # parm13:   [sp+0x8]   = double
  # parm14:   [sp+0x10]   = double
  # parm15:   [sp+0x18]   = double
  # parm16:   [sp+0x20]   = double
  # parm17:   [sp+0x28]   = double
  # parm18:   [sp+0x30]   = double
  # parm19:   [sp+0x38]   = double
  # parm20:   [sp+0x40]   = double
  # parm21:   [sp+0x48]   = double
  # parm22:   [sp+0x50]   = double
  # parm23:   rsi:rsi   = 'java/lang/Object'
 ;; jump_to_native_invoker {
  0x0000028bc119a480:   	movq	0x10(%rsi), %r10
  0x0000028bc119a484:   	jmpq	*%r10
[Stub Code]
 ;; } jump_to_native_invoker
  0x0000028bc119a487:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3759  120     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLIDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119a610,0x0000028bc119a8a8] = 664
 relocation     [0x0000028bc119a770,0x0000028bc119a7b8] = 72
 main code      [0x0000028bc119a7c0,0x0000028bc119a8a5] = 229
 stub code      [0x0000028bc119a8a5,0x0000028bc119a8a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84c99d8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IDIDDDDDDDDDDDDDDDDDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi       = int
  # parm4:    xmm0:xmm0   = double
  # parm5:    rsi       = int
  # parm6:    xmm1:xmm1   = double
  # parm7:    xmm2:xmm2   = double
  # parm8:    xmm3:xmm3   = double
  # parm9:    xmm4:xmm4   = double
  # parm10:   xmm5:xmm5   = double
  # parm11:   xmm6:xmm6   = double
  # parm12:   xmm7:xmm7   = double
  # parm13:   [sp+0x0]   = double  (sp of caller)
  # parm14:   [sp+0x8]   = double
  # parm15:   [sp+0x10]   = double
  # parm16:   [sp+0x18]   = double
  # parm17:   [sp+0x20]   = double
  # parm18:   [sp+0x28]   = double
  # parm19:   [sp+0x30]   = double
  # parm20:   [sp+0x38]   = double
  # parm21:   [sp+0x40]   = double
  # parm22:   [sp+0x48]   = double
  # parm23:   rcx:rcx   = 'java/lang/invoke/MemberName'
 ;; verify_klass {
  0x0000028bc119a7c0:   	testq	%rcx, %rcx
  0x0000028bc119a7c3:   	je	0x40
  0x0000028bc119a7c9:   	pushq	%rdi
  0x0000028bc119a7ca:   	pushq	%r10
  0x0000028bc119a7cc:   	movl	0x8(%rcx), %edi
  0x0000028bc119a7cf:   	movabsq	$0x800000000, %r10
  0x0000028bc119a7d9:   	addq	%r10, %rdi
  0x0000028bc119a7dc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a7e6:   	cmpq	(%r10), %rdi
  0x0000028bc119a7e9:   	je	0x36
  0x0000028bc119a7ef:   	movq	0x40(%rdi), %rdi
  0x0000028bc119a7f3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a7fd:   	cmpq	(%r10), %rdi
  0x0000028bc119a800:   	je	0x1f
  0x0000028bc119a806:   	popq	%r10
  0x0000028bc119a808:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119a809:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119a813:   	andq	$-0x10, %rsp
  0x0000028bc119a817:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a821:   	callq	*%r10
  0x0000028bc119a824:   	hlt
 ;; L_ok:
  0x0000028bc119a825:   	popq	%r10
  0x0000028bc119a827:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119a828:   	movl	0xc(%rcx), %eax
  0x0000028bc119a82b:   	shrl	$0x18, %eax
  0x0000028bc119a82e:   	andl	$0xf, %eax
  0x0000028bc119a831:   	cmpl	$0x6, %eax
  0x0000028bc119a834:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119a83a:   	movabsq	$0x28bdc33dbb0, %rcx;   {external_word}
  0x0000028bc119a844:   	andq	$-0x10, %rsp
  0x0000028bc119a848:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a852:   	callq	*%r10
  0x0000028bc119a855:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119a856:   	movl	0x24(%rcx), %ebx
  0x0000028bc119a859:   	pushq	%r10
  0x0000028bc119a85b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119a865:   	cmpq	(%r10), %r12
  0x0000028bc119a868:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119a86e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119a878:   	andq	$-0x10, %rsp
  0x0000028bc119a87c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a886:   	callq	*%r10
  0x0000028bc119a889:   	hlt
  0x0000028bc119a88a:   	popq	%r10
  0x0000028bc119a88c:   	shlq	$0x3, %rbx
  0x0000028bc119a890:   	movq	0x10(%rbx), %rbx
  0x0000028bc119a894:   	testq	%rbx, %rbx
  0x0000028bc119a897:   	je	0x3
  0x0000028bc119a89d:   	jmpq	*0x58(%rbx)
  0x0000028bc119a8a0:   	jmp	-0x533385           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119a8a5:   	hlt
  0x0000028bc119a8a6:   	hlt
  0x0000028bc119a8a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3763  120     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLIDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119a610,0x0000028bc119a8a8] = 664
 relocation     [0x0000028bc119a770,0x0000028bc119a7b8] = 72
 main code      [0x0000028bc119a7c0,0x0000028bc119a8a5] = 229
 stub code      [0x0000028bc119a8a5,0x0000028bc119a8a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84c99d8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IDIDDDDDDDDDDDDDDDDDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi       = int
  # parm4:    xmm0:xmm0   = double
  # parm5:    rsi       = int
  # parm6:    xmm1:xmm1   = double
  # parm7:    xmm2:xmm2   = double
  # parm8:    xmm3:xmm3   = double
  # parm9:    xmm4:xmm4   = double
  # parm10:   xmm5:xmm5   = double
  # parm11:   xmm6:xmm6   = double
  # parm12:   xmm7:xmm7   = double
  # parm13:   [sp+0x0]   = double  (sp of caller)
  # parm14:   [sp+0x8]   = double
  # parm15:   [sp+0x10]   = double
  # parm16:   [sp+0x18]   = double
  # parm17:   [sp+0x20]   = double
  # parm18:   [sp+0x28]   = double
  # parm19:   [sp+0x30]   = double
  # parm20:   [sp+0x38]   = double
  # parm21:   [sp+0x40]   = double
  # parm22:   [sp+0x48]   = double
  # parm23:   rcx:rcx   = 'java/lang/invoke/MemberName'
 ;; verify_klass {
  0x0000028bc119a7c0:   	testq	%rcx, %rcx
  0x0000028bc119a7c3:   	je	0x40
  0x0000028bc119a7c9:   	pushq	%rdi
  0x0000028bc119a7ca:   	pushq	%r10
  0x0000028bc119a7cc:   	movl	0x8(%rcx), %edi
  0x0000028bc119a7cf:   	movabsq	$0x800000000, %r10
  0x0000028bc119a7d9:   	addq	%r10, %rdi
  0x0000028bc119a7dc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a7e6:   	cmpq	(%r10), %rdi
  0x0000028bc119a7e9:   	je	0x36
  0x0000028bc119a7ef:   	movq	0x40(%rdi), %rdi
  0x0000028bc119a7f3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119a7fd:   	cmpq	(%r10), %rdi
  0x0000028bc119a800:   	je	0x1f
  0x0000028bc119a806:   	popq	%r10
  0x0000028bc119a808:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119a809:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119a813:   	andq	$-0x10, %rsp
  0x0000028bc119a817:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a821:   	callq	*%r10
  0x0000028bc119a824:   	hlt
 ;; L_ok:
  0x0000028bc119a825:   	popq	%r10
  0x0000028bc119a827:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119a828:   	movl	0xc(%rcx), %eax
  0x0000028bc119a82b:   	shrl	$0x18, %eax
  0x0000028bc119a82e:   	andl	$0xf, %eax
  0x0000028bc119a831:   	cmpl	$0x6, %eax
  0x0000028bc119a834:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119a83a:   	movabsq	$0x28bdc33dbb0, %rcx;   {external_word}
  0x0000028bc119a844:   	andq	$-0x10, %rsp
  0x0000028bc119a848:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a852:   	callq	*%r10
  0x0000028bc119a855:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119a856:   	movl	0x24(%rcx), %ebx
  0x0000028bc119a859:   	pushq	%r10
  0x0000028bc119a85b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119a865:   	cmpq	(%r10), %r12
  0x0000028bc119a868:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119a86e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119a878:   	andq	$-0x10, %rsp
  0x0000028bc119a87c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119a886:   	callq	*%r10
  0x0000028bc119a889:   	hlt
  0x0000028bc119a88a:   	popq	%r10
  0x0000028bc119a88c:   	shlq	$0x3, %rbx
  0x0000028bc119a890:   	movq	0x10(%rbx), %rbx
  0x0000028bc119a894:   	testq	%rbx, %rbx
  0x0000028bc119a897:   	je	0x3
  0x0000028bc119a89d:   	jmpq	*0x58(%rbx)
  0x0000028bc119a8a0:   	jmp	-0x533385           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119a8a5:   	hlt
  0x0000028bc119a8a6:   	hlt
  0x0000028bc119a8a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3771  121     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLIDIDDDDDDDDDDDDDDDDD)I (native)
 total in heap  [0x0000028bc119a910,0x0000028bc119ab88] = 632
 relocation     [0x0000028bc119aa70,0x0000028bc119aab8] = 72
 main code      [0x0000028bc119aac0,0x0000028bc119ab83] = 195
 stub code      [0x0000028bc119ab83,0x0000028bc119ab88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84c9cf0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IDIDDDDDDDDDDDDDDDDD)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = int
  # parm4:    xmm0:xmm0   = double
  # parm5:    rcx       = int
  # parm6:    xmm1:xmm1   = double
  # parm7:    xmm2:xmm2   = double
  # parm8:    xmm3:xmm3   = double
  # parm9:    xmm4:xmm4   = double
  # parm10:   xmm5:xmm5   = double
  # parm11:   xmm6:xmm6   = double
  # parm12:   xmm7:xmm7   = double
  # parm13:   [sp+0x0]   = double  (sp of caller)
  # parm14:   [sp+0x8]   = double
  # parm15:   [sp+0x10]   = double
  # parm16:   [sp+0x18]   = double
  # parm17:   [sp+0x20]   = double
  # parm18:   [sp+0x28]   = double
  # parm19:   [sp+0x30]   = double
  # parm20:   [sp+0x38]   = double
  # parm21:   [sp+0x40]   = double
  # parm22:   [sp+0x48]   = double
 ;; jump_to_lambda_form {
  0x0000028bc119aac0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119aac3:   	pushq	%r10
  0x0000028bc119aac5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119aacf:   	cmpq	(%r10), %r12
  0x0000028bc119aad2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119aad8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119aae2:   	andq	$-0x10, %rsp
  0x0000028bc119aae6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119aaf0:   	callq	*%r10
  0x0000028bc119aaf3:   	hlt
  0x0000028bc119aaf4:   	popq	%r10
  0x0000028bc119aaf6:   	shlq	$0x3, %rbx
  0x0000028bc119aafa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119aafd:   	pushq	%r10
  0x0000028bc119aaff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119ab09:   	cmpq	(%r10), %r12
  0x0000028bc119ab0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119ab12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119ab1c:   	andq	$-0x10, %rsp
  0x0000028bc119ab20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ab2a:   	callq	*%r10
  0x0000028bc119ab2d:   	hlt
  0x0000028bc119ab2e:   	popq	%r10
  0x0000028bc119ab30:   	shlq	$0x3, %rbx
  0x0000028bc119ab34:   	movl	0x24(%rbx), %ebx
  0x0000028bc119ab37:   	pushq	%r10
  0x0000028bc119ab39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119ab43:   	cmpq	(%r10), %r12
  0x0000028bc119ab46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119ab4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119ab56:   	andq	$-0x10, %rsp
  0x0000028bc119ab5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ab64:   	callq	*%r10
  0x0000028bc119ab67:   	hlt
  0x0000028bc119ab68:   	popq	%r10
  0x0000028bc119ab6a:   	shlq	$0x3, %rbx
  0x0000028bc119ab6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119ab72:   	testq	%rbx, %rbx
  0x0000028bc119ab75:   	je	0x3
  0x0000028bc119ab7b:   	jmpq	*0x58(%rbx)
  0x0000028bc119ab7e:   	jmp	-0x533663           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119ab83:   	hlt
  0x0000028bc119ab84:   	hlt
  0x0000028bc119ab85:   	hlt
  0x0000028bc119ab86:   	hlt
  0x0000028bc119ab87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3774  121     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLIDIDDDDDDDDDDDDDDDDD)I (native)
 total in heap  [0x0000028bc119a910,0x0000028bc119ab88] = 632
 relocation     [0x0000028bc119aa70,0x0000028bc119aab8] = 72
 main code      [0x0000028bc119aac0,0x0000028bc119ab83] = 195
 stub code      [0x0000028bc119ab83,0x0000028bc119ab88] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84c9cf0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IDIDDDDDDDDDDDDDDDDD)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = int
  # parm4:    xmm0:xmm0   = double
  # parm5:    rcx       = int
  # parm6:    xmm1:xmm1   = double
  # parm7:    xmm2:xmm2   = double
  # parm8:    xmm3:xmm3   = double
  # parm9:    xmm4:xmm4   = double
  # parm10:   xmm5:xmm5   = double
  # parm11:   xmm6:xmm6   = double
  # parm12:   xmm7:xmm7   = double
  # parm13:   [sp+0x0]   = double  (sp of caller)
  # parm14:   [sp+0x8]   = double
  # parm15:   [sp+0x10]   = double
  # parm16:   [sp+0x18]   = double
  # parm17:   [sp+0x20]   = double
  # parm18:   [sp+0x28]   = double
  # parm19:   [sp+0x30]   = double
  # parm20:   [sp+0x38]   = double
  # parm21:   [sp+0x40]   = double
  # parm22:   [sp+0x48]   = double
 ;; jump_to_lambda_form {
  0x0000028bc119aac0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119aac3:   	pushq	%r10
  0x0000028bc119aac5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119aacf:   	cmpq	(%r10), %r12
  0x0000028bc119aad2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119aad8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119aae2:   	andq	$-0x10, %rsp
  0x0000028bc119aae6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119aaf0:   	callq	*%r10
  0x0000028bc119aaf3:   	hlt
  0x0000028bc119aaf4:   	popq	%r10
  0x0000028bc119aaf6:   	shlq	$0x3, %rbx
  0x0000028bc119aafa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119aafd:   	pushq	%r10
  0x0000028bc119aaff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119ab09:   	cmpq	(%r10), %r12
  0x0000028bc119ab0c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119ab12:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119ab1c:   	andq	$-0x10, %rsp
  0x0000028bc119ab20:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ab2a:   	callq	*%r10
  0x0000028bc119ab2d:   	hlt
  0x0000028bc119ab2e:   	popq	%r10
  0x0000028bc119ab30:   	shlq	$0x3, %rbx
  0x0000028bc119ab34:   	movl	0x24(%rbx), %ebx
  0x0000028bc119ab37:   	pushq	%r10
  0x0000028bc119ab39:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119ab43:   	cmpq	(%r10), %r12
  0x0000028bc119ab46:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119ab4c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119ab56:   	andq	$-0x10, %rsp
  0x0000028bc119ab5a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ab64:   	callq	*%r10
  0x0000028bc119ab67:   	hlt
  0x0000028bc119ab68:   	popq	%r10
  0x0000028bc119ab6a:   	shlq	$0x3, %rbx
  0x0000028bc119ab6e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119ab72:   	testq	%rbx, %rbx
  0x0000028bc119ab75:   	je	0x3
  0x0000028bc119ab7b:   	jmpq	*0x58(%rbx)
  0x0000028bc119ab7e:   	jmp	-0x533663           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119ab83:   	hlt
  0x0000028bc119ab84:   	hlt
  0x0000028bc119ab85:   	hlt
  0x0000028bc119ab86:   	hlt
  0x0000028bc119ab87:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3778  122     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLIDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119ac10,0x0000028bc119b010] = 1024
 relocation     [0x0000028bc119ad70,0x0000028bc119ae00] = 144
 main code      [0x0000028bc119ae00,0x0000028bc119b010] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84c9e28} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IDIDDDDDDDDDDDDDDDDDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi       = int
  # parm5:    xmm0:xmm0   = double
  # parm6:    rcx       = int
  # parm7:    xmm1:xmm1   = double
  # parm8:    xmm2:xmm2   = double
  # parm9:    xmm3:xmm3   = double
  # parm10:   xmm4:xmm4   = double
  # parm11:   xmm5:xmm5   = double
  # parm12:   xmm6:xmm6   = double
  # parm13:   xmm7:xmm7   = double
  # parm14:   [sp+0x0]   = double  (sp of caller)
  # parm15:   [sp+0x8]   = double
  # parm16:   [sp+0x10]   = double
  # parm17:   [sp+0x18]   = double
  # parm18:   [sp+0x20]   = double
  # parm19:   [sp+0x28]   = double
  # parm20:   [sp+0x30]   = double
  # parm21:   [sp+0x38]   = double
  # parm22:   [sp+0x40]   = double
  # parm23:   [sp+0x48]   = double
  # parm24:   [sp+0x50]   = 'java/lang/invoke/MemberName'
  0x0000028bc119ae00:   	movq	0x58(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc119ae05:   	testq	%rbx, %rbx
  0x0000028bc119ae08:   	je	0x40
  0x0000028bc119ae0e:   	pushq	%rdi
  0x0000028bc119ae0f:   	pushq	%r10
  0x0000028bc119ae11:   	movl	0x8(%rbx), %edi
  0x0000028bc119ae14:   	movabsq	$0x800000000, %r10
  0x0000028bc119ae1e:   	addq	%r10, %rdi
  0x0000028bc119ae21:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119ae2b:   	cmpq	(%r10), %rdi
  0x0000028bc119ae2e:   	je	0x36
  0x0000028bc119ae34:   	movq	0x40(%rdi), %rdi
  0x0000028bc119ae38:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119ae42:   	cmpq	(%r10), %rdi
  0x0000028bc119ae45:   	je	0x1f
  0x0000028bc119ae4b:   	popq	%r10
  0x0000028bc119ae4d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119ae4e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119ae58:   	andq	$-0x10, %rsp
  0x0000028bc119ae5c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ae66:   	callq	*%r10
  0x0000028bc119ae69:   	hlt
 ;; L_ok:
  0x0000028bc119ae6a:   	popq	%r10
  0x0000028bc119ae6c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119ae6d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119ae70:   	movl	0x8(%rdx), %r10d
  0x0000028bc119ae74:   	movabsq	$0x800000000, %r11
  0x0000028bc119ae7e:   	addq	%r11, %r10
  0x0000028bc119ae81:   	movl	0x18(%rbx), %r11d
  0x0000028bc119ae85:   	pushq	%r10
  0x0000028bc119ae87:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119ae91:   	cmpq	(%r10), %r12
  0x0000028bc119ae94:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119ae9a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119aea4:   	andq	$-0x10, %rsp
  0x0000028bc119aea8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119aeb2:   	callq	*%r10
  0x0000028bc119aeb5:   	hlt
  0x0000028bc119aeb6:   	popq	%r10
  0x0000028bc119aeb8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119aebc:   	testq	%r11, %r11
  0x0000028bc119aebf:   	je	0x41
  0x0000028bc119aec5:   	pushq	%rdi
  0x0000028bc119aec6:   	pushq	%r10
  0x0000028bc119aec8:   	movl	0x8(%r11), %edi
  0x0000028bc119aecc:   	movabsq	$0x800000000, %r10
  0x0000028bc119aed6:   	addq	%r10, %rdi
  0x0000028bc119aed9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119aee3:   	cmpq	(%r10), %rdi
  0x0000028bc119aee6:   	je	0x36
  0x0000028bc119aeec:   	movq	0x40(%rdi), %rdi
  0x0000028bc119aef0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119aefa:   	cmpq	(%r10), %rdi
  0x0000028bc119aefd:   	je	0x1f
  0x0000028bc119af03:   	popq	%r10
  0x0000028bc119af05:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119af06:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119af10:   	andq	$-0x10, %rsp
  0x0000028bc119af14:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119af1e:   	callq	*%r10
  0x0000028bc119af21:   	hlt
 ;; L_ok:
  0x0000028bc119af22:   	popq	%r10
  0x0000028bc119af24:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119af25:   	movq	0x10(%r11), %r11
  0x0000028bc119af29:   	cmpq	%r11, %r10
  0x0000028bc119af2c:   	je	0x61
  0x0000028bc119af32:   	movl	0x1c(%r11), %eax
  0x0000028bc119af36:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119af3a:   	je	0x53
  0x0000028bc119af40:   	cmpl	$0x28, %eax
  0x0000028bc119af43:   	jne	0x2e
  0x0000028bc119af49:   	movq	%r11, %rax
  0x0000028bc119af4c:   	pushq	%rcx
  0x0000028bc119af4d:   	pushq	%rdi
  0x0000028bc119af4e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119af58:   	incl	(%rcx)
  0x0000028bc119af5a:   	movq	0x30(%r10), %rdi
  0x0000028bc119af5e:   	movl	(%rdi), %ecx
  0x0000028bc119af60:   	addq	$0x8, %rdi
  0x0000028bc119af64:   	testq	%rax, %rax
  0x0000028bc119af67:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119af6a:   	popq	%rdi
  0x0000028bc119af6b:   	popq	%rcx
  0x0000028bc119af6c:   	jne	0x9
  0x0000028bc119af6e:   	movq	%r11, 0x28(%r10)
  0x0000028bc119af72:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119af77:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119af81:   	andq	$-0x10, %rsp
  0x0000028bc119af85:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119af8f:   	callq	*%r10
  0x0000028bc119af92:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119af93:   	movl	0xc(%rbx), %eax
  0x0000028bc119af96:   	shrl	$0x18, %eax
  0x0000028bc119af99:   	andl	$0xf, %eax
  0x0000028bc119af9c:   	cmpl	$0x7, %eax
  0x0000028bc119af9f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119afa5:   	movabsq	$0x28bdc33d1b0, %rcx;   {external_word}
  0x0000028bc119afaf:   	andq	$-0x10, %rsp
  0x0000028bc119afb3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119afbd:   	callq	*%r10
  0x0000028bc119afc0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119afc1:   	movl	0x24(%rbx), %ebx
  0x0000028bc119afc4:   	pushq	%r10
  0x0000028bc119afc6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119afd0:   	cmpq	(%r10), %r12
  0x0000028bc119afd3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119afd9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119afe3:   	andq	$-0x10, %rsp
  0x0000028bc119afe7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119aff1:   	callq	*%r10
  0x0000028bc119aff4:   	hlt
  0x0000028bc119aff5:   	popq	%r10
  0x0000028bc119aff7:   	shlq	$0x3, %rbx
  0x0000028bc119affb:   	movq	0x10(%rbx), %rbx
  0x0000028bc119afff:   	testq	%rbx, %rbx
  0x0000028bc119b002:   	je	0x3
  0x0000028bc119b008:   	jmpq	*0x58(%rbx)
  0x0000028bc119b00b:   	jmp	-0x533af0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3783  122     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLIDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119ac10,0x0000028bc119b010] = 1024
 relocation     [0x0000028bc119ad70,0x0000028bc119ae00] = 144
 main code      [0x0000028bc119ae00,0x0000028bc119b010] = 528

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84c9e28} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IDIDDDDDDDDDDDDDDDDDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi       = int
  # parm5:    xmm0:xmm0   = double
  # parm6:    rcx       = int
  # parm7:    xmm1:xmm1   = double
  # parm8:    xmm2:xmm2   = double
  # parm9:    xmm3:xmm3   = double
  # parm10:   xmm4:xmm4   = double
  # parm11:   xmm5:xmm5   = double
  # parm12:   xmm6:xmm6   = double
  # parm13:   xmm7:xmm7   = double
  # parm14:   [sp+0x0]   = double  (sp of caller)
  # parm15:   [sp+0x8]   = double
  # parm16:   [sp+0x10]   = double
  # parm17:   [sp+0x18]   = double
  # parm18:   [sp+0x20]   = double
  # parm19:   [sp+0x28]   = double
  # parm20:   [sp+0x30]   = double
  # parm21:   [sp+0x38]   = double
  # parm22:   [sp+0x40]   = double
  # parm23:   [sp+0x48]   = double
  # parm24:   [sp+0x50]   = 'java/lang/invoke/MemberName'
  0x0000028bc119ae00:   	movq	0x58(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc119ae05:   	testq	%rbx, %rbx
  0x0000028bc119ae08:   	je	0x40
  0x0000028bc119ae0e:   	pushq	%rdi
  0x0000028bc119ae0f:   	pushq	%r10
  0x0000028bc119ae11:   	movl	0x8(%rbx), %edi
  0x0000028bc119ae14:   	movabsq	$0x800000000, %r10
  0x0000028bc119ae1e:   	addq	%r10, %rdi
  0x0000028bc119ae21:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119ae2b:   	cmpq	(%r10), %rdi
  0x0000028bc119ae2e:   	je	0x36
  0x0000028bc119ae34:   	movq	0x40(%rdi), %rdi
  0x0000028bc119ae38:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119ae42:   	cmpq	(%r10), %rdi
  0x0000028bc119ae45:   	je	0x1f
  0x0000028bc119ae4b:   	popq	%r10
  0x0000028bc119ae4d:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119ae4e:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119ae58:   	andq	$-0x10, %rsp
  0x0000028bc119ae5c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ae66:   	callq	*%r10
  0x0000028bc119ae69:   	hlt
 ;; L_ok:
  0x0000028bc119ae6a:   	popq	%r10
  0x0000028bc119ae6c:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119ae6d:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119ae70:   	movl	0x8(%rdx), %r10d
  0x0000028bc119ae74:   	movabsq	$0x800000000, %r11
  0x0000028bc119ae7e:   	addq	%r11, %r10
  0x0000028bc119ae81:   	movl	0x18(%rbx), %r11d
  0x0000028bc119ae85:   	pushq	%r10
  0x0000028bc119ae87:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119ae91:   	cmpq	(%r10), %r12
  0x0000028bc119ae94:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119ae9a:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119aea4:   	andq	$-0x10, %rsp
  0x0000028bc119aea8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119aeb2:   	callq	*%r10
  0x0000028bc119aeb5:   	hlt
  0x0000028bc119aeb6:   	popq	%r10
  0x0000028bc119aeb8:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119aebc:   	testq	%r11, %r11
  0x0000028bc119aebf:   	je	0x41
  0x0000028bc119aec5:   	pushq	%rdi
  0x0000028bc119aec6:   	pushq	%r10
  0x0000028bc119aec8:   	movl	0x8(%r11), %edi
  0x0000028bc119aecc:   	movabsq	$0x800000000, %r10
  0x0000028bc119aed6:   	addq	%r10, %rdi
  0x0000028bc119aed9:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119aee3:   	cmpq	(%r10), %rdi
  0x0000028bc119aee6:   	je	0x36
  0x0000028bc119aeec:   	movq	0x40(%rdi), %rdi
  0x0000028bc119aef0:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119aefa:   	cmpq	(%r10), %rdi
  0x0000028bc119aefd:   	je	0x1f
  0x0000028bc119af03:   	popq	%r10
  0x0000028bc119af05:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119af06:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119af10:   	andq	$-0x10, %rsp
  0x0000028bc119af14:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119af1e:   	callq	*%r10
  0x0000028bc119af21:   	hlt
 ;; L_ok:
  0x0000028bc119af22:   	popq	%r10
  0x0000028bc119af24:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119af25:   	movq	0x10(%r11), %r11
  0x0000028bc119af29:   	cmpq	%r11, %r10
  0x0000028bc119af2c:   	je	0x61
  0x0000028bc119af32:   	movl	0x1c(%r11), %eax
  0x0000028bc119af36:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119af3a:   	je	0x53
  0x0000028bc119af40:   	cmpl	$0x28, %eax
  0x0000028bc119af43:   	jne	0x2e
  0x0000028bc119af49:   	movq	%r11, %rax
  0x0000028bc119af4c:   	pushq	%rcx
  0x0000028bc119af4d:   	pushq	%rdi
  0x0000028bc119af4e:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119af58:   	incl	(%rcx)
  0x0000028bc119af5a:   	movq	0x30(%r10), %rdi
  0x0000028bc119af5e:   	movl	(%rdi), %ecx
  0x0000028bc119af60:   	addq	$0x8, %rdi
  0x0000028bc119af64:   	testq	%rax, %rax
  0x0000028bc119af67:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119af6a:   	popq	%rdi
  0x0000028bc119af6b:   	popq	%rcx
  0x0000028bc119af6c:   	jne	0x9
  0x0000028bc119af6e:   	movq	%r11, 0x28(%r10)
  0x0000028bc119af72:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119af77:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119af81:   	andq	$-0x10, %rsp
  0x0000028bc119af85:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119af8f:   	callq	*%r10
  0x0000028bc119af92:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119af93:   	movl	0xc(%rbx), %eax
  0x0000028bc119af96:   	shrl	$0x18, %eax
  0x0000028bc119af99:   	andl	$0xf, %eax
  0x0000028bc119af9c:   	cmpl	$0x7, %eax
  0x0000028bc119af9f:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119afa5:   	movabsq	$0x28bdc33d1b0, %rcx;   {external_word}
  0x0000028bc119afaf:   	andq	$-0x10, %rsp
  0x0000028bc119afb3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119afbd:   	callq	*%r10
  0x0000028bc119afc0:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119afc1:   	movl	0x24(%rbx), %ebx
  0x0000028bc119afc4:   	pushq	%r10
  0x0000028bc119afc6:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119afd0:   	cmpq	(%r10), %r12
  0x0000028bc119afd3:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119afd9:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119afe3:   	andq	$-0x10, %rsp
  0x0000028bc119afe7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119aff1:   	callq	*%r10
  0x0000028bc119aff4:   	hlt
  0x0000028bc119aff5:   	popq	%r10
  0x0000028bc119aff7:   	shlq	$0x3, %rbx
  0x0000028bc119affb:   	movq	0x10(%rbx), %rbx
  0x0000028bc119afff:   	testq	%rbx, %rbx
  0x0000028bc119b002:   	je	0x3
  0x0000028bc119b008:   	jmpq	*0x58(%rbx)
  0x0000028bc119b00b:   	jmp	-0x533af0           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3793  123     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)V (native)
 total in heap  [0x0000028bc119b090,0x0000028bc119b308] = 632
 relocation     [0x0000028bc119b1f0,0x0000028bc119b238] = 72
 main code      [0x0000028bc119b240,0x0000028bc119b303] = 195
 stub code      [0x0000028bc119b303,0x0000028bc119b308] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ca470} 'invokeBasic' '(Ljava/lang/Object;)V' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119b240:   	movl	0x14(%rdx), %ebx
  0x0000028bc119b243:   	pushq	%r10
  0x0000028bc119b245:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b24f:   	cmpq	(%r10), %r12
  0x0000028bc119b252:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b258:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b262:   	andq	$-0x10, %rsp
  0x0000028bc119b266:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b270:   	callq	*%r10
  0x0000028bc119b273:   	hlt
  0x0000028bc119b274:   	popq	%r10
  0x0000028bc119b276:   	shlq	$0x3, %rbx
  0x0000028bc119b27a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119b27d:   	pushq	%r10
  0x0000028bc119b27f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b289:   	cmpq	(%r10), %r12
  0x0000028bc119b28c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b292:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b29c:   	andq	$-0x10, %rsp
  0x0000028bc119b2a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b2aa:   	callq	*%r10
  0x0000028bc119b2ad:   	hlt
  0x0000028bc119b2ae:   	popq	%r10
  0x0000028bc119b2b0:   	shlq	$0x3, %rbx
  0x0000028bc119b2b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119b2b7:   	pushq	%r10
  0x0000028bc119b2b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b2c3:   	cmpq	(%r10), %r12
  0x0000028bc119b2c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b2cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b2d6:   	andq	$-0x10, %rsp
  0x0000028bc119b2da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b2e4:   	callq	*%r10
  0x0000028bc119b2e7:   	hlt
  0x0000028bc119b2e8:   	popq	%r10
  0x0000028bc119b2ea:   	shlq	$0x3, %rbx
  0x0000028bc119b2ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119b2f2:   	testq	%rbx, %rbx
  0x0000028bc119b2f5:   	je	0x3
  0x0000028bc119b2fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119b2fe:   	jmp	-0x533de3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119b303:   	hlt
  0x0000028bc119b304:   	hlt
  0x0000028bc119b305:   	hlt
  0x0000028bc119b306:   	hlt
  0x0000028bc119b307:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3795  123     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)V (native)
 total in heap  [0x0000028bc119b090,0x0000028bc119b308] = 632
 relocation     [0x0000028bc119b1f0,0x0000028bc119b238] = 72
 main code      [0x0000028bc119b240,0x0000028bc119b303] = 195
 stub code      [0x0000028bc119b303,0x0000028bc119b308] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ca470} 'invokeBasic' '(Ljava/lang/Object;)V' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119b240:   	movl	0x14(%rdx), %ebx
  0x0000028bc119b243:   	pushq	%r10
  0x0000028bc119b245:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b24f:   	cmpq	(%r10), %r12
  0x0000028bc119b252:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b258:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b262:   	andq	$-0x10, %rsp
  0x0000028bc119b266:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b270:   	callq	*%r10
  0x0000028bc119b273:   	hlt
  0x0000028bc119b274:   	popq	%r10
  0x0000028bc119b276:   	shlq	$0x3, %rbx
  0x0000028bc119b27a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119b27d:   	pushq	%r10
  0x0000028bc119b27f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b289:   	cmpq	(%r10), %r12
  0x0000028bc119b28c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b292:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b29c:   	andq	$-0x10, %rsp
  0x0000028bc119b2a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b2aa:   	callq	*%r10
  0x0000028bc119b2ad:   	hlt
  0x0000028bc119b2ae:   	popq	%r10
  0x0000028bc119b2b0:   	shlq	$0x3, %rbx
  0x0000028bc119b2b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119b2b7:   	pushq	%r10
  0x0000028bc119b2b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b2c3:   	cmpq	(%r10), %r12
  0x0000028bc119b2c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b2cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b2d6:   	andq	$-0x10, %rsp
  0x0000028bc119b2da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b2e4:   	callq	*%r10
  0x0000028bc119b2e7:   	hlt
  0x0000028bc119b2e8:   	popq	%r10
  0x0000028bc119b2ea:   	shlq	$0x3, %rbx
  0x0000028bc119b2ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119b2f2:   	testq	%rbx, %rbx
  0x0000028bc119b2f5:   	je	0x3
  0x0000028bc119b2fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119b2fe:   	jmp	-0x533de3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119b303:   	hlt
  0x0000028bc119b304:   	hlt
  0x0000028bc119b305:   	hlt
  0x0000028bc119b306:   	hlt
  0x0000028bc119b307:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3822  124     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)I (native)
 total in heap  [0x0000028bc119b390,0x0000028bc119b628] = 664
 relocation     [0x0000028bc119b4f0,0x0000028bc119b538] = 72
 main code      [0x0000028bc119b540,0x0000028bc119b628] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cb248} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119b540:   	testq	%r9, %r9
  0x0000028bc119b543:   	je	0x41
  0x0000028bc119b549:   	pushq	%rdi
  0x0000028bc119b54a:   	pushq	%r10
  0x0000028bc119b54c:   	movl	0x8(%r9), %edi
  0x0000028bc119b550:   	movabsq	$0x800000000, %r10
  0x0000028bc119b55a:   	addq	%r10, %rdi
  0x0000028bc119b55d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119b567:   	cmpq	(%r10), %rdi
  0x0000028bc119b56a:   	je	0x36
  0x0000028bc119b570:   	movq	0x40(%rdi), %rdi
  0x0000028bc119b574:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119b57e:   	cmpq	(%r10), %rdi
  0x0000028bc119b581:   	je	0x1f
  0x0000028bc119b587:   	popq	%r10
  0x0000028bc119b589:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119b58a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119b594:   	andq	$-0x10, %rsp
  0x0000028bc119b598:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b5a2:   	callq	*%r10
  0x0000028bc119b5a5:   	hlt
 ;; L_ok:
  0x0000028bc119b5a6:   	popq	%r10
  0x0000028bc119b5a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119b5a9:   	movl	0xc(%r9), %eax
  0x0000028bc119b5ad:   	shrl	$0x18, %eax
  0x0000028bc119b5b0:   	andl	$0xf, %eax
  0x0000028bc119b5b3:   	cmpl	$0x6, %eax
  0x0000028bc119b5b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119b5bc:   	movabsq	$0x28bdc33e6b0, %rcx;   {external_word}
  0x0000028bc119b5c6:   	andq	$-0x10, %rsp
  0x0000028bc119b5ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b5d4:   	callq	*%r10
  0x0000028bc119b5d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119b5d8:   	movl	0x24(%r9), %ebx
  0x0000028bc119b5dc:   	pushq	%r10
  0x0000028bc119b5de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b5e8:   	cmpq	(%r10), %r12
  0x0000028bc119b5eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b5f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b5fb:   	andq	$-0x10, %rsp
  0x0000028bc119b5ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b609:   	callq	*%r10
  0x0000028bc119b60c:   	hlt
  0x0000028bc119b60d:   	popq	%r10
  0x0000028bc119b60f:   	shlq	$0x3, %rbx
  0x0000028bc119b613:   	movq	0x10(%rbx), %rbx
  0x0000028bc119b617:   	testq	%rbx, %rbx
  0x0000028bc119b61a:   	je	0x3
  0x0000028bc119b620:   	jmpq	*0x58(%rbx)
  0x0000028bc119b623:   	jmp	-0x534108           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3825  124     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)I (native)
 total in heap  [0x0000028bc119b390,0x0000028bc119b628] = 664
 relocation     [0x0000028bc119b4f0,0x0000028bc119b538] = 72
 main code      [0x0000028bc119b540,0x0000028bc119b628] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cb248} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119b540:   	testq	%r9, %r9
  0x0000028bc119b543:   	je	0x41
  0x0000028bc119b549:   	pushq	%rdi
  0x0000028bc119b54a:   	pushq	%r10
  0x0000028bc119b54c:   	movl	0x8(%r9), %edi
  0x0000028bc119b550:   	movabsq	$0x800000000, %r10
  0x0000028bc119b55a:   	addq	%r10, %rdi
  0x0000028bc119b55d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119b567:   	cmpq	(%r10), %rdi
  0x0000028bc119b56a:   	je	0x36
  0x0000028bc119b570:   	movq	0x40(%rdi), %rdi
  0x0000028bc119b574:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119b57e:   	cmpq	(%r10), %rdi
  0x0000028bc119b581:   	je	0x1f
  0x0000028bc119b587:   	popq	%r10
  0x0000028bc119b589:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119b58a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119b594:   	andq	$-0x10, %rsp
  0x0000028bc119b598:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b5a2:   	callq	*%r10
  0x0000028bc119b5a5:   	hlt
 ;; L_ok:
  0x0000028bc119b5a6:   	popq	%r10
  0x0000028bc119b5a8:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119b5a9:   	movl	0xc(%r9), %eax
  0x0000028bc119b5ad:   	shrl	$0x18, %eax
  0x0000028bc119b5b0:   	andl	$0xf, %eax
  0x0000028bc119b5b3:   	cmpl	$0x6, %eax
  0x0000028bc119b5b6:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119b5bc:   	movabsq	$0x28bdc33e6b0, %rcx;   {external_word}
  0x0000028bc119b5c6:   	andq	$-0x10, %rsp
  0x0000028bc119b5ca:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b5d4:   	callq	*%r10
  0x0000028bc119b5d7:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119b5d8:   	movl	0x24(%r9), %ebx
  0x0000028bc119b5dc:   	pushq	%r10
  0x0000028bc119b5de:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b5e8:   	cmpq	(%r10), %r12
  0x0000028bc119b5eb:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b5f1:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b5fb:   	andq	$-0x10, %rsp
  0x0000028bc119b5ff:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b609:   	callq	*%r10
  0x0000028bc119b60c:   	hlt
  0x0000028bc119b60d:   	popq	%r10
  0x0000028bc119b60f:   	shlq	$0x3, %rbx
  0x0000028bc119b613:   	movq	0x10(%rbx), %rbx
  0x0000028bc119b617:   	testq	%rbx, %rbx
  0x0000028bc119b61a:   	je	0x3
  0x0000028bc119b620:   	jmpq	*0x58(%rbx)
  0x0000028bc119b623:   	jmp	-0x534108           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3834  125     n 0       java.lang.invoke.MethodHandle::invokeBasic(LI)I (native)
 total in heap  [0x0000028bc119b690,0x0000028bc119b908] = 632
 relocation     [0x0000028bc119b7f0,0x0000028bc119b838] = 72
 main code      [0x0000028bc119b840,0x0000028bc119b903] = 195
 stub code      [0x0000028bc119b903,0x0000028bc119b908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cb380} 'invokeBasic' '(Ljava/lang/Object;I)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119b840:   	movl	0x14(%rdx), %ebx
  0x0000028bc119b843:   	pushq	%r10
  0x0000028bc119b845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b84f:   	cmpq	(%r10), %r12
  0x0000028bc119b852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b862:   	andq	$-0x10, %rsp
  0x0000028bc119b866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b870:   	callq	*%r10
  0x0000028bc119b873:   	hlt
  0x0000028bc119b874:   	popq	%r10
  0x0000028bc119b876:   	shlq	$0x3, %rbx
  0x0000028bc119b87a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119b87d:   	pushq	%r10
  0x0000028bc119b87f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b889:   	cmpq	(%r10), %r12
  0x0000028bc119b88c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b89c:   	andq	$-0x10, %rsp
  0x0000028bc119b8a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b8aa:   	callq	*%r10
  0x0000028bc119b8ad:   	hlt
  0x0000028bc119b8ae:   	popq	%r10
  0x0000028bc119b8b0:   	shlq	$0x3, %rbx
  0x0000028bc119b8b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119b8b7:   	pushq	%r10
  0x0000028bc119b8b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b8c3:   	cmpq	(%r10), %r12
  0x0000028bc119b8c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b8cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b8d6:   	andq	$-0x10, %rsp
  0x0000028bc119b8da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b8e4:   	callq	*%r10
  0x0000028bc119b8e7:   	hlt
  0x0000028bc119b8e8:   	popq	%r10
  0x0000028bc119b8ea:   	shlq	$0x3, %rbx
  0x0000028bc119b8ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119b8f2:   	testq	%rbx, %rbx
  0x0000028bc119b8f5:   	je	0x3
  0x0000028bc119b8fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119b8fe:   	jmp	-0x5343e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119b903:   	hlt
  0x0000028bc119b904:   	hlt
  0x0000028bc119b905:   	hlt
  0x0000028bc119b906:   	hlt
  0x0000028bc119b907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3836  125     n 0       java.lang.invoke.MethodHandle::invokeBasic(LI)I (native)
 total in heap  [0x0000028bc119b690,0x0000028bc119b908] = 632
 relocation     [0x0000028bc119b7f0,0x0000028bc119b838] = 72
 main code      [0x0000028bc119b840,0x0000028bc119b903] = 195
 stub code      [0x0000028bc119b903,0x0000028bc119b908] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cb380} 'invokeBasic' '(Ljava/lang/Object;I)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119b840:   	movl	0x14(%rdx), %ebx
  0x0000028bc119b843:   	pushq	%r10
  0x0000028bc119b845:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b84f:   	cmpq	(%r10), %r12
  0x0000028bc119b852:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b858:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b862:   	andq	$-0x10, %rsp
  0x0000028bc119b866:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b870:   	callq	*%r10
  0x0000028bc119b873:   	hlt
  0x0000028bc119b874:   	popq	%r10
  0x0000028bc119b876:   	shlq	$0x3, %rbx
  0x0000028bc119b87a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119b87d:   	pushq	%r10
  0x0000028bc119b87f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b889:   	cmpq	(%r10), %r12
  0x0000028bc119b88c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b892:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b89c:   	andq	$-0x10, %rsp
  0x0000028bc119b8a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b8aa:   	callq	*%r10
  0x0000028bc119b8ad:   	hlt
  0x0000028bc119b8ae:   	popq	%r10
  0x0000028bc119b8b0:   	shlq	$0x3, %rbx
  0x0000028bc119b8b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119b8b7:   	pushq	%r10
  0x0000028bc119b8b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119b8c3:   	cmpq	(%r10), %r12
  0x0000028bc119b8c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119b8cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119b8d6:   	andq	$-0x10, %rsp
  0x0000028bc119b8da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119b8e4:   	callq	*%r10
  0x0000028bc119b8e7:   	hlt
  0x0000028bc119b8e8:   	popq	%r10
  0x0000028bc119b8ea:   	shlq	$0x3, %rbx
  0x0000028bc119b8ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119b8f2:   	testq	%rbx, %rbx
  0x0000028bc119b8f5:   	je	0x3
  0x0000028bc119b8fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119b8fe:   	jmp	-0x5343e3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119b903:   	hlt
  0x0000028bc119b904:   	hlt
  0x0000028bc119b905:   	hlt
  0x0000028bc119b906:   	hlt
  0x0000028bc119b907:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3839  126     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLIL)I (native)
 total in heap  [0x0000028bc119b990,0x0000028bc119bd90] = 1024
 relocation     [0x0000028bc119baf0,0x0000028bc119bb80] = 144
 main code      [0x0000028bc119bb80,0x0000028bc119bd8b] = 523
 stub code      [0x0000028bc119bd8b,0x0000028bc119bd90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cb4b8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119bb80:   	testq	%rdi, %rdi
  0x0000028bc119bb83:   	je	0x40
  0x0000028bc119bb89:   	pushq	%rdi
  0x0000028bc119bb8a:   	pushq	%r10
  0x0000028bc119bb8c:   	movl	0x8(%rdi), %edi
  0x0000028bc119bb8f:   	movabsq	$0x800000000, %r10
  0x0000028bc119bb99:   	addq	%r10, %rdi
  0x0000028bc119bb9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bba6:   	cmpq	(%r10), %rdi
  0x0000028bc119bba9:   	je	0x36
  0x0000028bc119bbaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc119bbb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bbbd:   	cmpq	(%r10), %rdi
  0x0000028bc119bbc0:   	je	0x1f
  0x0000028bc119bbc6:   	popq	%r10
  0x0000028bc119bbc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119bbc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119bbd3:   	andq	$-0x10, %rsp
  0x0000028bc119bbd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bbe1:   	callq	*%r10
  0x0000028bc119bbe4:   	hlt
 ;; L_ok:
  0x0000028bc119bbe5:   	popq	%r10
  0x0000028bc119bbe7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119bbe8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119bbeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc119bbef:   	movabsq	$0x800000000, %r11
  0x0000028bc119bbf9:   	addq	%r11, %r10
  0x0000028bc119bbfc:   	movl	0x18(%rdi), %r11d
  0x0000028bc119bc00:   	pushq	%r10
  0x0000028bc119bc02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119bc0c:   	cmpq	(%r10), %r12
  0x0000028bc119bc0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119bc15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119bc1f:   	andq	$-0x10, %rsp
  0x0000028bc119bc23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bc2d:   	callq	*%r10
  0x0000028bc119bc30:   	hlt
  0x0000028bc119bc31:   	popq	%r10
  0x0000028bc119bc33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119bc37:   	testq	%r11, %r11
  0x0000028bc119bc3a:   	je	0x41
  0x0000028bc119bc40:   	pushq	%rdi
  0x0000028bc119bc41:   	pushq	%r10
  0x0000028bc119bc43:   	movl	0x8(%r11), %edi
  0x0000028bc119bc47:   	movabsq	$0x800000000, %r10
  0x0000028bc119bc51:   	addq	%r10, %rdi
  0x0000028bc119bc54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119bc5e:   	cmpq	(%r10), %rdi
  0x0000028bc119bc61:   	je	0x36
  0x0000028bc119bc67:   	movq	0x40(%rdi), %rdi
  0x0000028bc119bc6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119bc75:   	cmpq	(%r10), %rdi
  0x0000028bc119bc78:   	je	0x1f
  0x0000028bc119bc7e:   	popq	%r10
  0x0000028bc119bc80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119bc81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119bc8b:   	andq	$-0x10, %rsp
  0x0000028bc119bc8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bc99:   	callq	*%r10
  0x0000028bc119bc9c:   	hlt
 ;; L_ok:
  0x0000028bc119bc9d:   	popq	%r10
  0x0000028bc119bc9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119bca0:   	movq	0x10(%r11), %r11
  0x0000028bc119bca4:   	cmpq	%r11, %r10
  0x0000028bc119bca7:   	je	0x61
  0x0000028bc119bcad:   	movl	0x1c(%r11), %eax
  0x0000028bc119bcb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119bcb5:   	je	0x53
  0x0000028bc119bcbb:   	cmpl	$0x28, %eax
  0x0000028bc119bcbe:   	jne	0x2e
  0x0000028bc119bcc4:   	movq	%r11, %rax
  0x0000028bc119bcc7:   	pushq	%rcx
  0x0000028bc119bcc8:   	pushq	%rdi
  0x0000028bc119bcc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119bcd3:   	incl	(%rcx)
  0x0000028bc119bcd5:   	movq	0x30(%r10), %rdi
  0x0000028bc119bcd9:   	movl	(%rdi), %ecx
  0x0000028bc119bcdb:   	addq	$0x8, %rdi
  0x0000028bc119bcdf:   	testq	%rax, %rax
  0x0000028bc119bce2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119bce5:   	popq	%rdi
  0x0000028bc119bce6:   	popq	%rcx
  0x0000028bc119bce7:   	jne	0x9
  0x0000028bc119bce9:   	movq	%r11, 0x28(%r10)
  0x0000028bc119bced:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119bcf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119bcfc:   	andq	$-0x10, %rsp
  0x0000028bc119bd00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bd0a:   	callq	*%r10
  0x0000028bc119bd0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119bd0e:   	movl	0xc(%rdi), %eax
  0x0000028bc119bd11:   	shrl	$0x18, %eax
  0x0000028bc119bd14:   	andl	$0xf, %eax
  0x0000028bc119bd17:   	cmpl	$0x7, %eax
  0x0000028bc119bd1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119bd20:   	movabsq	$0x28bdc33dd30, %rcx;   {external_word}
  0x0000028bc119bd2a:   	andq	$-0x10, %rsp
  0x0000028bc119bd2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bd38:   	callq	*%r10
  0x0000028bc119bd3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119bd3c:   	movl	0x24(%rdi), %ebx
  0x0000028bc119bd3f:   	pushq	%r10
  0x0000028bc119bd41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119bd4b:   	cmpq	(%r10), %r12
  0x0000028bc119bd4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119bd54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119bd5e:   	andq	$-0x10, %rsp
  0x0000028bc119bd62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bd6c:   	callq	*%r10
  0x0000028bc119bd6f:   	hlt
  0x0000028bc119bd70:   	popq	%r10
  0x0000028bc119bd72:   	shlq	$0x3, %rbx
  0x0000028bc119bd76:   	movq	0x10(%rbx), %rbx
  0x0000028bc119bd7a:   	testq	%rbx, %rbx
  0x0000028bc119bd7d:   	je	0x3
  0x0000028bc119bd83:   	jmpq	*0x58(%rbx)
  0x0000028bc119bd86:   	jmp	-0x53486b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119bd8b:   	hlt
  0x0000028bc119bd8c:   	hlt
  0x0000028bc119bd8d:   	hlt
  0x0000028bc119bd8e:   	hlt
  0x0000028bc119bd8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3843  126     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLIL)I (native)
 total in heap  [0x0000028bc119b990,0x0000028bc119bd90] = 1024
 relocation     [0x0000028bc119baf0,0x0000028bc119bb80] = 144
 main code      [0x0000028bc119bb80,0x0000028bc119bd8b] = 523
 stub code      [0x0000028bc119bd8b,0x0000028bc119bd90] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cb4b8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119bb80:   	testq	%rdi, %rdi
  0x0000028bc119bb83:   	je	0x40
  0x0000028bc119bb89:   	pushq	%rdi
  0x0000028bc119bb8a:   	pushq	%r10
  0x0000028bc119bb8c:   	movl	0x8(%rdi), %edi
  0x0000028bc119bb8f:   	movabsq	$0x800000000, %r10
  0x0000028bc119bb99:   	addq	%r10, %rdi
  0x0000028bc119bb9c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bba6:   	cmpq	(%r10), %rdi
  0x0000028bc119bba9:   	je	0x36
  0x0000028bc119bbaf:   	movq	0x40(%rdi), %rdi
  0x0000028bc119bbb3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bbbd:   	cmpq	(%r10), %rdi
  0x0000028bc119bbc0:   	je	0x1f
  0x0000028bc119bbc6:   	popq	%r10
  0x0000028bc119bbc8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119bbc9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119bbd3:   	andq	$-0x10, %rsp
  0x0000028bc119bbd7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bbe1:   	callq	*%r10
  0x0000028bc119bbe4:   	hlt
 ;; L_ok:
  0x0000028bc119bbe5:   	popq	%r10
  0x0000028bc119bbe7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119bbe8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119bbeb:   	movl	0x8(%rdx), %r10d
  0x0000028bc119bbef:   	movabsq	$0x800000000, %r11
  0x0000028bc119bbf9:   	addq	%r11, %r10
  0x0000028bc119bbfc:   	movl	0x18(%rdi), %r11d
  0x0000028bc119bc00:   	pushq	%r10
  0x0000028bc119bc02:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119bc0c:   	cmpq	(%r10), %r12
  0x0000028bc119bc0f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119bc15:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119bc1f:   	andq	$-0x10, %rsp
  0x0000028bc119bc23:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bc2d:   	callq	*%r10
  0x0000028bc119bc30:   	hlt
  0x0000028bc119bc31:   	popq	%r10
  0x0000028bc119bc33:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119bc37:   	testq	%r11, %r11
  0x0000028bc119bc3a:   	je	0x41
  0x0000028bc119bc40:   	pushq	%rdi
  0x0000028bc119bc41:   	pushq	%r10
  0x0000028bc119bc43:   	movl	0x8(%r11), %edi
  0x0000028bc119bc47:   	movabsq	$0x800000000, %r10
  0x0000028bc119bc51:   	addq	%r10, %rdi
  0x0000028bc119bc54:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119bc5e:   	cmpq	(%r10), %rdi
  0x0000028bc119bc61:   	je	0x36
  0x0000028bc119bc67:   	movq	0x40(%rdi), %rdi
  0x0000028bc119bc6b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119bc75:   	cmpq	(%r10), %rdi
  0x0000028bc119bc78:   	je	0x1f
  0x0000028bc119bc7e:   	popq	%r10
  0x0000028bc119bc80:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119bc81:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119bc8b:   	andq	$-0x10, %rsp
  0x0000028bc119bc8f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bc99:   	callq	*%r10
  0x0000028bc119bc9c:   	hlt
 ;; L_ok:
  0x0000028bc119bc9d:   	popq	%r10
  0x0000028bc119bc9f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119bca0:   	movq	0x10(%r11), %r11
  0x0000028bc119bca4:   	cmpq	%r11, %r10
  0x0000028bc119bca7:   	je	0x61
  0x0000028bc119bcad:   	movl	0x1c(%r11), %eax
  0x0000028bc119bcb1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119bcb5:   	je	0x53
  0x0000028bc119bcbb:   	cmpl	$0x28, %eax
  0x0000028bc119bcbe:   	jne	0x2e
  0x0000028bc119bcc4:   	movq	%r11, %rax
  0x0000028bc119bcc7:   	pushq	%rcx
  0x0000028bc119bcc8:   	pushq	%rdi
  0x0000028bc119bcc9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119bcd3:   	incl	(%rcx)
  0x0000028bc119bcd5:   	movq	0x30(%r10), %rdi
  0x0000028bc119bcd9:   	movl	(%rdi), %ecx
  0x0000028bc119bcdb:   	addq	$0x8, %rdi
  0x0000028bc119bcdf:   	testq	%rax, %rax
  0x0000028bc119bce2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119bce5:   	popq	%rdi
  0x0000028bc119bce6:   	popq	%rcx
  0x0000028bc119bce7:   	jne	0x9
  0x0000028bc119bce9:   	movq	%r11, 0x28(%r10)
  0x0000028bc119bced:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119bcf2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119bcfc:   	andq	$-0x10, %rsp
  0x0000028bc119bd00:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bd0a:   	callq	*%r10
  0x0000028bc119bd0d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119bd0e:   	movl	0xc(%rdi), %eax
  0x0000028bc119bd11:   	shrl	$0x18, %eax
  0x0000028bc119bd14:   	andl	$0xf, %eax
  0x0000028bc119bd17:   	cmpl	$0x7, %eax
  0x0000028bc119bd1a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119bd20:   	movabsq	$0x28bdc33dd30, %rcx;   {external_word}
  0x0000028bc119bd2a:   	andq	$-0x10, %rsp
  0x0000028bc119bd2e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bd38:   	callq	*%r10
  0x0000028bc119bd3b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119bd3c:   	movl	0x24(%rdi), %ebx
  0x0000028bc119bd3f:   	pushq	%r10
  0x0000028bc119bd41:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119bd4b:   	cmpq	(%r10), %r12
  0x0000028bc119bd4e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119bd54:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119bd5e:   	andq	$-0x10, %rsp
  0x0000028bc119bd62:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119bd6c:   	callq	*%r10
  0x0000028bc119bd6f:   	hlt
  0x0000028bc119bd70:   	popq	%r10
  0x0000028bc119bd72:   	shlq	$0x3, %rbx
  0x0000028bc119bd76:   	movq	0x10(%rbx), %rbx
  0x0000028bc119bd7a:   	testq	%rbx, %rbx
  0x0000028bc119bd7d:   	je	0x3
  0x0000028bc119bd83:   	jmpq	*0x58(%rbx)
  0x0000028bc119bd86:   	jmp	-0x53486b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119bd8b:   	hlt
  0x0000028bc119bd8c:   	hlt
  0x0000028bc119bd8d:   	hlt
  0x0000028bc119bd8e:   	hlt
  0x0000028bc119bd8f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3857  127     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLIL)L (native)
 total in heap  [0x0000028bc119be10,0x0000028bc119c0a8] = 664
 relocation     [0x0000028bc119bf70,0x0000028bc119bfb8] = 72
 main code      [0x0000028bc119bfc0,0x0000028bc119c0a5] = 229
 stub code      [0x0000028bc119c0a5,0x0000028bc119c0a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cc268} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi       = int
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119bfc0:   	testq	%rsi, %rsi
  0x0000028bc119bfc3:   	je	0x40
  0x0000028bc119bfc9:   	pushq	%rdi
  0x0000028bc119bfca:   	pushq	%r10
  0x0000028bc119bfcc:   	movl	0x8(%rsi), %edi
  0x0000028bc119bfcf:   	movabsq	$0x800000000, %r10
  0x0000028bc119bfd9:   	addq	%r10, %rdi
  0x0000028bc119bfdc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bfe6:   	cmpq	(%r10), %rdi
  0x0000028bc119bfe9:   	je	0x36
  0x0000028bc119bfef:   	movq	0x40(%rdi), %rdi
  0x0000028bc119bff3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bffd:   	cmpq	(%r10), %rdi
  0x0000028bc119c000:   	je	0x1f
  0x0000028bc119c006:   	popq	%r10
  0x0000028bc119c008:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119c009:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119c013:   	andq	$-0x10, %rsp
  0x0000028bc119c017:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c021:   	callq	*%r10
  0x0000028bc119c024:   	hlt
 ;; L_ok:
  0x0000028bc119c025:   	popq	%r10
  0x0000028bc119c027:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119c028:   	movl	0xc(%rsi), %eax
  0x0000028bc119c02b:   	shrl	$0x18, %eax
  0x0000028bc119c02e:   	andl	$0xf, %eax
  0x0000028bc119c031:   	cmpl	$0x6, %eax
  0x0000028bc119c034:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119c03a:   	movabsq	$0x28bdc33de30, %rcx;   {external_word}
  0x0000028bc119c044:   	andq	$-0x10, %rsp
  0x0000028bc119c048:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c052:   	callq	*%r10
  0x0000028bc119c055:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119c056:   	movl	0x24(%rsi), %ebx
  0x0000028bc119c059:   	pushq	%r10
  0x0000028bc119c05b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c065:   	cmpq	(%r10), %r12
  0x0000028bc119c068:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c06e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c078:   	andq	$-0x10, %rsp
  0x0000028bc119c07c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c086:   	callq	*%r10
  0x0000028bc119c089:   	hlt
  0x0000028bc119c08a:   	popq	%r10
  0x0000028bc119c08c:   	shlq	$0x3, %rbx
  0x0000028bc119c090:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c094:   	testq	%rbx, %rbx
  0x0000028bc119c097:   	je	0x3
  0x0000028bc119c09d:   	jmpq	*0x58(%rbx)
  0x0000028bc119c0a0:   	jmp	-0x534b85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119c0a5:   	hlt
  0x0000028bc119c0a6:   	hlt
  0x0000028bc119c0a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3860  127     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLIL)L (native)
 total in heap  [0x0000028bc119be10,0x0000028bc119c0a8] = 664
 relocation     [0x0000028bc119bf70,0x0000028bc119bfb8] = 72
 main code      [0x0000028bc119bfc0,0x0000028bc119c0a5] = 229
 stub code      [0x0000028bc119c0a5,0x0000028bc119c0a8] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cc268} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi       = int
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119bfc0:   	testq	%rsi, %rsi
  0x0000028bc119bfc3:   	je	0x40
  0x0000028bc119bfc9:   	pushq	%rdi
  0x0000028bc119bfca:   	pushq	%r10
  0x0000028bc119bfcc:   	movl	0x8(%rsi), %edi
  0x0000028bc119bfcf:   	movabsq	$0x800000000, %r10
  0x0000028bc119bfd9:   	addq	%r10, %rdi
  0x0000028bc119bfdc:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bfe6:   	cmpq	(%r10), %rdi
  0x0000028bc119bfe9:   	je	0x36
  0x0000028bc119bfef:   	movq	0x40(%rdi), %rdi
  0x0000028bc119bff3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119bffd:   	cmpq	(%r10), %rdi
  0x0000028bc119c000:   	je	0x1f
  0x0000028bc119c006:   	popq	%r10
  0x0000028bc119c008:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119c009:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119c013:   	andq	$-0x10, %rsp
  0x0000028bc119c017:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c021:   	callq	*%r10
  0x0000028bc119c024:   	hlt
 ;; L_ok:
  0x0000028bc119c025:   	popq	%r10
  0x0000028bc119c027:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119c028:   	movl	0xc(%rsi), %eax
  0x0000028bc119c02b:   	shrl	$0x18, %eax
  0x0000028bc119c02e:   	andl	$0xf, %eax
  0x0000028bc119c031:   	cmpl	$0x6, %eax
  0x0000028bc119c034:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119c03a:   	movabsq	$0x28bdc33de30, %rcx;   {external_word}
  0x0000028bc119c044:   	andq	$-0x10, %rsp
  0x0000028bc119c048:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c052:   	callq	*%r10
  0x0000028bc119c055:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119c056:   	movl	0x24(%rsi), %ebx
  0x0000028bc119c059:   	pushq	%r10
  0x0000028bc119c05b:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c065:   	cmpq	(%r10), %r12
  0x0000028bc119c068:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c06e:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c078:   	andq	$-0x10, %rsp
  0x0000028bc119c07c:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c086:   	callq	*%r10
  0x0000028bc119c089:   	hlt
  0x0000028bc119c08a:   	popq	%r10
  0x0000028bc119c08c:   	shlq	$0x3, %rbx
  0x0000028bc119c090:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c094:   	testq	%rbx, %rbx
  0x0000028bc119c097:   	je	0x3
  0x0000028bc119c09d:   	jmpq	*0x58(%rbx)
  0x0000028bc119c0a0:   	jmp	-0x534b85           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119c0a5:   	hlt
  0x0000028bc119c0a6:   	hlt
  0x0000028bc119c0a7:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3866  128     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLI)L (native)
 total in heap  [0x0000028bc119c110,0x0000028bc119c388] = 632
 relocation     [0x0000028bc119c270,0x0000028bc119c2b8] = 72
 main code      [0x0000028bc119c2c0,0x0000028bc119c383] = 195
 stub code      [0x0000028bc119c383,0x0000028bc119c388] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cc818} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119c2c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119c2c3:   	pushq	%r10
  0x0000028bc119c2c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c2cf:   	cmpq	(%r10), %r12
  0x0000028bc119c2d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c2d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c2e2:   	andq	$-0x10, %rsp
  0x0000028bc119c2e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c2f0:   	callq	*%r10
  0x0000028bc119c2f3:   	hlt
  0x0000028bc119c2f4:   	popq	%r10
  0x0000028bc119c2f6:   	shlq	$0x3, %rbx
  0x0000028bc119c2fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119c2fd:   	pushq	%r10
  0x0000028bc119c2ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c309:   	cmpq	(%r10), %r12
  0x0000028bc119c30c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c31c:   	andq	$-0x10, %rsp
  0x0000028bc119c320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c32a:   	callq	*%r10
  0x0000028bc119c32d:   	hlt
  0x0000028bc119c32e:   	popq	%r10
  0x0000028bc119c330:   	shlq	$0x3, %rbx
  0x0000028bc119c334:   	movl	0x24(%rbx), %ebx
  0x0000028bc119c337:   	pushq	%r10
  0x0000028bc119c339:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c343:   	cmpq	(%r10), %r12
  0x0000028bc119c346:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c34c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c356:   	andq	$-0x10, %rsp
  0x0000028bc119c35a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c364:   	callq	*%r10
  0x0000028bc119c367:   	hlt
  0x0000028bc119c368:   	popq	%r10
  0x0000028bc119c36a:   	shlq	$0x3, %rbx
  0x0000028bc119c36e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c372:   	testq	%rbx, %rbx
  0x0000028bc119c375:   	je	0x3
  0x0000028bc119c37b:   	jmpq	*0x58(%rbx)
  0x0000028bc119c37e:   	jmp	-0x534e63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119c383:   	hlt
  0x0000028bc119c384:   	hlt
  0x0000028bc119c385:   	hlt
  0x0000028bc119c386:   	hlt
  0x0000028bc119c387:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3868  128     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLI)L (native)
 total in heap  [0x0000028bc119c110,0x0000028bc119c388] = 632
 relocation     [0x0000028bc119c270,0x0000028bc119c2b8] = 72
 main code      [0x0000028bc119c2c0,0x0000028bc119c383] = 195
 stub code      [0x0000028bc119c383,0x0000028bc119c388] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cc818} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119c2c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119c2c3:   	pushq	%r10
  0x0000028bc119c2c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c2cf:   	cmpq	(%r10), %r12
  0x0000028bc119c2d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c2d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c2e2:   	andq	$-0x10, %rsp
  0x0000028bc119c2e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c2f0:   	callq	*%r10
  0x0000028bc119c2f3:   	hlt
  0x0000028bc119c2f4:   	popq	%r10
  0x0000028bc119c2f6:   	shlq	$0x3, %rbx
  0x0000028bc119c2fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119c2fd:   	pushq	%r10
  0x0000028bc119c2ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c309:   	cmpq	(%r10), %r12
  0x0000028bc119c30c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c312:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c31c:   	andq	$-0x10, %rsp
  0x0000028bc119c320:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c32a:   	callq	*%r10
  0x0000028bc119c32d:   	hlt
  0x0000028bc119c32e:   	popq	%r10
  0x0000028bc119c330:   	shlq	$0x3, %rbx
  0x0000028bc119c334:   	movl	0x24(%rbx), %ebx
  0x0000028bc119c337:   	pushq	%r10
  0x0000028bc119c339:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c343:   	cmpq	(%r10), %r12
  0x0000028bc119c346:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c34c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c356:   	andq	$-0x10, %rsp
  0x0000028bc119c35a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c364:   	callq	*%r10
  0x0000028bc119c367:   	hlt
  0x0000028bc119c368:   	popq	%r10
  0x0000028bc119c36a:   	shlq	$0x3, %rbx
  0x0000028bc119c36e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c372:   	testq	%rbx, %rbx
  0x0000028bc119c375:   	je	0x3
  0x0000028bc119c37b:   	jmpq	*0x58(%rbx)
  0x0000028bc119c37e:   	jmp	-0x534e63           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119c383:   	hlt
  0x0000028bc119c384:   	hlt
  0x0000028bc119c385:   	hlt
  0x0000028bc119c386:   	hlt
  0x0000028bc119c387:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3872  129     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)D (native)
 total in heap  [0x0000028bc119c410,0x0000028bc119c6a8] = 664
 relocation     [0x0000028bc119c570,0x0000028bc119c5b8] = 72
 main code      [0x0000028bc119c5c0,0x0000028bc119c6a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ccbd8} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)D' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119c5c0:   	testq	%r9, %r9
  0x0000028bc119c5c3:   	je	0x41
  0x0000028bc119c5c9:   	pushq	%rdi
  0x0000028bc119c5ca:   	pushq	%r10
  0x0000028bc119c5cc:   	movl	0x8(%r9), %edi
  0x0000028bc119c5d0:   	movabsq	$0x800000000, %r10
  0x0000028bc119c5da:   	addq	%r10, %rdi
  0x0000028bc119c5dd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119c5e7:   	cmpq	(%r10), %rdi
  0x0000028bc119c5ea:   	je	0x36
  0x0000028bc119c5f0:   	movq	0x40(%rdi), %rdi
  0x0000028bc119c5f4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119c5fe:   	cmpq	(%r10), %rdi
  0x0000028bc119c601:   	je	0x1f
  0x0000028bc119c607:   	popq	%r10
  0x0000028bc119c609:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119c60a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119c614:   	andq	$-0x10, %rsp
  0x0000028bc119c618:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c622:   	callq	*%r10
  0x0000028bc119c625:   	hlt
 ;; L_ok:
  0x0000028bc119c626:   	popq	%r10
  0x0000028bc119c628:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119c629:   	movl	0xc(%r9), %eax
  0x0000028bc119c62d:   	shrl	$0x18, %eax
  0x0000028bc119c630:   	andl	$0xf, %eax
  0x0000028bc119c633:   	cmpl	$0x6, %eax
  0x0000028bc119c636:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119c63c:   	movabsq	$0x28bdc33e130, %rcx;   {external_word}
  0x0000028bc119c646:   	andq	$-0x10, %rsp
  0x0000028bc119c64a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c654:   	callq	*%r10
  0x0000028bc119c657:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119c658:   	movl	0x24(%r9), %ebx
  0x0000028bc119c65c:   	pushq	%r10
  0x0000028bc119c65e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c668:   	cmpq	(%r10), %r12
  0x0000028bc119c66b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c671:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c67b:   	andq	$-0x10, %rsp
  0x0000028bc119c67f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c689:   	callq	*%r10
  0x0000028bc119c68c:   	hlt
  0x0000028bc119c68d:   	popq	%r10
  0x0000028bc119c68f:   	shlq	$0x3, %rbx
  0x0000028bc119c693:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c697:   	testq	%rbx, %rbx
  0x0000028bc119c69a:   	je	0x3
  0x0000028bc119c6a0:   	jmpq	*0x58(%rbx)
  0x0000028bc119c6a3:   	jmp	-0x535188           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3874  129     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)D (native)
 total in heap  [0x0000028bc119c410,0x0000028bc119c6a8] = 664
 relocation     [0x0000028bc119c570,0x0000028bc119c5b8] = 72
 main code      [0x0000028bc119c5c0,0x0000028bc119c6a8] = 232

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ccbd8} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)D' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119c5c0:   	testq	%r9, %r9
  0x0000028bc119c5c3:   	je	0x41
  0x0000028bc119c5c9:   	pushq	%rdi
  0x0000028bc119c5ca:   	pushq	%r10
  0x0000028bc119c5cc:   	movl	0x8(%r9), %edi
  0x0000028bc119c5d0:   	movabsq	$0x800000000, %r10
  0x0000028bc119c5da:   	addq	%r10, %rdi
  0x0000028bc119c5dd:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119c5e7:   	cmpq	(%r10), %rdi
  0x0000028bc119c5ea:   	je	0x36
  0x0000028bc119c5f0:   	movq	0x40(%rdi), %rdi
  0x0000028bc119c5f4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119c5fe:   	cmpq	(%r10), %rdi
  0x0000028bc119c601:   	je	0x1f
  0x0000028bc119c607:   	popq	%r10
  0x0000028bc119c609:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119c60a:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119c614:   	andq	$-0x10, %rsp
  0x0000028bc119c618:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c622:   	callq	*%r10
  0x0000028bc119c625:   	hlt
 ;; L_ok:
  0x0000028bc119c626:   	popq	%r10
  0x0000028bc119c628:   	popq	%rdi
 ;; } verify_klass
 ;; verify_ref_kind {
  0x0000028bc119c629:   	movl	0xc(%r9), %eax
  0x0000028bc119c62d:   	shrl	$0x18, %eax
  0x0000028bc119c630:   	andl	$0xf, %eax
  0x0000028bc119c633:   	cmpl	$0x6, %eax
  0x0000028bc119c636:   	je	0x1c
 ;; verify_ref_kind expected 6
  0x0000028bc119c63c:   	movabsq	$0x28bdc33e130, %rcx;   {external_word}
  0x0000028bc119c646:   	andq	$-0x10, %rsp
  0x0000028bc119c64a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c654:   	callq	*%r10
  0x0000028bc119c657:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119c658:   	movl	0x24(%r9), %ebx
  0x0000028bc119c65c:   	pushq	%r10
  0x0000028bc119c65e:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c668:   	cmpq	(%r10), %r12
  0x0000028bc119c66b:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c671:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c67b:   	andq	$-0x10, %rsp
  0x0000028bc119c67f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c689:   	callq	*%r10
  0x0000028bc119c68c:   	hlt
  0x0000028bc119c68d:   	popq	%r10
  0x0000028bc119c68f:   	shlq	$0x3, %rbx
  0x0000028bc119c693:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c697:   	testq	%rbx, %rbx
  0x0000028bc119c69a:   	je	0x3
  0x0000028bc119c6a0:   	jmpq	*0x58(%rbx)
  0x0000028bc119c6a3:   	jmp	-0x535188           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3879  130     n 0       java.lang.invoke.MethodHandle::invokeBasic(LI)D (native)
 total in heap  [0x0000028bc119c710,0x0000028bc119c988] = 632
 relocation     [0x0000028bc119c870,0x0000028bc119c8b8] = 72
 main code      [0x0000028bc119c8c0,0x0000028bc119c983] = 195
 stub code      [0x0000028bc119c983,0x0000028bc119c988] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ccd10} 'invokeBasic' '(Ljava/lang/Object;I)D' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119c8c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119c8c3:   	pushq	%r10
  0x0000028bc119c8c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c8cf:   	cmpq	(%r10), %r12
  0x0000028bc119c8d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c8d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c8e2:   	andq	$-0x10, %rsp
  0x0000028bc119c8e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c8f0:   	callq	*%r10
  0x0000028bc119c8f3:   	hlt
  0x0000028bc119c8f4:   	popq	%r10
  0x0000028bc119c8f6:   	shlq	$0x3, %rbx
  0x0000028bc119c8fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119c8fd:   	pushq	%r10
  0x0000028bc119c8ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c909:   	cmpq	(%r10), %r12
  0x0000028bc119c90c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c912:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c91c:   	andq	$-0x10, %rsp
  0x0000028bc119c920:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c92a:   	callq	*%r10
  0x0000028bc119c92d:   	hlt
  0x0000028bc119c92e:   	popq	%r10
  0x0000028bc119c930:   	shlq	$0x3, %rbx
  0x0000028bc119c934:   	movl	0x24(%rbx), %ebx
  0x0000028bc119c937:   	pushq	%r10
  0x0000028bc119c939:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c943:   	cmpq	(%r10), %r12
  0x0000028bc119c946:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c94c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c956:   	andq	$-0x10, %rsp
  0x0000028bc119c95a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c964:   	callq	*%r10
  0x0000028bc119c967:   	hlt
  0x0000028bc119c968:   	popq	%r10
  0x0000028bc119c96a:   	shlq	$0x3, %rbx
  0x0000028bc119c96e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c972:   	testq	%rbx, %rbx
  0x0000028bc119c975:   	je	0x3
  0x0000028bc119c97b:   	jmpq	*0x58(%rbx)
  0x0000028bc119c97e:   	jmp	-0x535463           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119c983:   	hlt
  0x0000028bc119c984:   	hlt
  0x0000028bc119c985:   	hlt
  0x0000028bc119c986:   	hlt
  0x0000028bc119c987:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3881  130     n 0       java.lang.invoke.MethodHandle::invokeBasic(LI)D (native)
 total in heap  [0x0000028bc119c710,0x0000028bc119c988] = 632
 relocation     [0x0000028bc119c870,0x0000028bc119c8b8] = 72
 main code      [0x0000028bc119c8c0,0x0000028bc119c983] = 195
 stub code      [0x0000028bc119c983,0x0000028bc119c988] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ccd10} 'invokeBasic' '(Ljava/lang/Object;I)D' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9        = int
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119c8c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119c8c3:   	pushq	%r10
  0x0000028bc119c8c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c8cf:   	cmpq	(%r10), %r12
  0x0000028bc119c8d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c8d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c8e2:   	andq	$-0x10, %rsp
  0x0000028bc119c8e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c8f0:   	callq	*%r10
  0x0000028bc119c8f3:   	hlt
  0x0000028bc119c8f4:   	popq	%r10
  0x0000028bc119c8f6:   	shlq	$0x3, %rbx
  0x0000028bc119c8fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119c8fd:   	pushq	%r10
  0x0000028bc119c8ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c909:   	cmpq	(%r10), %r12
  0x0000028bc119c90c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c912:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c91c:   	andq	$-0x10, %rsp
  0x0000028bc119c920:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c92a:   	callq	*%r10
  0x0000028bc119c92d:   	hlt
  0x0000028bc119c92e:   	popq	%r10
  0x0000028bc119c930:   	shlq	$0x3, %rbx
  0x0000028bc119c934:   	movl	0x24(%rbx), %ebx
  0x0000028bc119c937:   	pushq	%r10
  0x0000028bc119c939:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119c943:   	cmpq	(%r10), %r12
  0x0000028bc119c946:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119c94c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119c956:   	andq	$-0x10, %rsp
  0x0000028bc119c95a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119c964:   	callq	*%r10
  0x0000028bc119c967:   	hlt
  0x0000028bc119c968:   	popq	%r10
  0x0000028bc119c96a:   	shlq	$0x3, %rbx
  0x0000028bc119c96e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119c972:   	testq	%rbx, %rbx
  0x0000028bc119c975:   	je	0x3
  0x0000028bc119c97b:   	jmpq	*0x58(%rbx)
  0x0000028bc119c97e:   	jmp	-0x535463           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119c983:   	hlt
  0x0000028bc119c984:   	hlt
  0x0000028bc119c985:   	hlt
  0x0000028bc119c986:   	hlt
  0x0000028bc119c987:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3884  131     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLIL)D (native)
 total in heap  [0x0000028bc119ca10,0x0000028bc119ce10] = 1024
 relocation     [0x0000028bc119cb70,0x0000028bc119cc00] = 144
 main code      [0x0000028bc119cc00,0x0000028bc119ce0b] = 523
 stub code      [0x0000028bc119ce0b,0x0000028bc119ce10] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cce48} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)D' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119cc00:   	testq	%rdi, %rdi
  0x0000028bc119cc03:   	je	0x40
  0x0000028bc119cc09:   	pushq	%rdi
  0x0000028bc119cc0a:   	pushq	%r10
  0x0000028bc119cc0c:   	movl	0x8(%rdi), %edi
  0x0000028bc119cc0f:   	movabsq	$0x800000000, %r10
  0x0000028bc119cc19:   	addq	%r10, %rdi
  0x0000028bc119cc1c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119cc26:   	cmpq	(%r10), %rdi
  0x0000028bc119cc29:   	je	0x36
  0x0000028bc119cc2f:   	movq	0x40(%rdi), %rdi
  0x0000028bc119cc33:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119cc3d:   	cmpq	(%r10), %rdi
  0x0000028bc119cc40:   	je	0x1f
  0x0000028bc119cc46:   	popq	%r10
  0x0000028bc119cc48:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119cc49:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119cc53:   	andq	$-0x10, %rsp
  0x0000028bc119cc57:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cc61:   	callq	*%r10
  0x0000028bc119cc64:   	hlt
 ;; L_ok:
  0x0000028bc119cc65:   	popq	%r10
  0x0000028bc119cc67:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119cc68:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119cc6b:   	movl	0x8(%rdx), %r10d
  0x0000028bc119cc6f:   	movabsq	$0x800000000, %r11
  0x0000028bc119cc79:   	addq	%r11, %r10
  0x0000028bc119cc7c:   	movl	0x18(%rdi), %r11d
  0x0000028bc119cc80:   	pushq	%r10
  0x0000028bc119cc82:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119cc8c:   	cmpq	(%r10), %r12
  0x0000028bc119cc8f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119cc95:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119cc9f:   	andq	$-0x10, %rsp
  0x0000028bc119cca3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ccad:   	callq	*%r10
  0x0000028bc119ccb0:   	hlt
  0x0000028bc119ccb1:   	popq	%r10
  0x0000028bc119ccb3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119ccb7:   	testq	%r11, %r11
  0x0000028bc119ccba:   	je	0x41
  0x0000028bc119ccc0:   	pushq	%rdi
  0x0000028bc119ccc1:   	pushq	%r10
  0x0000028bc119ccc3:   	movl	0x8(%r11), %edi
  0x0000028bc119ccc7:   	movabsq	$0x800000000, %r10
  0x0000028bc119ccd1:   	addq	%r10, %rdi
  0x0000028bc119ccd4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119ccde:   	cmpq	(%r10), %rdi
  0x0000028bc119cce1:   	je	0x36
  0x0000028bc119cce7:   	movq	0x40(%rdi), %rdi
  0x0000028bc119cceb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119ccf5:   	cmpq	(%r10), %rdi
  0x0000028bc119ccf8:   	je	0x1f
  0x0000028bc119ccfe:   	popq	%r10
  0x0000028bc119cd00:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119cd01:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119cd0b:   	andq	$-0x10, %rsp
  0x0000028bc119cd0f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cd19:   	callq	*%r10
  0x0000028bc119cd1c:   	hlt
 ;; L_ok:
  0x0000028bc119cd1d:   	popq	%r10
  0x0000028bc119cd1f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119cd20:   	movq	0x10(%r11), %r11
  0x0000028bc119cd24:   	cmpq	%r11, %r10
  0x0000028bc119cd27:   	je	0x61
  0x0000028bc119cd2d:   	movl	0x1c(%r11), %eax
  0x0000028bc119cd31:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119cd35:   	je	0x53
  0x0000028bc119cd3b:   	cmpl	$0x28, %eax
  0x0000028bc119cd3e:   	jne	0x2e
  0x0000028bc119cd44:   	movq	%r11, %rax
  0x0000028bc119cd47:   	pushq	%rcx
  0x0000028bc119cd48:   	pushq	%rdi
  0x0000028bc119cd49:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119cd53:   	incl	(%rcx)
  0x0000028bc119cd55:   	movq	0x30(%r10), %rdi
  0x0000028bc119cd59:   	movl	(%rdi), %ecx
  0x0000028bc119cd5b:   	addq	$0x8, %rdi
  0x0000028bc119cd5f:   	testq	%rax, %rax
  0x0000028bc119cd62:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119cd65:   	popq	%rdi
  0x0000028bc119cd66:   	popq	%rcx
  0x0000028bc119cd67:   	jne	0x9
  0x0000028bc119cd69:   	movq	%r11, 0x28(%r10)
  0x0000028bc119cd6d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119cd72:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119cd7c:   	andq	$-0x10, %rsp
  0x0000028bc119cd80:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cd8a:   	callq	*%r10
  0x0000028bc119cd8d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119cd8e:   	movl	0xc(%rdi), %eax
  0x0000028bc119cd91:   	shrl	$0x18, %eax
  0x0000028bc119cd94:   	andl	$0xf, %eax
  0x0000028bc119cd97:   	cmpl	$0x7, %eax
  0x0000028bc119cd9a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119cda0:   	movabsq	$0x28bdc33e330, %rcx;   {external_word}
  0x0000028bc119cdaa:   	andq	$-0x10, %rsp
  0x0000028bc119cdae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cdb8:   	callq	*%r10
  0x0000028bc119cdbb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119cdbc:   	movl	0x24(%rdi), %ebx
  0x0000028bc119cdbf:   	pushq	%r10
  0x0000028bc119cdc1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119cdcb:   	cmpq	(%r10), %r12
  0x0000028bc119cdce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119cdd4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119cdde:   	andq	$-0x10, %rsp
  0x0000028bc119cde2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cdec:   	callq	*%r10
  0x0000028bc119cdef:   	hlt
  0x0000028bc119cdf0:   	popq	%r10
  0x0000028bc119cdf2:   	shlq	$0x3, %rbx
  0x0000028bc119cdf6:   	movq	0x10(%rbx), %rbx
  0x0000028bc119cdfa:   	testq	%rbx, %rbx
  0x0000028bc119cdfd:   	je	0x3
  0x0000028bc119ce03:   	jmpq	*0x58(%rbx)
  0x0000028bc119ce06:   	jmp	-0x5358eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119ce0b:   	hlt
  0x0000028bc119ce0c:   	hlt
  0x0000028bc119ce0d:   	hlt
  0x0000028bc119ce0e:   	hlt
  0x0000028bc119ce0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3888  131     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLIL)D (native)
 total in heap  [0x0000028bc119ca10,0x0000028bc119ce10] = 1024
 relocation     [0x0000028bc119cb70,0x0000028bc119cc00] = 144
 main code      [0x0000028bc119cc00,0x0000028bc119ce0b] = 523
 stub code      [0x0000028bc119ce0b,0x0000028bc119ce10] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cce48} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)D' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119cc00:   	testq	%rdi, %rdi
  0x0000028bc119cc03:   	je	0x40
  0x0000028bc119cc09:   	pushq	%rdi
  0x0000028bc119cc0a:   	pushq	%r10
  0x0000028bc119cc0c:   	movl	0x8(%rdi), %edi
  0x0000028bc119cc0f:   	movabsq	$0x800000000, %r10
  0x0000028bc119cc19:   	addq	%r10, %rdi
  0x0000028bc119cc1c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119cc26:   	cmpq	(%r10), %rdi
  0x0000028bc119cc29:   	je	0x36
  0x0000028bc119cc2f:   	movq	0x40(%rdi), %rdi
  0x0000028bc119cc33:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119cc3d:   	cmpq	(%r10), %rdi
  0x0000028bc119cc40:   	je	0x1f
  0x0000028bc119cc46:   	popq	%r10
  0x0000028bc119cc48:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119cc49:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119cc53:   	andq	$-0x10, %rsp
  0x0000028bc119cc57:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cc61:   	callq	*%r10
  0x0000028bc119cc64:   	hlt
 ;; L_ok:
  0x0000028bc119cc65:   	popq	%r10
  0x0000028bc119cc67:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119cc68:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119cc6b:   	movl	0x8(%rdx), %r10d
  0x0000028bc119cc6f:   	movabsq	$0x800000000, %r11
  0x0000028bc119cc79:   	addq	%r11, %r10
  0x0000028bc119cc7c:   	movl	0x18(%rdi), %r11d
  0x0000028bc119cc80:   	pushq	%r10
  0x0000028bc119cc82:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119cc8c:   	cmpq	(%r10), %r12
  0x0000028bc119cc8f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119cc95:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119cc9f:   	andq	$-0x10, %rsp
  0x0000028bc119cca3:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119ccad:   	callq	*%r10
  0x0000028bc119ccb0:   	hlt
  0x0000028bc119ccb1:   	popq	%r10
  0x0000028bc119ccb3:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119ccb7:   	testq	%r11, %r11
  0x0000028bc119ccba:   	je	0x41
  0x0000028bc119ccc0:   	pushq	%rdi
  0x0000028bc119ccc1:   	pushq	%r10
  0x0000028bc119ccc3:   	movl	0x8(%r11), %edi
  0x0000028bc119ccc7:   	movabsq	$0x800000000, %r10
  0x0000028bc119ccd1:   	addq	%r10, %rdi
  0x0000028bc119ccd4:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119ccde:   	cmpq	(%r10), %rdi
  0x0000028bc119cce1:   	je	0x36
  0x0000028bc119cce7:   	movq	0x40(%rdi), %rdi
  0x0000028bc119cceb:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119ccf5:   	cmpq	(%r10), %rdi
  0x0000028bc119ccf8:   	je	0x1f
  0x0000028bc119ccfe:   	popq	%r10
  0x0000028bc119cd00:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119cd01:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119cd0b:   	andq	$-0x10, %rsp
  0x0000028bc119cd0f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cd19:   	callq	*%r10
  0x0000028bc119cd1c:   	hlt
 ;; L_ok:
  0x0000028bc119cd1d:   	popq	%r10
  0x0000028bc119cd1f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119cd20:   	movq	0x10(%r11), %r11
  0x0000028bc119cd24:   	cmpq	%r11, %r10
  0x0000028bc119cd27:   	je	0x61
  0x0000028bc119cd2d:   	movl	0x1c(%r11), %eax
  0x0000028bc119cd31:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119cd35:   	je	0x53
  0x0000028bc119cd3b:   	cmpl	$0x28, %eax
  0x0000028bc119cd3e:   	jne	0x2e
  0x0000028bc119cd44:   	movq	%r11, %rax
  0x0000028bc119cd47:   	pushq	%rcx
  0x0000028bc119cd48:   	pushq	%rdi
  0x0000028bc119cd49:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119cd53:   	incl	(%rcx)
  0x0000028bc119cd55:   	movq	0x30(%r10), %rdi
  0x0000028bc119cd59:   	movl	(%rdi), %ecx
  0x0000028bc119cd5b:   	addq	$0x8, %rdi
  0x0000028bc119cd5f:   	testq	%rax, %rax
  0x0000028bc119cd62:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119cd65:   	popq	%rdi
  0x0000028bc119cd66:   	popq	%rcx
  0x0000028bc119cd67:   	jne	0x9
  0x0000028bc119cd69:   	movq	%r11, 0x28(%r10)
  0x0000028bc119cd6d:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119cd72:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119cd7c:   	andq	$-0x10, %rsp
  0x0000028bc119cd80:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cd8a:   	callq	*%r10
  0x0000028bc119cd8d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119cd8e:   	movl	0xc(%rdi), %eax
  0x0000028bc119cd91:   	shrl	$0x18, %eax
  0x0000028bc119cd94:   	andl	$0xf, %eax
  0x0000028bc119cd97:   	cmpl	$0x7, %eax
  0x0000028bc119cd9a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119cda0:   	movabsq	$0x28bdc33e330, %rcx;   {external_word}
  0x0000028bc119cdaa:   	andq	$-0x10, %rsp
  0x0000028bc119cdae:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cdb8:   	callq	*%r10
  0x0000028bc119cdbb:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119cdbc:   	movl	0x24(%rdi), %ebx
  0x0000028bc119cdbf:   	pushq	%r10
  0x0000028bc119cdc1:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119cdcb:   	cmpq	(%r10), %r12
  0x0000028bc119cdce:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119cdd4:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119cdde:   	andq	$-0x10, %rsp
  0x0000028bc119cde2:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119cdec:   	callq	*%r10
  0x0000028bc119cdef:   	hlt
  0x0000028bc119cdf0:   	popq	%r10
  0x0000028bc119cdf2:   	shlq	$0x3, %rbx
  0x0000028bc119cdf6:   	movq	0x10(%rbx), %rbx
  0x0000028bc119cdfa:   	testq	%rbx, %rbx
  0x0000028bc119cdfd:   	je	0x3
  0x0000028bc119ce03:   	jmpq	*0x58(%rbx)
  0x0000028bc119ce06:   	jmp	-0x5358eb           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119ce0b:   	hlt
  0x0000028bc119ce0c:   	hlt
  0x0000028bc119ce0d:   	hlt
  0x0000028bc119ce0e:   	hlt
  0x0000028bc119ce0f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3905  132     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)D (native)
 total in heap  [0x0000028bc119ce90,0x0000028bc119d108] = 632
 relocation     [0x0000028bc119cff0,0x0000028bc119d038] = 72
 main code      [0x0000028bc119d040,0x0000028bc119d103] = 195
 stub code      [0x0000028bc119d103,0x0000028bc119d108] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ceeb8} 'invokeBasic' '(Ljava/lang/Object;)D' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119d040:   	movl	0x14(%rdx), %ebx
  0x0000028bc119d043:   	pushq	%r10
  0x0000028bc119d045:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d04f:   	cmpq	(%r10), %r12
  0x0000028bc119d052:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d058:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d062:   	andq	$-0x10, %rsp
  0x0000028bc119d066:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d070:   	callq	*%r10
  0x0000028bc119d073:   	hlt
  0x0000028bc119d074:   	popq	%r10
  0x0000028bc119d076:   	shlq	$0x3, %rbx
  0x0000028bc119d07a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119d07d:   	pushq	%r10
  0x0000028bc119d07f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d089:   	cmpq	(%r10), %r12
  0x0000028bc119d08c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d092:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d09c:   	andq	$-0x10, %rsp
  0x0000028bc119d0a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d0aa:   	callq	*%r10
  0x0000028bc119d0ad:   	hlt
  0x0000028bc119d0ae:   	popq	%r10
  0x0000028bc119d0b0:   	shlq	$0x3, %rbx
  0x0000028bc119d0b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119d0b7:   	pushq	%r10
  0x0000028bc119d0b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d0c3:   	cmpq	(%r10), %r12
  0x0000028bc119d0c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d0cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d0d6:   	andq	$-0x10, %rsp
  0x0000028bc119d0da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d0e4:   	callq	*%r10
  0x0000028bc119d0e7:   	hlt
  0x0000028bc119d0e8:   	popq	%r10
  0x0000028bc119d0ea:   	shlq	$0x3, %rbx
  0x0000028bc119d0ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119d0f2:   	testq	%rbx, %rbx
  0x0000028bc119d0f5:   	je	0x3
  0x0000028bc119d0fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119d0fe:   	jmp	-0x535be3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119d103:   	hlt
  0x0000028bc119d104:   	hlt
  0x0000028bc119d105:   	hlt
  0x0000028bc119d106:   	hlt
  0x0000028bc119d107:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3907  132     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)D (native)
 total in heap  [0x0000028bc119ce90,0x0000028bc119d108] = 632
 relocation     [0x0000028bc119cff0,0x0000028bc119d038] = 72
 main code      [0x0000028bc119d040,0x0000028bc119d103] = 195
 stub code      [0x0000028bc119d103,0x0000028bc119d108] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ceeb8} 'invokeBasic' '(Ljava/lang/Object;)D' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119d040:   	movl	0x14(%rdx), %ebx
  0x0000028bc119d043:   	pushq	%r10
  0x0000028bc119d045:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d04f:   	cmpq	(%r10), %r12
  0x0000028bc119d052:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d058:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d062:   	andq	$-0x10, %rsp
  0x0000028bc119d066:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d070:   	callq	*%r10
  0x0000028bc119d073:   	hlt
  0x0000028bc119d074:   	popq	%r10
  0x0000028bc119d076:   	shlq	$0x3, %rbx
  0x0000028bc119d07a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119d07d:   	pushq	%r10
  0x0000028bc119d07f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d089:   	cmpq	(%r10), %r12
  0x0000028bc119d08c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d092:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d09c:   	andq	$-0x10, %rsp
  0x0000028bc119d0a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d0aa:   	callq	*%r10
  0x0000028bc119d0ad:   	hlt
  0x0000028bc119d0ae:   	popq	%r10
  0x0000028bc119d0b0:   	shlq	$0x3, %rbx
  0x0000028bc119d0b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119d0b7:   	pushq	%r10
  0x0000028bc119d0b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d0c3:   	cmpq	(%r10), %r12
  0x0000028bc119d0c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d0cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d0d6:   	andq	$-0x10, %rsp
  0x0000028bc119d0da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d0e4:   	callq	*%r10
  0x0000028bc119d0e7:   	hlt
  0x0000028bc119d0e8:   	popq	%r10
  0x0000028bc119d0ea:   	shlq	$0x3, %rbx
  0x0000028bc119d0ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119d0f2:   	testq	%rbx, %rbx
  0x0000028bc119d0f5:   	je	0x3
  0x0000028bc119d0fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119d0fe:   	jmp	-0x535be3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119d103:   	hlt
  0x0000028bc119d104:   	hlt
  0x0000028bc119d105:   	hlt
  0x0000028bc119d106:   	hlt
  0x0000028bc119d107:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3909  133     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)D (native)
 total in heap  [0x0000028bc119d190,0x0000028bc119d590] = 1024
 relocation     [0x0000028bc119d2f0,0x0000028bc119d380] = 144
 main code      [0x0000028bc119d380,0x0000028bc119d58e] = 526
 stub code      [0x0000028bc119d58e,0x0000028bc119d590] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ceff0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)D' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119d380:   	testq	%r9, %r9
  0x0000028bc119d383:   	je	0x41
  0x0000028bc119d389:   	pushq	%rdi
  0x0000028bc119d38a:   	pushq	%r10
  0x0000028bc119d38c:   	movl	0x8(%r9), %edi
  0x0000028bc119d390:   	movabsq	$0x800000000, %r10
  0x0000028bc119d39a:   	addq	%r10, %rdi
  0x0000028bc119d39d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119d3a7:   	cmpq	(%r10), %rdi
  0x0000028bc119d3aa:   	je	0x36
  0x0000028bc119d3b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc119d3b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119d3be:   	cmpq	(%r10), %rdi
  0x0000028bc119d3c1:   	je	0x1f
  0x0000028bc119d3c7:   	popq	%r10
  0x0000028bc119d3c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119d3ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119d3d4:   	andq	$-0x10, %rsp
  0x0000028bc119d3d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d3e2:   	callq	*%r10
  0x0000028bc119d3e5:   	hlt
 ;; L_ok:
  0x0000028bc119d3e6:   	popq	%r10
  0x0000028bc119d3e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119d3e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119d3ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc119d3f0:   	movabsq	$0x800000000, %r11
  0x0000028bc119d3fa:   	addq	%r11, %r10
  0x0000028bc119d3fd:   	movl	0x18(%r9), %r11d
  0x0000028bc119d401:   	pushq	%r10
  0x0000028bc119d403:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d40d:   	cmpq	(%r10), %r12
  0x0000028bc119d410:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d416:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d420:   	andq	$-0x10, %rsp
  0x0000028bc119d424:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d42e:   	callq	*%r10
  0x0000028bc119d431:   	hlt
  0x0000028bc119d432:   	popq	%r10
  0x0000028bc119d434:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119d438:   	testq	%r11, %r11
  0x0000028bc119d43b:   	je	0x41
  0x0000028bc119d441:   	pushq	%rdi
  0x0000028bc119d442:   	pushq	%r10
  0x0000028bc119d444:   	movl	0x8(%r11), %edi
  0x0000028bc119d448:   	movabsq	$0x800000000, %r10
  0x0000028bc119d452:   	addq	%r10, %rdi
  0x0000028bc119d455:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119d45f:   	cmpq	(%r10), %rdi
  0x0000028bc119d462:   	je	0x36
  0x0000028bc119d468:   	movq	0x40(%rdi), %rdi
  0x0000028bc119d46c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119d476:   	cmpq	(%r10), %rdi
  0x0000028bc119d479:   	je	0x1f
  0x0000028bc119d47f:   	popq	%r10
  0x0000028bc119d481:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119d482:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119d48c:   	andq	$-0x10, %rsp
  0x0000028bc119d490:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d49a:   	callq	*%r10
  0x0000028bc119d49d:   	hlt
 ;; L_ok:
  0x0000028bc119d49e:   	popq	%r10
  0x0000028bc119d4a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119d4a1:   	movq	0x10(%r11), %r11
  0x0000028bc119d4a5:   	cmpq	%r11, %r10
  0x0000028bc119d4a8:   	je	0x61
  0x0000028bc119d4ae:   	movl	0x1c(%r11), %eax
  0x0000028bc119d4b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119d4b6:   	je	0x53
  0x0000028bc119d4bc:   	cmpl	$0x28, %eax
  0x0000028bc119d4bf:   	jne	0x2e
  0x0000028bc119d4c5:   	movq	%r11, %rax
  0x0000028bc119d4c8:   	pushq	%rcx
  0x0000028bc119d4c9:   	pushq	%rdi
  0x0000028bc119d4ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119d4d4:   	incl	(%rcx)
  0x0000028bc119d4d6:   	movq	0x30(%r10), %rdi
  0x0000028bc119d4da:   	movl	(%rdi), %ecx
  0x0000028bc119d4dc:   	addq	$0x8, %rdi
  0x0000028bc119d4e0:   	testq	%rax, %rax
  0x0000028bc119d4e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119d4e6:   	popq	%rdi
  0x0000028bc119d4e7:   	popq	%rcx
  0x0000028bc119d4e8:   	jne	0x9
  0x0000028bc119d4ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc119d4ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119d4f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119d4fd:   	andq	$-0x10, %rsp
  0x0000028bc119d501:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d50b:   	callq	*%r10
  0x0000028bc119d50e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119d50f:   	movl	0xc(%r9), %eax
  0x0000028bc119d513:   	shrl	$0x18, %eax
  0x0000028bc119d516:   	andl	$0xf, %eax
  0x0000028bc119d519:   	cmpl	$0x7, %eax
  0x0000028bc119d51c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119d522:   	movabsq	$0x28bdc33cb30, %rcx;   {external_word}
  0x0000028bc119d52c:   	andq	$-0x10, %rsp
  0x0000028bc119d530:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d53a:   	callq	*%r10
  0x0000028bc119d53d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119d53e:   	movl	0x24(%r9), %ebx
  0x0000028bc119d542:   	pushq	%r10
  0x0000028bc119d544:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d54e:   	cmpq	(%r10), %r12
  0x0000028bc119d551:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d557:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d561:   	andq	$-0x10, %rsp
  0x0000028bc119d565:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d56f:   	callq	*%r10
  0x0000028bc119d572:   	hlt
  0x0000028bc119d573:   	popq	%r10
  0x0000028bc119d575:   	shlq	$0x3, %rbx
  0x0000028bc119d579:   	movq	0x10(%rbx), %rbx
  0x0000028bc119d57d:   	testq	%rbx, %rbx
  0x0000028bc119d580:   	je	0x3
  0x0000028bc119d586:   	jmpq	*0x58(%rbx)
  0x0000028bc119d589:   	jmp	-0x53606e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119d58e:   	hlt
  0x0000028bc119d58f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3913  133     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)D (native)
 total in heap  [0x0000028bc119d190,0x0000028bc119d590] = 1024
 relocation     [0x0000028bc119d2f0,0x0000028bc119d380] = 144
 main code      [0x0000028bc119d380,0x0000028bc119d58e] = 526
 stub code      [0x0000028bc119d58e,0x0000028bc119d590] = 2

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84ceff0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)D' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
 ;; verify_klass {
  0x0000028bc119d380:   	testq	%r9, %r9
  0x0000028bc119d383:   	je	0x41
  0x0000028bc119d389:   	pushq	%rdi
  0x0000028bc119d38a:   	pushq	%r10
  0x0000028bc119d38c:   	movl	0x8(%r9), %edi
  0x0000028bc119d390:   	movabsq	$0x800000000, %r10
  0x0000028bc119d39a:   	addq	%r10, %rdi
  0x0000028bc119d39d:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119d3a7:   	cmpq	(%r10), %rdi
  0x0000028bc119d3aa:   	je	0x36
  0x0000028bc119d3b0:   	movq	0x40(%rdi), %rdi
  0x0000028bc119d3b4:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119d3be:   	cmpq	(%r10), %rdi
  0x0000028bc119d3c1:   	je	0x1f
  0x0000028bc119d3c7:   	popq	%r10
  0x0000028bc119d3c9:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119d3ca:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119d3d4:   	andq	$-0x10, %rsp
  0x0000028bc119d3d8:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d3e2:   	callq	*%r10
  0x0000028bc119d3e5:   	hlt
 ;; L_ok:
  0x0000028bc119d3e6:   	popq	%r10
  0x0000028bc119d3e8:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119d3e9:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119d3ec:   	movl	0x8(%rdx), %r10d
  0x0000028bc119d3f0:   	movabsq	$0x800000000, %r11
  0x0000028bc119d3fa:   	addq	%r11, %r10
  0x0000028bc119d3fd:   	movl	0x18(%r9), %r11d
  0x0000028bc119d401:   	pushq	%r10
  0x0000028bc119d403:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d40d:   	cmpq	(%r10), %r12
  0x0000028bc119d410:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d416:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d420:   	andq	$-0x10, %rsp
  0x0000028bc119d424:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d42e:   	callq	*%r10
  0x0000028bc119d431:   	hlt
  0x0000028bc119d432:   	popq	%r10
  0x0000028bc119d434:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119d438:   	testq	%r11, %r11
  0x0000028bc119d43b:   	je	0x41
  0x0000028bc119d441:   	pushq	%rdi
  0x0000028bc119d442:   	pushq	%r10
  0x0000028bc119d444:   	movl	0x8(%r11), %edi
  0x0000028bc119d448:   	movabsq	$0x800000000, %r10
  0x0000028bc119d452:   	addq	%r10, %rdi
  0x0000028bc119d455:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119d45f:   	cmpq	(%r10), %rdi
  0x0000028bc119d462:   	je	0x36
  0x0000028bc119d468:   	movq	0x40(%rdi), %rdi
  0x0000028bc119d46c:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119d476:   	cmpq	(%r10), %rdi
  0x0000028bc119d479:   	je	0x1f
  0x0000028bc119d47f:   	popq	%r10
  0x0000028bc119d481:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119d482:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119d48c:   	andq	$-0x10, %rsp
  0x0000028bc119d490:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d49a:   	callq	*%r10
  0x0000028bc119d49d:   	hlt
 ;; L_ok:
  0x0000028bc119d49e:   	popq	%r10
  0x0000028bc119d4a0:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119d4a1:   	movq	0x10(%r11), %r11
  0x0000028bc119d4a5:   	cmpq	%r11, %r10
  0x0000028bc119d4a8:   	je	0x61
  0x0000028bc119d4ae:   	movl	0x1c(%r11), %eax
  0x0000028bc119d4b2:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119d4b6:   	je	0x53
  0x0000028bc119d4bc:   	cmpl	$0x28, %eax
  0x0000028bc119d4bf:   	jne	0x2e
  0x0000028bc119d4c5:   	movq	%r11, %rax
  0x0000028bc119d4c8:   	pushq	%rcx
  0x0000028bc119d4c9:   	pushq	%rdi
  0x0000028bc119d4ca:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119d4d4:   	incl	(%rcx)
  0x0000028bc119d4d6:   	movq	0x30(%r10), %rdi
  0x0000028bc119d4da:   	movl	(%rdi), %ecx
  0x0000028bc119d4dc:   	addq	$0x8, %rdi
  0x0000028bc119d4e0:   	testq	%rax, %rax
  0x0000028bc119d4e3:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119d4e6:   	popq	%rdi
  0x0000028bc119d4e7:   	popq	%rcx
  0x0000028bc119d4e8:   	jne	0x9
  0x0000028bc119d4ea:   	movq	%r11, 0x28(%r10)
  0x0000028bc119d4ee:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119d4f3:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119d4fd:   	andq	$-0x10, %rsp
  0x0000028bc119d501:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d50b:   	callq	*%r10
  0x0000028bc119d50e:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119d50f:   	movl	0xc(%r9), %eax
  0x0000028bc119d513:   	shrl	$0x18, %eax
  0x0000028bc119d516:   	andl	$0xf, %eax
  0x0000028bc119d519:   	cmpl	$0x7, %eax
  0x0000028bc119d51c:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119d522:   	movabsq	$0x28bdc33cb30, %rcx;   {external_word}
  0x0000028bc119d52c:   	andq	$-0x10, %rsp
  0x0000028bc119d530:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d53a:   	callq	*%r10
  0x0000028bc119d53d:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119d53e:   	movl	0x24(%r9), %ebx
  0x0000028bc119d542:   	pushq	%r10
  0x0000028bc119d544:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d54e:   	cmpq	(%r10), %r12
  0x0000028bc119d551:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d557:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d561:   	andq	$-0x10, %rsp
  0x0000028bc119d565:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d56f:   	callq	*%r10
  0x0000028bc119d572:   	hlt
  0x0000028bc119d573:   	popq	%r10
  0x0000028bc119d575:   	shlq	$0x3, %rbx
  0x0000028bc119d579:   	movq	0x10(%rbx), %rbx
  0x0000028bc119d57d:   	testq	%rbx, %rbx
  0x0000028bc119d580:   	je	0x3
  0x0000028bc119d586:   	jmpq	*0x58(%rbx)
  0x0000028bc119d589:   	jmp	-0x53606e           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119d58e:   	hlt
  0x0000028bc119d58f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3924  134     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLLLLLLLLLLLLL)I (native)
 total in heap  [0x0000028bc119d610,0x0000028bc119d888] = 632
 relocation     [0x0000028bc119d770,0x0000028bc119d7b8] = 72
 main code      [0x0000028bc119d7c0,0x0000028bc119d883] = 195
 stub code      [0x0000028bc119d883,0x0000028bc119d888] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cf3b0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  # parm11:   [sp+0x30]   = 'java/lang/Object'
  # parm12:   [sp+0x38]   = 'java/lang/Object'
  # parm13:   [sp+0x40]   = 'java/lang/Object'
  # parm14:   [sp+0x48]   = 'java/lang/Object'
  # parm15:   [sp+0x50]   = 'java/lang/Object'
  # parm16:   [sp+0x58]   = 'java/lang/Object'
  # parm17:   [sp+0x60]   = 'java/lang/Object'
  # parm18:   [sp+0x68]   = 'java/lang/Object'
  # parm19:   [sp+0x70]   = 'java/lang/Object'
  # parm20:   [sp+0x78]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc119d7c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119d7c3:   	pushq	%r10
  0x0000028bc119d7c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d7cf:   	cmpq	(%r10), %r12
  0x0000028bc119d7d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d7d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d7e2:   	andq	$-0x10, %rsp
  0x0000028bc119d7e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d7f0:   	callq	*%r10
  0x0000028bc119d7f3:   	hlt
  0x0000028bc119d7f4:   	popq	%r10
  0x0000028bc119d7f6:   	shlq	$0x3, %rbx
  0x0000028bc119d7fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119d7fd:   	pushq	%r10
  0x0000028bc119d7ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d809:   	cmpq	(%r10), %r12
  0x0000028bc119d80c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d812:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d81c:   	andq	$-0x10, %rsp
  0x0000028bc119d820:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d82a:   	callq	*%r10
  0x0000028bc119d82d:   	hlt
  0x0000028bc119d82e:   	popq	%r10
  0x0000028bc119d830:   	shlq	$0x3, %rbx
  0x0000028bc119d834:   	movl	0x24(%rbx), %ebx
  0x0000028bc119d837:   	pushq	%r10
  0x0000028bc119d839:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d843:   	cmpq	(%r10), %r12
  0x0000028bc119d846:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d84c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d856:   	andq	$-0x10, %rsp
  0x0000028bc119d85a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d864:   	callq	*%r10
  0x0000028bc119d867:   	hlt
  0x0000028bc119d868:   	popq	%r10
  0x0000028bc119d86a:   	shlq	$0x3, %rbx
  0x0000028bc119d86e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119d872:   	testq	%rbx, %rbx
  0x0000028bc119d875:   	je	0x3
  0x0000028bc119d87b:   	jmpq	*0x58(%rbx)
  0x0000028bc119d87e:   	jmp	-0x536363           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119d883:   	hlt
  0x0000028bc119d884:   	hlt
  0x0000028bc119d885:   	hlt
  0x0000028bc119d886:   	hlt
  0x0000028bc119d887:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3929  134     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLLLLLLLLLLLLL)I (native)
 total in heap  [0x0000028bc119d610,0x0000028bc119d888] = 632
 relocation     [0x0000028bc119d770,0x0000028bc119d7b8] = 72
 main code      [0x0000028bc119d7c0,0x0000028bc119d883] = 195
 stub code      [0x0000028bc119d883,0x0000028bc119d888] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cf3b0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  # parm11:   [sp+0x30]   = 'java/lang/Object'
  # parm12:   [sp+0x38]   = 'java/lang/Object'
  # parm13:   [sp+0x40]   = 'java/lang/Object'
  # parm14:   [sp+0x48]   = 'java/lang/Object'
  # parm15:   [sp+0x50]   = 'java/lang/Object'
  # parm16:   [sp+0x58]   = 'java/lang/Object'
  # parm17:   [sp+0x60]   = 'java/lang/Object'
  # parm18:   [sp+0x68]   = 'java/lang/Object'
  # parm19:   [sp+0x70]   = 'java/lang/Object'
  # parm20:   [sp+0x78]   = 'java/lang/Object'
 ;; jump_to_lambda_form {
  0x0000028bc119d7c0:   	movl	0x14(%rdx), %ebx
  0x0000028bc119d7c3:   	pushq	%r10
  0x0000028bc119d7c5:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d7cf:   	cmpq	(%r10), %r12
  0x0000028bc119d7d2:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d7d8:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d7e2:   	andq	$-0x10, %rsp
  0x0000028bc119d7e6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d7f0:   	callq	*%r10
  0x0000028bc119d7f3:   	hlt
  0x0000028bc119d7f4:   	popq	%r10
  0x0000028bc119d7f6:   	shlq	$0x3, %rbx
  0x0000028bc119d7fa:   	movl	0x28(%rbx), %ebx
  0x0000028bc119d7fd:   	pushq	%r10
  0x0000028bc119d7ff:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d809:   	cmpq	(%r10), %r12
  0x0000028bc119d80c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d812:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d81c:   	andq	$-0x10, %rsp
  0x0000028bc119d820:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d82a:   	callq	*%r10
  0x0000028bc119d82d:   	hlt
  0x0000028bc119d82e:   	popq	%r10
  0x0000028bc119d830:   	shlq	$0x3, %rbx
  0x0000028bc119d834:   	movl	0x24(%rbx), %ebx
  0x0000028bc119d837:   	pushq	%r10
  0x0000028bc119d839:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119d843:   	cmpq	(%r10), %r12
  0x0000028bc119d846:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119d84c:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119d856:   	andq	$-0x10, %rsp
  0x0000028bc119d85a:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119d864:   	callq	*%r10
  0x0000028bc119d867:   	hlt
  0x0000028bc119d868:   	popq	%r10
  0x0000028bc119d86a:   	shlq	$0x3, %rbx
  0x0000028bc119d86e:   	movq	0x10(%rbx), %rbx
  0x0000028bc119d872:   	testq	%rbx, %rbx
  0x0000028bc119d875:   	je	0x3
  0x0000028bc119d87b:   	jmpq	*0x58(%rbx)
  0x0000028bc119d87e:   	jmp	-0x536363           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119d883:   	hlt
  0x0000028bc119d884:   	hlt
  0x0000028bc119d885:   	hlt
  0x0000028bc119d886:   	hlt
  0x0000028bc119d887:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3934  135     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLLLLLLLLLLLLL)I (native)
 total in heap  [0x0000028bc119d910,0x0000028bc119dd18] = 1032
 relocation     [0x0000028bc119da70,0x0000028bc119db00] = 144
 main code      [0x0000028bc119db00,0x0000028bc119dd13] = 531
 stub code      [0x0000028bc119dd13,0x0000028bc119dd18] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cf4e8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = 'java/lang/Object'
  # parm13:   [sp+0x38]   = 'java/lang/Object'
  # parm14:   [sp+0x40]   = 'java/lang/Object'
  # parm15:   [sp+0x48]   = 'java/lang/Object'
  # parm16:   [sp+0x50]   = 'java/lang/Object'
  # parm17:   [sp+0x58]   = 'java/lang/Object'
  # parm18:   [sp+0x60]   = 'java/lang/Object'
  # parm19:   [sp+0x68]   = 'java/lang/Object'
  # parm20:   [sp+0x70]   = 'java/lang/Object'
  # parm21:   [sp+0x78]   = 'java/lang/Object'
  # parm22:   [sp+0x80]   = 'java/lang/invoke/MemberName'
  0x0000028bc119db00:   	movq	0x88(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc119db08:   	testq	%rbx, %rbx
  0x0000028bc119db0b:   	je	0x40
  0x0000028bc119db11:   	pushq	%rdi
  0x0000028bc119db12:   	pushq	%r10
  0x0000028bc119db14:   	movl	0x8(%rbx), %edi
  0x0000028bc119db17:   	movabsq	$0x800000000, %r10
  0x0000028bc119db21:   	addq	%r10, %rdi
  0x0000028bc119db24:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119db2e:   	cmpq	(%r10), %rdi
  0x0000028bc119db31:   	je	0x36
  0x0000028bc119db37:   	movq	0x40(%rdi), %rdi
  0x0000028bc119db3b:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119db45:   	cmpq	(%r10), %rdi
  0x0000028bc119db48:   	je	0x1f
  0x0000028bc119db4e:   	popq	%r10
  0x0000028bc119db50:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119db51:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119db5b:   	andq	$-0x10, %rsp
  0x0000028bc119db5f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119db69:   	callq	*%r10
  0x0000028bc119db6c:   	hlt
 ;; L_ok:
  0x0000028bc119db6d:   	popq	%r10
  0x0000028bc119db6f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119db70:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119db73:   	movl	0x8(%rdx), %r10d
  0x0000028bc119db77:   	movabsq	$0x800000000, %r11
  0x0000028bc119db81:   	addq	%r11, %r10
  0x0000028bc119db84:   	movl	0x18(%rbx), %r11d
  0x0000028bc119db88:   	pushq	%r10
  0x0000028bc119db8a:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119db94:   	cmpq	(%r10), %r12
  0x0000028bc119db97:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119db9d:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119dba7:   	andq	$-0x10, %rsp
  0x0000028bc119dbab:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dbb5:   	callq	*%r10
  0x0000028bc119dbb8:   	hlt
  0x0000028bc119dbb9:   	popq	%r10
  0x0000028bc119dbbb:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119dbbf:   	testq	%r11, %r11
  0x0000028bc119dbc2:   	je	0x41
  0x0000028bc119dbc8:   	pushq	%rdi
  0x0000028bc119dbc9:   	pushq	%r10
  0x0000028bc119dbcb:   	movl	0x8(%r11), %edi
  0x0000028bc119dbcf:   	movabsq	$0x800000000, %r10
  0x0000028bc119dbd9:   	addq	%r10, %rdi
  0x0000028bc119dbdc:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119dbe6:   	cmpq	(%r10), %rdi
  0x0000028bc119dbe9:   	je	0x36
  0x0000028bc119dbef:   	movq	0x40(%rdi), %rdi
  0x0000028bc119dbf3:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119dbfd:   	cmpq	(%r10), %rdi
  0x0000028bc119dc00:   	je	0x1f
  0x0000028bc119dc06:   	popq	%r10
  0x0000028bc119dc08:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119dc09:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119dc13:   	andq	$-0x10, %rsp
  0x0000028bc119dc17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dc21:   	callq	*%r10
  0x0000028bc119dc24:   	hlt
 ;; L_ok:
  0x0000028bc119dc25:   	popq	%r10
  0x0000028bc119dc27:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119dc28:   	movq	0x10(%r11), %r11
  0x0000028bc119dc2c:   	cmpq	%r11, %r10
  0x0000028bc119dc2f:   	je	0x61
  0x0000028bc119dc35:   	movl	0x1c(%r11), %eax
  0x0000028bc119dc39:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119dc3d:   	je	0x53
  0x0000028bc119dc43:   	cmpl	$0x28, %eax
  0x0000028bc119dc46:   	jne	0x2e
  0x0000028bc119dc4c:   	movq	%r11, %rax
  0x0000028bc119dc4f:   	pushq	%rcx
  0x0000028bc119dc50:   	pushq	%rdi
  0x0000028bc119dc51:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119dc5b:   	incl	(%rcx)
  0x0000028bc119dc5d:   	movq	0x30(%r10), %rdi
  0x0000028bc119dc61:   	movl	(%rdi), %ecx
  0x0000028bc119dc63:   	addq	$0x8, %rdi
  0x0000028bc119dc67:   	testq	%rax, %rax
  0x0000028bc119dc6a:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119dc6d:   	popq	%rdi
  0x0000028bc119dc6e:   	popq	%rcx
  0x0000028bc119dc6f:   	jne	0x9
  0x0000028bc119dc71:   	movq	%r11, 0x28(%r10)
  0x0000028bc119dc75:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119dc7a:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119dc84:   	andq	$-0x10, %rsp
  0x0000028bc119dc88:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dc92:   	callq	*%r10
  0x0000028bc119dc95:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119dc96:   	movl	0xc(%rbx), %eax
  0x0000028bc119dc99:   	shrl	$0x18, %eax
  0x0000028bc119dc9c:   	andl	$0xf, %eax
  0x0000028bc119dc9f:   	cmpl	$0x7, %eax
  0x0000028bc119dca2:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119dca8:   	movabsq	$0x28bdc33d5b0, %rcx;   {external_word}
  0x0000028bc119dcb2:   	andq	$-0x10, %rsp
  0x0000028bc119dcb6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dcc0:   	callq	*%r10
  0x0000028bc119dcc3:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119dcc4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119dcc7:   	pushq	%r10
  0x0000028bc119dcc9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119dcd3:   	cmpq	(%r10), %r12
  0x0000028bc119dcd6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119dcdc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119dce6:   	andq	$-0x10, %rsp
  0x0000028bc119dcea:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dcf4:   	callq	*%r10
  0x0000028bc119dcf7:   	hlt
  0x0000028bc119dcf8:   	popq	%r10
  0x0000028bc119dcfa:   	shlq	$0x3, %rbx
  0x0000028bc119dcfe:   	movq	0x10(%rbx), %rbx
  0x0000028bc119dd02:   	testq	%rbx, %rbx
  0x0000028bc119dd05:   	je	0x3
  0x0000028bc119dd0b:   	jmpq	*0x58(%rbx)
  0x0000028bc119dd0e:   	jmp	-0x5367f3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119dd13:   	hlt
  0x0000028bc119dd14:   	hlt
  0x0000028bc119dd15:   	hlt
  0x0000028bc119dd16:   	hlt
  0x0000028bc119dd17:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3941  135     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLLLLLLLLLLLLL)I (native)
 total in heap  [0x0000028bc119d910,0x0000028bc119dd18] = 1032
 relocation     [0x0000028bc119da70,0x0000028bc119db00] = 144
 main code      [0x0000028bc119db00,0x0000028bc119dd13] = 531
 stub code      [0x0000028bc119dd13,0x0000028bc119dd18] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cf4e8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = 'java/lang/Object'
  # parm13:   [sp+0x38]   = 'java/lang/Object'
  # parm14:   [sp+0x40]   = 'java/lang/Object'
  # parm15:   [sp+0x48]   = 'java/lang/Object'
  # parm16:   [sp+0x50]   = 'java/lang/Object'
  # parm17:   [sp+0x58]   = 'java/lang/Object'
  # parm18:   [sp+0x60]   = 'java/lang/Object'
  # parm19:   [sp+0x68]   = 'java/lang/Object'
  # parm20:   [sp+0x70]   = 'java/lang/Object'
  # parm21:   [sp+0x78]   = 'java/lang/Object'
  # parm22:   [sp+0x80]   = 'java/lang/invoke/MemberName'
  0x0000028bc119db00:   	movq	0x88(%rsp), %rbx
 ;; verify_klass {
  0x0000028bc119db08:   	testq	%rbx, %rbx
  0x0000028bc119db0b:   	je	0x40
  0x0000028bc119db11:   	pushq	%rdi
  0x0000028bc119db12:   	pushq	%r10
  0x0000028bc119db14:   	movl	0x8(%rbx), %edi
  0x0000028bc119db17:   	movabsq	$0x800000000, %r10
  0x0000028bc119db21:   	addq	%r10, %rdi
  0x0000028bc119db24:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119db2e:   	cmpq	(%r10), %rdi
  0x0000028bc119db31:   	je	0x36
  0x0000028bc119db37:   	movq	0x40(%rdi), %rdi
  0x0000028bc119db3b:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119db45:   	cmpq	(%r10), %rdi
  0x0000028bc119db48:   	je	0x1f
  0x0000028bc119db4e:   	popq	%r10
  0x0000028bc119db50:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119db51:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119db5b:   	andq	$-0x10, %rsp
  0x0000028bc119db5f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119db69:   	callq	*%r10
  0x0000028bc119db6c:   	hlt
 ;; L_ok:
  0x0000028bc119db6d:   	popq	%r10
  0x0000028bc119db6f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119db70:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119db73:   	movl	0x8(%rdx), %r10d
  0x0000028bc119db77:   	movabsq	$0x800000000, %r11
  0x0000028bc119db81:   	addq	%r11, %r10
  0x0000028bc119db84:   	movl	0x18(%rbx), %r11d
  0x0000028bc119db88:   	pushq	%r10
  0x0000028bc119db8a:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119db94:   	cmpq	(%r10), %r12
  0x0000028bc119db97:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119db9d:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119dba7:   	andq	$-0x10, %rsp
  0x0000028bc119dbab:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dbb5:   	callq	*%r10
  0x0000028bc119dbb8:   	hlt
  0x0000028bc119dbb9:   	popq	%r10
  0x0000028bc119dbbb:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119dbbf:   	testq	%r11, %r11
  0x0000028bc119dbc2:   	je	0x41
  0x0000028bc119dbc8:   	pushq	%rdi
  0x0000028bc119dbc9:   	pushq	%r10
  0x0000028bc119dbcb:   	movl	0x8(%r11), %edi
  0x0000028bc119dbcf:   	movabsq	$0x800000000, %r10
  0x0000028bc119dbd9:   	addq	%r10, %rdi
  0x0000028bc119dbdc:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119dbe6:   	cmpq	(%r10), %rdi
  0x0000028bc119dbe9:   	je	0x36
  0x0000028bc119dbef:   	movq	0x40(%rdi), %rdi
  0x0000028bc119dbf3:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119dbfd:   	cmpq	(%r10), %rdi
  0x0000028bc119dc00:   	je	0x1f
  0x0000028bc119dc06:   	popq	%r10
  0x0000028bc119dc08:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119dc09:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119dc13:   	andq	$-0x10, %rsp
  0x0000028bc119dc17:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dc21:   	callq	*%r10
  0x0000028bc119dc24:   	hlt
 ;; L_ok:
  0x0000028bc119dc25:   	popq	%r10
  0x0000028bc119dc27:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119dc28:   	movq	0x10(%r11), %r11
  0x0000028bc119dc2c:   	cmpq	%r11, %r10
  0x0000028bc119dc2f:   	je	0x61
  0x0000028bc119dc35:   	movl	0x1c(%r11), %eax
  0x0000028bc119dc39:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119dc3d:   	je	0x53
  0x0000028bc119dc43:   	cmpl	$0x28, %eax
  0x0000028bc119dc46:   	jne	0x2e
  0x0000028bc119dc4c:   	movq	%r11, %rax
  0x0000028bc119dc4f:   	pushq	%rcx
  0x0000028bc119dc50:   	pushq	%rdi
  0x0000028bc119dc51:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119dc5b:   	incl	(%rcx)
  0x0000028bc119dc5d:   	movq	0x30(%r10), %rdi
  0x0000028bc119dc61:   	movl	(%rdi), %ecx
  0x0000028bc119dc63:   	addq	$0x8, %rdi
  0x0000028bc119dc67:   	testq	%rax, %rax
  0x0000028bc119dc6a:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119dc6d:   	popq	%rdi
  0x0000028bc119dc6e:   	popq	%rcx
  0x0000028bc119dc6f:   	jne	0x9
  0x0000028bc119dc71:   	movq	%r11, 0x28(%r10)
  0x0000028bc119dc75:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119dc7a:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119dc84:   	andq	$-0x10, %rsp
  0x0000028bc119dc88:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dc92:   	callq	*%r10
  0x0000028bc119dc95:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119dc96:   	movl	0xc(%rbx), %eax
  0x0000028bc119dc99:   	shrl	$0x18, %eax
  0x0000028bc119dc9c:   	andl	$0xf, %eax
  0x0000028bc119dc9f:   	cmpl	$0x7, %eax
  0x0000028bc119dca2:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119dca8:   	movabsq	$0x28bdc33d5b0, %rcx;   {external_word}
  0x0000028bc119dcb2:   	andq	$-0x10, %rsp
  0x0000028bc119dcb6:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dcc0:   	callq	*%r10
  0x0000028bc119dcc3:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119dcc4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119dcc7:   	pushq	%r10
  0x0000028bc119dcc9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119dcd3:   	cmpq	(%r10), %r12
  0x0000028bc119dcd6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119dcdc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119dce6:   	andq	$-0x10, %rsp
  0x0000028bc119dcea:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dcf4:   	callq	*%r10
  0x0000028bc119dcf7:   	hlt
  0x0000028bc119dcf8:   	popq	%r10
  0x0000028bc119dcfa:   	shlq	$0x3, %rbx
  0x0000028bc119dcfe:   	movq	0x10(%rbx), %rbx
  0x0000028bc119dd02:   	testq	%rbx, %rbx
  0x0000028bc119dd05:   	je	0x3
  0x0000028bc119dd0b:   	jmpq	*0x58(%rbx)
  0x0000028bc119dd0e:   	jmp	-0x5367f3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119dd13:   	hlt
  0x0000028bc119dd14:   	hlt
  0x0000028bc119dd15:   	hlt
  0x0000028bc119dd16:   	hlt
  0x0000028bc119dd17:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3965  136     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)I (native)
 total in heap  [0x0000028bc119dd90,0x0000028bc119e008] = 632
 relocation     [0x0000028bc119def0,0x0000028bc119df38] = 72
 main code      [0x0000028bc119df40,0x0000028bc119e003] = 195
 stub code      [0x0000028bc119e003,0x0000028bc119e008] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cfe68} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119df40:   	movl	0x14(%rdx), %ebx
  0x0000028bc119df43:   	pushq	%r10
  0x0000028bc119df45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119df4f:   	cmpq	(%r10), %r12
  0x0000028bc119df52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119df58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119df62:   	andq	$-0x10, %rsp
  0x0000028bc119df66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119df70:   	callq	*%r10
  0x0000028bc119df73:   	hlt
  0x0000028bc119df74:   	popq	%r10
  0x0000028bc119df76:   	shlq	$0x3, %rbx
  0x0000028bc119df7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119df7d:   	pushq	%r10
  0x0000028bc119df7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119df89:   	cmpq	(%r10), %r12
  0x0000028bc119df8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119df92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119df9c:   	andq	$-0x10, %rsp
  0x0000028bc119dfa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dfaa:   	callq	*%r10
  0x0000028bc119dfad:   	hlt
  0x0000028bc119dfae:   	popq	%r10
  0x0000028bc119dfb0:   	shlq	$0x3, %rbx
  0x0000028bc119dfb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119dfb7:   	pushq	%r10
  0x0000028bc119dfb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119dfc3:   	cmpq	(%r10), %r12
  0x0000028bc119dfc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119dfcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119dfd6:   	andq	$-0x10, %rsp
  0x0000028bc119dfda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dfe4:   	callq	*%r10
  0x0000028bc119dfe7:   	hlt
  0x0000028bc119dfe8:   	popq	%r10
  0x0000028bc119dfea:   	shlq	$0x3, %rbx
  0x0000028bc119dfee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119dff2:   	testq	%rbx, %rbx
  0x0000028bc119dff5:   	je	0x3
  0x0000028bc119dffb:   	jmpq	*0x58(%rbx)
  0x0000028bc119dffe:   	jmp	-0x536ae3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119e003:   	hlt
  0x0000028bc119e004:   	hlt
  0x0000028bc119e005:   	hlt
  0x0000028bc119e006:   	hlt
  0x0000028bc119e007:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3970  136     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)I (native)
 total in heap  [0x0000028bc119dd90,0x0000028bc119e008] = 632
 relocation     [0x0000028bc119def0,0x0000028bc119df38] = 72
 main code      [0x0000028bc119df40,0x0000028bc119e003] = 195
 stub code      [0x0000028bc119e003,0x0000028bc119e008] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84cfe68} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
 ;; jump_to_lambda_form {
  0x0000028bc119df40:   	movl	0x14(%rdx), %ebx
  0x0000028bc119df43:   	pushq	%r10
  0x0000028bc119df45:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119df4f:   	cmpq	(%r10), %r12
  0x0000028bc119df52:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119df58:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119df62:   	andq	$-0x10, %rsp
  0x0000028bc119df66:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119df70:   	callq	*%r10
  0x0000028bc119df73:   	hlt
  0x0000028bc119df74:   	popq	%r10
  0x0000028bc119df76:   	shlq	$0x3, %rbx
  0x0000028bc119df7a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119df7d:   	pushq	%r10
  0x0000028bc119df7f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119df89:   	cmpq	(%r10), %r12
  0x0000028bc119df8c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119df92:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119df9c:   	andq	$-0x10, %rsp
  0x0000028bc119dfa0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dfaa:   	callq	*%r10
  0x0000028bc119dfad:   	hlt
  0x0000028bc119dfae:   	popq	%r10
  0x0000028bc119dfb0:   	shlq	$0x3, %rbx
  0x0000028bc119dfb4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119dfb7:   	pushq	%r10
  0x0000028bc119dfb9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119dfc3:   	cmpq	(%r10), %r12
  0x0000028bc119dfc6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119dfcc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119dfd6:   	andq	$-0x10, %rsp
  0x0000028bc119dfda:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119dfe4:   	callq	*%r10
  0x0000028bc119dfe7:   	hlt
  0x0000028bc119dfe8:   	popq	%r10
  0x0000028bc119dfea:   	shlq	$0x3, %rbx
  0x0000028bc119dfee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119dff2:   	testq	%rbx, %rbx
  0x0000028bc119dff5:   	je	0x3
  0x0000028bc119dffb:   	jmpq	*0x58(%rbx)
  0x0000028bc119dffe:   	jmp	-0x536ae3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119e003:   	hlt
  0x0000028bc119e004:   	hlt
  0x0000028bc119e005:   	hlt
  0x0000028bc119e006:   	hlt
  0x0000028bc119e007:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3981  137     n 0       java.lang.invoke.MethodHandle::invokeBasic(JJIDDIDDDDDDDDDDDDDDDDD)I (native)
 total in heap  [0x0000028bc119e090,0x0000028bc119e308] = 632
 relocation     [0x0000028bc119e1f0,0x0000028bc119e238] = 72
 main code      [0x0000028bc119e240,0x0000028bc119e303] = 195
 stub code      [0x0000028bc119e303,0x0000028bc119e308] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84d2cf8} 'invokeBasic' '(JJIDDIDDDDDDDDDDDDDDDDD)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  # parm3:    xmm0:xmm0   = double
  # parm4:    xmm1:xmm1   = double
  # parm5:    rsi       = int
  # parm6:    xmm2:xmm2   = double
  # parm7:    xmm3:xmm3   = double
  # parm8:    xmm4:xmm4   = double
  # parm9:    xmm5:xmm5   = double
  # parm10:   xmm6:xmm6   = double
  # parm11:   xmm7:xmm7   = double
  # parm12:   [sp+0x0]   = double  (sp of caller)
  # parm13:   [sp+0x8]   = double
  # parm14:   [sp+0x10]   = double
  # parm15:   [sp+0x18]   = double
  # parm16:   [sp+0x20]   = double
  # parm17:   [sp+0x28]   = double
  # parm18:   [sp+0x30]   = double
  # parm19:   [sp+0x38]   = double
  # parm20:   [sp+0x40]   = double
  # parm21:   [sp+0x48]   = double
  # parm22:   [sp+0x50]   = double
 ;; jump_to_lambda_form {
  0x0000028bc119e240:   	movl	0x14(%rdx), %ebx
  0x0000028bc119e243:   	pushq	%r10
  0x0000028bc119e245:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e24f:   	cmpq	(%r10), %r12
  0x0000028bc119e252:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e258:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e262:   	andq	$-0x10, %rsp
  0x0000028bc119e266:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e270:   	callq	*%r10
  0x0000028bc119e273:   	hlt
  0x0000028bc119e274:   	popq	%r10
  0x0000028bc119e276:   	shlq	$0x3, %rbx
  0x0000028bc119e27a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119e27d:   	pushq	%r10
  0x0000028bc119e27f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e289:   	cmpq	(%r10), %r12
  0x0000028bc119e28c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e292:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e29c:   	andq	$-0x10, %rsp
  0x0000028bc119e2a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e2aa:   	callq	*%r10
  0x0000028bc119e2ad:   	hlt
  0x0000028bc119e2ae:   	popq	%r10
  0x0000028bc119e2b0:   	shlq	$0x3, %rbx
  0x0000028bc119e2b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119e2b7:   	pushq	%r10
  0x0000028bc119e2b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e2c3:   	cmpq	(%r10), %r12
  0x0000028bc119e2c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e2cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e2d6:   	andq	$-0x10, %rsp
  0x0000028bc119e2da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e2e4:   	callq	*%r10
  0x0000028bc119e2e7:   	hlt
  0x0000028bc119e2e8:   	popq	%r10
  0x0000028bc119e2ea:   	shlq	$0x3, %rbx
  0x0000028bc119e2ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119e2f2:   	testq	%rbx, %rbx
  0x0000028bc119e2f5:   	je	0x3
  0x0000028bc119e2fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119e2fe:   	jmp	-0x536de3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119e303:   	hlt
  0x0000028bc119e304:   	hlt
  0x0000028bc119e305:   	hlt
  0x0000028bc119e306:   	hlt
  0x0000028bc119e307:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3984  137     n 0       java.lang.invoke.MethodHandle::invokeBasic(JJIDDIDDDDDDDDDDDDDDDDD)I (native)
 total in heap  [0x0000028bc119e090,0x0000028bc119e308] = 632
 relocation     [0x0000028bc119e1f0,0x0000028bc119e238] = 72
 main code      [0x0000028bc119e240,0x0000028bc119e303] = 195
 stub code      [0x0000028bc119e303,0x0000028bc119e308] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84d2cf8} 'invokeBasic' '(JJIDDIDDDDDDDDDDDDDDDDD)I' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  # parm3:    xmm0:xmm0   = double
  # parm4:    xmm1:xmm1   = double
  # parm5:    rsi       = int
  # parm6:    xmm2:xmm2   = double
  # parm7:    xmm3:xmm3   = double
  # parm8:    xmm4:xmm4   = double
  # parm9:    xmm5:xmm5   = double
  # parm10:   xmm6:xmm6   = double
  # parm11:   xmm7:xmm7   = double
  # parm12:   [sp+0x0]   = double  (sp of caller)
  # parm13:   [sp+0x8]   = double
  # parm14:   [sp+0x10]   = double
  # parm15:   [sp+0x18]   = double
  # parm16:   [sp+0x20]   = double
  # parm17:   [sp+0x28]   = double
  # parm18:   [sp+0x30]   = double
  # parm19:   [sp+0x38]   = double
  # parm20:   [sp+0x40]   = double
  # parm21:   [sp+0x48]   = double
  # parm22:   [sp+0x50]   = double
 ;; jump_to_lambda_form {
  0x0000028bc119e240:   	movl	0x14(%rdx), %ebx
  0x0000028bc119e243:   	pushq	%r10
  0x0000028bc119e245:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e24f:   	cmpq	(%r10), %r12
  0x0000028bc119e252:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e258:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e262:   	andq	$-0x10, %rsp
  0x0000028bc119e266:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e270:   	callq	*%r10
  0x0000028bc119e273:   	hlt
  0x0000028bc119e274:   	popq	%r10
  0x0000028bc119e276:   	shlq	$0x3, %rbx
  0x0000028bc119e27a:   	movl	0x28(%rbx), %ebx
  0x0000028bc119e27d:   	pushq	%r10
  0x0000028bc119e27f:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e289:   	cmpq	(%r10), %r12
  0x0000028bc119e28c:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e292:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e29c:   	andq	$-0x10, %rsp
  0x0000028bc119e2a0:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e2aa:   	callq	*%r10
  0x0000028bc119e2ad:   	hlt
  0x0000028bc119e2ae:   	popq	%r10
  0x0000028bc119e2b0:   	shlq	$0x3, %rbx
  0x0000028bc119e2b4:   	movl	0x24(%rbx), %ebx
  0x0000028bc119e2b7:   	pushq	%r10
  0x0000028bc119e2b9:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e2c3:   	cmpq	(%r10), %r12
  0x0000028bc119e2c6:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e2cc:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e2d6:   	andq	$-0x10, %rsp
  0x0000028bc119e2da:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e2e4:   	callq	*%r10
  0x0000028bc119e2e7:   	hlt
  0x0000028bc119e2e8:   	popq	%r10
  0x0000028bc119e2ea:   	shlq	$0x3, %rbx
  0x0000028bc119e2ee:   	movq	0x10(%rbx), %rbx
  0x0000028bc119e2f2:   	testq	%rbx, %rbx
  0x0000028bc119e2f5:   	je	0x3
  0x0000028bc119e2fb:   	jmpq	*0x58(%rbx)
  0x0000028bc119e2fe:   	jmp	-0x536de3           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
 ;; } jump_to_lambda_form
  0x0000028bc119e303:   	hlt
  0x0000028bc119e304:   	hlt
  0x0000028bc119e305:   	hlt
  0x0000028bc119e306:   	hlt
  0x0000028bc119e307:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
-------------------------- Assembly (native nmethod) ---------------------------

Compiled method (n/a)    3987  138     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJJIDDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119e390,0x0000028bc119e790] = 1024
 relocation     [0x0000028bc119e4f0,0x0000028bc119e580] = 144
 main code      [0x0000028bc119e580,0x0000028bc119e78b] = 523
 stub code      [0x0000028bc119e78b,0x0000028bc119e790] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84d2e30} 'linkToSpecial' '(Ljava/lang/Object;JJIDDIDDDDDDDDDDDDDDDDDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = long
  # parm3:    rdi       = int
  # parm4:    xmm0:xmm0   = double
  # parm5:    xmm1:xmm1   = double
  # parm6:    rsi       = int
  # parm7:    xmm2:xmm2   = double
  # parm8:    xmm3:xmm3   = double
  # parm9:    xmm4:xmm4   = double
  # parm10:   xmm5:xmm5   = double
  # parm11:   xmm6:xmm6   = double
  # parm12:   xmm7:xmm7   = double
  # parm13:   [sp+0x0]   = double  (sp of caller)
  # parm14:   [sp+0x8]   = double
  # parm15:   [sp+0x10]   = double
  # parm16:   [sp+0x18]   = double
  # parm17:   [sp+0x20]   = double
  # parm18:   [sp+0x28]   = double
  # parm19:   [sp+0x30]   = double
  # parm20:   [sp+0x38]   = double
  # parm21:   [sp+0x40]   = double
  # parm22:   [sp+0x48]   = double
  # parm23:   [sp+0x50]   = double
  # parm24:   rcx:rcx   = 'java/lang/invoke/MemberName'
 ;; verify_klass {
  0x0000028bc119e580:   	testq	%rcx, %rcx
  0x0000028bc119e583:   	je	0x40
  0x0000028bc119e589:   	pushq	%rdi
  0x0000028bc119e58a:   	pushq	%r10
  0x0000028bc119e58c:   	movl	0x8(%rcx), %edi
  0x0000028bc119e58f:   	movabsq	$0x800000000, %r10
  0x0000028bc119e599:   	addq	%r10, %rdi
  0x0000028bc119e59c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119e5a6:   	cmpq	(%r10), %rdi
  0x0000028bc119e5a9:   	je	0x36
  0x0000028bc119e5af:   	movq	0x40(%rdi), %rdi
  0x0000028bc119e5b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119e5bd:   	cmpq	(%r10), %rdi
  0x0000028bc119e5c0:   	je	0x1f
  0x0000028bc119e5c6:   	popq	%r10
  0x0000028bc119e5c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119e5c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119e5d3:   	andq	$-0x10, %rsp
  0x0000028bc119e5d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e5e1:   	callq	*%r10
  0x0000028bc119e5e4:   	hlt
 ;; L_ok:
  0x0000028bc119e5e5:   	popq	%r10
  0x0000028bc119e5e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119e5e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119e5eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc119e5ef:   	movabsq	$0x800000000, %r11
  0x0000028bc119e5f9:   	addq	%r11, %r10
  0x0000028bc119e5fc:   	movl	0x18(%rcx), %r11d
  0x0000028bc119e600:   	pushq	%r10
  0x0000028bc119e602:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e60c:   	cmpq	(%r10), %r12
  0x0000028bc119e60f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e615:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e61f:   	andq	$-0x10, %rsp
  0x0000028bc119e623:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e62d:   	callq	*%r10
  0x0000028bc119e630:   	hlt
  0x0000028bc119e631:   	popq	%r10
  0x0000028bc119e633:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119e637:   	testq	%r11, %r11
  0x0000028bc119e63a:   	je	0x41
  0x0000028bc119e640:   	pushq	%rdi
  0x0000028bc119e641:   	pushq	%r10
  0x0000028bc119e643:   	movl	0x8(%r11), %edi
  0x0000028bc119e647:   	movabsq	$0x800000000, %r10
  0x0000028bc119e651:   	addq	%r10, %rdi
  0x0000028bc119e654:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119e65e:   	cmpq	(%r10), %rdi
  0x0000028bc119e661:   	je	0x36
  0x0000028bc119e667:   	movq	0x40(%rdi), %rdi
  0x0000028bc119e66b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119e675:   	cmpq	(%r10), %rdi
  0x0000028bc119e678:   	je	0x1f
  0x0000028bc119e67e:   	popq	%r10
  0x0000028bc119e680:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119e681:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119e68b:   	andq	$-0x10, %rsp
  0x0000028bc119e68f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e699:   	callq	*%r10
  0x0000028bc119e69c:   	hlt
 ;; L_ok:
  0x0000028bc119e69d:   	popq	%r10
  0x0000028bc119e69f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119e6a0:   	movq	0x10(%r11), %r11
  0x0000028bc119e6a4:   	cmpq	%r11, %r10
  0x0000028bc119e6a7:   	je	0x61
  0x0000028bc119e6ad:   	movl	0x1c(%r11), %eax
  0x0000028bc119e6b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119e6b5:   	je	0x53
  0x0000028bc119e6bb:   	cmpl	$0x28, %eax
  0x0000028bc119e6be:   	jne	0x2e
  0x0000028bc119e6c4:   	movq	%r11, %rax
  0x0000028bc119e6c7:   	pushq	%rcx
  0x0000028bc119e6c8:   	pushq	%rdi
  0x0000028bc119e6c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119e6d3:   	incl	(%rcx)
  0x0000028bc119e6d5:   	movq	0x30(%r10), %rdi
  0x0000028bc119e6d9:   	movl	(%rdi), %ecx
  0x0000028bc119e6db:   	addq	$0x8, %rdi
  0x0000028bc119e6df:   	testq	%rax, %rax
  0x0000028bc119e6e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119e6e5:   	popq	%rdi
  0x0000028bc119e6e6:   	popq	%rcx
  0x0000028bc119e6e7:   	jne	0x9
  0x0000028bc119e6e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc119e6ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119e6f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119e6fc:   	andq	$-0x10, %rsp
  0x0000028bc119e700:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e70a:   	callq	*%r10
  0x0000028bc119e70d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119e70e:   	movl	0xc(%rcx), %eax
  0x0000028bc119e711:   	shrl	$0x18, %eax
  0x0000028bc119e714:   	andl	$0xf, %eax
  0x0000028bc119e717:   	cmpl	$0x7, %eax
  0x0000028bc119e71a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119e720:   	movabsq	$0x28bdc33cd30, %rcx;   {external_word}
  0x0000028bc119e72a:   	andq	$-0x10, %rsp
  0x0000028bc119e72e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e738:   	callq	*%r10
  0x0000028bc119e73b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119e73c:   	movl	0x24(%rcx), %ebx
  0x0000028bc119e73f:   	pushq	%r10
  0x0000028bc119e741:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e74b:   	cmpq	(%r10), %r12
  0x0000028bc119e74e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e754:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e75e:   	andq	$-0x10, %rsp
  0x0000028bc119e762:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e76c:   	callq	*%r10
  0x0000028bc119e76f:   	hlt
  0x0000028bc119e770:   	popq	%r10
  0x0000028bc119e772:   	shlq	$0x3, %rbx
  0x0000028bc119e776:   	movq	0x10(%rbx), %rbx
  0x0000028bc119e77a:   	testq	%rbx, %rbx
  0x0000028bc119e77d:   	je	0x3
  0x0000028bc119e783:   	jmpq	*0x58(%rbx)
  0x0000028bc119e786:   	jmp	-0x53726b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119e78b:   	hlt
  0x0000028bc119e78c:   	hlt
  0x0000028bc119e78d:   	hlt
  0x0000028bc119e78e:   	hlt
  0x0000028bc119e78f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Compiled method (n/a)    3992  138     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJJIDDIDDDDDDDDDDDDDDDDDL)I (native)
 total in heap  [0x0000028bc119e390,0x0000028bc119e790] = 1024
 relocation     [0x0000028bc119e4f0,0x0000028bc119e580] = 144
 main code      [0x0000028bc119e580,0x0000028bc119e78b] = 523
 stub code      [0x0000028bc119e78b,0x0000028bc119e790] = 5

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000028bd84d2e30} 'linkToSpecial' '(Ljava/lang/Object;JJIDDIDDDDDDDDDDDDDDDDDLjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = long
  # parm2:    r9:r9     = long
  # parm3:    rdi       = int
  # parm4:    xmm0:xmm0   = double
  # parm5:    xmm1:xmm1   = double
  # parm6:    rsi       = int
  # parm7:    xmm2:xmm2   = double
  # parm8:    xmm3:xmm3   = double
  # parm9:    xmm4:xmm4   = double
  # parm10:   xmm5:xmm5   = double
  # parm11:   xmm6:xmm6   = double
  # parm12:   xmm7:xmm7   = double
  # parm13:   [sp+0x0]   = double  (sp of caller)
  # parm14:   [sp+0x8]   = double
  # parm15:   [sp+0x10]   = double
  # parm16:   [sp+0x18]   = double
  # parm17:   [sp+0x20]   = double
  # parm18:   [sp+0x28]   = double
  # parm19:   [sp+0x30]   = double
  # parm20:   [sp+0x38]   = double
  # parm21:   [sp+0x40]   = double
  # parm22:   [sp+0x48]   = double
  # parm23:   [sp+0x50]   = double
  # parm24:   rcx:rcx   = 'java/lang/invoke/MemberName'
 ;; verify_klass {
  0x0000028bc119e580:   	testq	%rcx, %rcx
  0x0000028bc119e583:   	je	0x40
  0x0000028bc119e589:   	pushq	%rdi
  0x0000028bc119e58a:   	pushq	%r10
  0x0000028bc119e58c:   	movl	0x8(%rcx), %edi
  0x0000028bc119e58f:   	movabsq	$0x800000000, %r10
  0x0000028bc119e599:   	addq	%r10, %rdi
  0x0000028bc119e59c:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119e5a6:   	cmpq	(%r10), %rdi
  0x0000028bc119e5a9:   	je	0x36
  0x0000028bc119e5af:   	movq	0x40(%rdi), %rdi
  0x0000028bc119e5b3:   	movabsq	$0x7ffd012dc6a0, %r10;   {external_word}
  0x0000028bc119e5bd:   	cmpq	(%r10), %rdi
  0x0000028bc119e5c0:   	je	0x1f
  0x0000028bc119e5c6:   	popq	%r10
  0x0000028bc119e5c8:   	popq	%rdi
 ;; MemberName required for invokeVirtual etc.
  0x0000028bc119e5c9:   	movabsq	$0x7ffd00c7a110, %rcx;   {external_word}
  0x0000028bc119e5d3:   	andq	$-0x10, %rsp
  0x0000028bc119e5d7:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e5e1:   	callq	*%r10
  0x0000028bc119e5e4:   	hlt
 ;; L_ok:
  0x0000028bc119e5e5:   	popq	%r10
  0x0000028bc119e5e7:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119e5e8:   	cmpq	(%rdx), %rax
 ;; check_receiver {
  0x0000028bc119e5eb:   	movl	0x8(%rdx), %r10d
  0x0000028bc119e5ef:   	movabsq	$0x800000000, %r11
  0x0000028bc119e5f9:   	addq	%r11, %r10
  0x0000028bc119e5fc:   	movl	0x18(%rcx), %r11d
  0x0000028bc119e600:   	pushq	%r10
  0x0000028bc119e602:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e60c:   	cmpq	(%r10), %r12
  0x0000028bc119e60f:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e615:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e61f:   	andq	$-0x10, %rsp
  0x0000028bc119e623:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e62d:   	callq	*%r10
  0x0000028bc119e630:   	hlt
  0x0000028bc119e631:   	popq	%r10
  0x0000028bc119e633:   	shlq	$0x3, %r11
 ;; verify_klass {
  0x0000028bc119e637:   	testq	%r11, %r11
  0x0000028bc119e63a:   	je	0x41
  0x0000028bc119e640:   	pushq	%rdi
  0x0000028bc119e641:   	pushq	%r10
  0x0000028bc119e643:   	movl	0x8(%r11), %edi
  0x0000028bc119e647:   	movabsq	$0x800000000, %r10
  0x0000028bc119e651:   	addq	%r10, %rdi
  0x0000028bc119e654:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119e65e:   	cmpq	(%r10), %rdi
  0x0000028bc119e661:   	je	0x36
  0x0000028bc119e667:   	movq	0x40(%rdi), %rdi
  0x0000028bc119e66b:   	movabsq	$0x7ffd012dc4c0, %r10;   {external_word}
  0x0000028bc119e675:   	cmpq	(%r10), %rdi
  0x0000028bc119e678:   	je	0x1f
  0x0000028bc119e67e:   	popq	%r10
  0x0000028bc119e680:   	popq	%rdi
 ;; MH argument is a Class
  0x0000028bc119e681:   	movabsq	$0x7ffd00c777a8, %rcx;   {external_word}
  0x0000028bc119e68b:   	andq	$-0x10, %rsp
  0x0000028bc119e68f:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e699:   	callq	*%r10
  0x0000028bc119e69c:   	hlt
 ;; L_ok:
  0x0000028bc119e69d:   	popq	%r10
  0x0000028bc119e69f:   	popq	%rdi
 ;; } verify_klass
  0x0000028bc119e6a0:   	movq	0x10(%r11), %r11
  0x0000028bc119e6a4:   	cmpq	%r11, %r10
  0x0000028bc119e6a7:   	je	0x61
  0x0000028bc119e6ad:   	movl	0x1c(%r11), %eax
  0x0000028bc119e6b1:   	cmpq	(%r10,%rax), %r11
  0x0000028bc119e6b5:   	je	0x53
  0x0000028bc119e6bb:   	cmpl	$0x28, %eax
  0x0000028bc119e6be:   	jne	0x2e
  0x0000028bc119e6c4:   	movq	%r11, %rax
  0x0000028bc119e6c7:   	pushq	%rcx
  0x0000028bc119e6c8:   	pushq	%rdi
  0x0000028bc119e6c9:   	movabsq	$0x7ffd012bea18, %rcx;   {external_word}
  0x0000028bc119e6d3:   	incl	(%rcx)
  0x0000028bc119e6d5:   	movq	0x30(%r10), %rdi
  0x0000028bc119e6d9:   	movl	(%rdi), %ecx
  0x0000028bc119e6db:   	addq	$0x8, %rdi
  0x0000028bc119e6df:   	testq	%rax, %rax
  0x0000028bc119e6e2:   	repne		scasq	%es:(%rdi), %rax
  0x0000028bc119e6e5:   	popq	%rdi
  0x0000028bc119e6e6:   	popq	%rcx
  0x0000028bc119e6e7:   	jne	0x9
  0x0000028bc119e6e9:   	movq	%r11, 0x28(%r10)
  0x0000028bc119e6ed:   	jmp	0x1c
 ;; receiver class disagrees with MemberName.clazz
  0x0000028bc119e6f2:   	movabsq	$0x7ffd00c7a810, %rcx;   {external_word}
  0x0000028bc119e6fc:   	andq	$-0x10, %rsp
  0x0000028bc119e700:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e70a:   	callq	*%r10
  0x0000028bc119e70d:   	hlt
 ;; } check_receiver
 ;; verify_ref_kind {
  0x0000028bc119e70e:   	movl	0xc(%rcx), %eax
  0x0000028bc119e711:   	shrl	$0x18, %eax
  0x0000028bc119e714:   	andl	$0xf, %eax
  0x0000028bc119e717:   	cmpl	$0x7, %eax
  0x0000028bc119e71a:   	je	0x1c
 ;; verify_ref_kind expected 7
  0x0000028bc119e720:   	movabsq	$0x28bdc33cd30, %rcx;   {external_word}
  0x0000028bc119e72a:   	andq	$-0x10, %rsp
  0x0000028bc119e72e:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e738:   	callq	*%r10
  0x0000028bc119e73b:   	hlt
 ;; } verify_ref_kind
  0x0000028bc119e73c:   	movl	0x24(%rcx), %ebx
  0x0000028bc119e73f:   	pushq	%r10
  0x0000028bc119e741:   	movabsq	$0x7ffd011c27d8, %r10;   {external_word}
  0x0000028bc119e74b:   	cmpq	(%r10), %r12
  0x0000028bc119e74e:   	je	0x1c
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x0000028bc119e754:   	movabsq	$0x7ffd00c28a10, %rcx;   {external_word}
  0x0000028bc119e75e:   	andq	$-0x10, %rsp
  0x0000028bc119e762:   	movabsq	$0x7ffcffe67ef0, %r10;   {runtime_call MacroAssembler::debug64}
  0x0000028bc119e76c:   	callq	*%r10
  0x0000028bc119e76f:   	hlt
  0x0000028bc119e770:   	popq	%r10
  0x0000028bc119e772:   	shlq	$0x3, %rbx
  0x0000028bc119e776:   	movq	0x10(%rbx), %rbx
  0x0000028bc119e77a:   	testq	%rbx, %rbx
  0x0000028bc119e77d:   	je	0x3
  0x0000028bc119e783:   	jmpq	*0x58(%rbx)
  0x0000028bc119e786:   	jmp	-0x53726b           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x0000028bc119e78b:   	hlt
  0x0000028bc119e78c:   	hlt
  0x0000028bc119e78d:   	hlt
  0x0000028bc119e78e:   	hlt
  0x0000028bc119e78f:   	hlt
--------------------------------------------------------------------------------
[/Disassembly]
hello(h,1.2345,42,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345,1.2345)
